{"version":3,"sources":["utils/Web3Converter.js","Configuration.js","contexts/WalletContext.js","utils/Format.js","components/dapp/dialogs/core/ModalDialog.js","components/InfoBox.js","components/dapp/dialogs/WalletDialog.js","components/dapp/dialogs/ConnectDialog.js","components/Wallet.js","components/Links.js","components/Navbar.js","Spinner.js","components/dapp/core/Contracts.js","utils/Utils.js","components/dapp/core/Services.js","utils/InterestExtensions.js","components/StyledPopover.js","components/dapp/Enums.js","components/dapp/Token.js","utils/PriceExtensions.js","components/dapp/dialogs/core/RangeInput.js","components/dapp/dialogs/core/DelayedInput.js","components/dapp/Swap.js","components/dapp/Transfer.js","components/dapp/InflowOutflowCalculator.js","components/dapp/TargetPriceCalculator.js","components/dapp/RewardCalculator.js","components/dapp/TokenCalculators.js","components/dapp/GameExtensions.js","components/dapp/Game.js","components/dapp/FarmPoolExtensions.js","components/dapp/FarmPool.js","components/dapp/FarmPools.js","components/dapp/FarmLiquidatable.js","components/dapp/FarmLiquidatables.js","components/dapp/dialogs/BuyCryptoDialog.js","components/dapp/dialogs/SwapDialog.js","components/dapp/dialogs/ApproveRouterDialog.js","components/dapp/dialogs/ApproveHarvesterDialog.js","components/dapp/dialogs/OutcomeList.js","components/dapp/dialogs/GameList.js","components/dapp/dialogs/core/PredefinedValueSelector.js","components/dapp/dialogs/GameBetDialog.js","components/dapp/dialogs/ApproveFarmDialog.js","components/dapp/dialogs/FarmDepositDialog.js","components/dapp/dialogs/AmountSelectionDialog.js","components/dapp/Main.js","components/Routes.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["BN","require","numberToBN","zero","negative1","getValueOfUnit","decimals","pow","numberToString","arg","match","Error","String","toString","toTwos","dividedToIntegerBy","toPrecision","module","exports","fromWei","weiInput","optionsInput","wei","negative","lt","base","baseLength","options","mul","fraction","mod","length","pad","whole","div","commify","replace","value","toWei","etherInput","ether","substring","comps","split","add","Configuration","appsettings","projectName","defaultChainId","parseFloat","percentageYieldInvestmentInStablecoin","slippageTolerance","moralisApiKey","chainId","chains","getChain","nativeCoin","contracts","getContracts","nativeToken","stableToken","swapRouters","defaultSwapRouter","address","getSwapRouters","name","swapFee","map","Map","Object","entries","key","parseInt","getChains","rpcUri","getRpcUris","blockExplorerLink","getBlockExplorerLinks","initialLiquidity","WalletContext","React","createContext","WalletProvider","props","state","self","balance","setBalance","b","setState","disconnect","bind","isInjectedProviderInstalled","getProvider","initializeProvider","initializeWalletConnectProvider","handleChainChanged","handleAccountsChanged","handleChainChangedInternal","handleDisconnect","addEthereumChain","switchOrAddEthereumChain","a","isMobileDevice","test","navigator","userAgent","this","initializeInjectedProvider","getDefaultChainId","signer","givenProvider","unsubscribeProvider","Provider","children","account","undefined","window","ethereum","web3","currentProvider","provider","createWeb3","subscribeProvider","request","method","hexChainId","accounts","error","console","log","WalletConnectProvider","rpc","qrcode","connector","on","err","payload","uri","params","enable","walletMeta","code","message","removeListener","reader","getRpcUri","isSupportedChain","updateReader","Web3","utils","hexToNumber","connected","reason","source","close","then","catch","chainName","nativeCurrencyName","nativeCurrencySymbol","nativeCurrencyDecimals","rpcUrls","blockExplorerUrls","iconUrls","isHex","numberToHex","p","nativeCurrency","symbol","isHexStrict","eth","extend","methods","call","outputFormatter","Component","formatAccount","formatNumber","number","maxDecimals","minDecimals","result","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","format","formatInteger","formatPercentage","assert","formatNumberScaled","Math","min","formatCurrency","currencyDecimals","ModalDialog","style","size","isVerticallyCentered","isScrollable","fullscreen","isOpen","setIsOpen","disableBackgroundCancel","contentStyle","header","body","footer","title","hideTitle","info","hideCloseButton","description","submitButtonText","hideSubmitButton","isSubmitButtonDisabled","cancelButtonText","hideCancelButton","submitted","canceled","className","open","onClose","Overlay","Title","type","onClick","Description","disabled","TitleText","titleClassName","MainText","main","mainClassName","mainUnit","mainUnitClassName","isUnitOnTop","DetailText","detail","detailClassName","detailUnit","detailUnitClassName","InfoText","infoClassName","InfoBox","containerClassName","lineHeight","PriceBox","mainRaw","isMainUnitOnTop","defaultProps","WalletDialog","context","useState","qrCode","setQrCode","useEffect","QRCode","toDataURL","color","dark","light","url","chain","getNativeCoin","src","clipboard","writeText","ConnectDialog","href","target","Wallet","showWalletDialog","showConnectDialog","onTick","initialize","stopTimer","isInitializing","timerId","startTimer","setInterval","interval","clearInterval","getBalance","Links","to","activeclassname","Navbar","isNavbarCollapsed","setIsNavbarCollapsed","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","contextType","Spinner","cx","cy","r","role","createReaderContract","abi","Contract","createSignerContract","MAX_UINT256","contains","str1","str2","RegExp","sleep","ms","Promise","resolve","setTimeout","promisify","inner","reject","res","waitMined","txHash","cb","getTransactionReceipt","receipt","init","readers","from","pair","IUniswapV2Pair","liquidityToken","router","IUniswapV2Router02","token","WeebToken","game","WeebGame","farm","WeebFarm","tokenFinder","TokenFinder","iziSwap","IziSwap","createReaders","signers","createSigners","settings","slippageToleranceKey","getSlippageTolerance","localStorage","getItem","setSlippageTolerance","setItem","getTokenListUri","toHex","convert","formatDateTime","date","parts","Date","toISOString","formatTimespan","timespan","h","m","s","hh","mm","ss","fromWeiNativeCoin","fromWeiNativeToken","fromWeiStableToken","fromWeiMainToken","trimToDecimals","toFixed","index","indexOf","count","substr","toWeiNativeCoin","toWeiNativeToken","toWeiStableToken","toWeiMainToken","pool","depositToken","details","_format","formatToken","block","getBlock","blockId","getAverageBlockTime","blockF","now","blockI","blockTime","timestamp","getTokenReserves","tokenAddress","isTokenFirst","toBN","cmp","getReserves","reserves","tokenReserve","reserve0","nativeTokenReserve","reserve1","getMainTokenReserves","getMainTokenInitialReserves","getInitialLiquidity","initialTokenReserve","initialNativeTokenReserve","quote","sourceRouter","sourceToken","isSourceLiquidityToken","sourceTokenAmount","targetRouter","targetToken","isTargetLiquidityToken","swap","deadline","amountOutMin","send","getTokenPriceInStableToken","isLiquidityToken","depositRouter","getDefaultSwapRouter","creditRouter","amount","getTokenPriceInMainToken","getAmountsOut","amounts","getMainTokenPriceInStableToken","getNativeTokenPriceInStableToken","getMainTokenAmountFromNativeCoin","nativeCoinAmountIn","getNativeCoinAmountFromMainToken","mainTokenAmountIn","swapNativeTokenForMainToken","tokenAmountOutMin","recipient","swapExactETHForTokensSupportingFeeOnTransferTokens","swapMainTokenForNativeToken","amountNativeTokenOutMin","swapExactTokensForETHSupportingFeeOnTransferTokens","balanceOf","IERC20","transfer","getAllowance","owner","spender","allowance","getTokenSnapshot","senderTokenSnapshot","harvestPendingReward","approveRouter","approve","approveGame","isAllowed","minAmount","eq","isAllowanceSatisfied","getSnapshots","isEnabled","senderGameSnapshots","getSenderBetPoolCount","gameId","senderBetPoolCount","getSenderPoolSnapshots","offset","senderPoolSnapshots","getSenderBetPools","senderBetPools","betMainToken","outcome","bet","sourceAmount","gameTokenInfo","sourceAmountInWei","amountOut","amountMin","compound","claim","getDepositTokenSymbol","token0Details","token1Details","conversionRateOf","deposit","creditToken","approveFarm","getSnapshot","senderFarmSnapshot","getLiquidatablesSnapshot","senderFarmLiquidatablesSnapshot","REMOVE_deposit","poolId","withdraw","rebalance","liquidate","liquidateSenderUnchecked","liquidateAccount","investor","getTokenPriceInDepositToken","findAll","DAYS_IN_MONTH","DAYS_IN_YEAR","getDurationPercentageYield","rewardPerBlock","totalStaked","investment","duration","getRewardPerDay","_getRewardPerDay","getRewardPerDuration","StyledPopover","isTooltip","icon","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","styles","attributes","as","Button","ref","Panel","popper","ShowComponentType","freeze","All","Token","Games","Farms","Liquidatables","isDetailed","showCompact","showHeader","isInteractionDisabled","toggleDetailedVisibility","execute","nativeTokenPriceInStableToken","priceInStableToken","priceInNativeToken","swapRouterName","getSwapRouterName","$","tokenExplorerUri","getBlockExplorerLink","contractAddress","senderBalance","senderLockedBalance","senderFreeBalance","senderPendingReward","maximumSupply","initialSupply","totalSupply","senderBalanceShare","totalLockedSupply","senderStakeShare","supplyInContracts","supplyInNonrewardables","totalRewarded","totalTransacted","total","seigniorageFee","rate","seigniorageFeeCollected","collected","seignioryExplorerUri","seigniory","reducedEmissionHolderLimit","isRegularEmission","holders","baseRewardPerBlock","maximumRewardPerBlock","currentRewardPerBlock","transferBurnRate","salesBaseBurnRate","salesMaximumBurnRate","currentSalesBurnRate","rebatableBurnRate","rebateMaximizingShare","rebateShareStepsize","regulationInterval","regulationTimestamp","priceAverage","rewardMultiplier","burnMultiplier","senderRebateRate","senderTransferBurnRate","senderSalesBurnRate","senderTotalRebated","senderTotalBurnt","maxRewardPerD","maxRewardPerW","maxRewardPerM","maxRewardPerY","currentRewardPerD","currentRewardPerW","currentRewardPerM","currentRewardPerY","senderMaxRewardPerD","senderMaxRewardPerW","senderMaxRewardPerM","senderMaxRewardPerY","senderCurrentRewardPerD","senderCurrentRewardPerW","senderCurrentRewardPerM","senderCurrentRewardPerY","pendingPoolReward","rewardLastDistributedBlock","blocksFromRewardLastDistributed","currentBlock","senderTotalHarvested","totalRebated","totalBurnt","totalHarvested","valueInStableToken","getPercentageYieldInvestmentInStablecoin","cdpy","cwpy","cmpy","capy","tooltipSenderPendingRewardText","tooltipMaximumSupplyText","tooltipTotalLockedSupplyText","tooltipRewardMaximizingHoldersText","tooltipSenderTotalRebatedText","tooltipSeigniorageFeeText","popoverSenderBalanceContent","formatMainToken","formatStableToken","popoverSenderTransferBurnRateContent","popoverSenderSalesBurnRateContent","popoverCurrentRewardPerBlockContent","borderBottom","lastHarvest","rel","formatNativeToken","isSenderNonrewardable","isDirectHarvestingEnabled","isSenderDirectHarvester","showHarvestButton","autoFocus","getActivity","isSenderNonburnable","isSenderSeignory","transfers","values","i","push","holder","func","getAmountOut","amount0In","RangeInput","isDisabled","max","percentages","valueClassName","rangeClassName","buttonClassName","setValue","setPercentage","setValueInternal","x","getStep","isNaN","updateValues","n","mx","mn","onValueChanged","e","v","step","onInput","list","items","percentage","setPercentageFormatted","sizeCount","getSelectablePercentages","DelayedInput","delay","id","defaultValue","placeholder","input","setInput","clearTimeout","autoComplete","onChange","Swap","isDarkTheme","nativeCoinBalance","Mode","Buy","Sell","showSlippageTolerance","setShowSlippageTolerance","setIsInteractionDisabled","mode","setMode","setAmount","setRecipient","maxReceived","setMaxReceived","minReceived","setMinReceived","maxPriceImpact","setMaxPriceImpact","minPriceImpact","setMinPriceImpact","tokenBalance","tokenPriceInNativeToken","getSwapRouterSwapFee","finalTokenPriceInNativeToken","Group","checked","Label","formatNativeCoin","htmlFor","isAddress","toLowerCase","Transfer","InflowOutflowCalculator","tokenPriceInStableToken","None","Inflow","Outflow","targetPrice","setTargetPrice","assetAmountRequired","setAssetAmountRequired","factor","quoteAssetAmountRequired","reserveQuoteAsset","sqrt","getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf","baseAssetAmountRequired","reserveBaseAsset","getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf","TargetPriceCalculator","assetAmount","setAssetAmount","outflowBaseAssetAmount","inflowQuoteAssetAmount","RewardCalculator","maxRewardPerBlock","isMaximizedEmission","targetBalance","setTargetBalance","currentRewards","setCurrentRewards","maxRewards","setMaxRewards","TokenCalculators","fromWeiToken","isInflationRegulated","card","getOutcomeText","outcomeCount","getOutcomeImage","width","height","getRandomizeText","Game","showLastBetPool","showSenderLastBetPool","isPoolTotalsVisibile","showYourBetHistory","isLoading","tokenInfo","toggleLastBetPoolVisibility","toggleSenderLastBetPoolVisibility","togglePoolTotalsVisibility","toggleYourBetHistoryVisibility","loadSenderBetPools","minimumBet","isPercentage","unclaimedBalance","senderUnclaimedPrizeBN","senderUnclaimedPrize","winningBet","prize","isPrizeClaimable","currentBetPoolWinningPrize","currentBetPool","statement","senderPrize","currentBetPoolPot","allAggregatedBets","blocksToDraw","currentPoolId","blockLength","timeToDraw","totalPlacedBets","totalPosition","placedBets","totalClaimedBets","claimedBets","totalClaimedPrizes","claimedPrizes","senderAggregatedBets","senderLosingBets","senderPnL","isWinner","popoverGameContent","isCurrentBetPoolSenderUnderWin","isSenderUnderWin","getBetInfo","lastBetPool","senderLastBetPool","getBetPool","betPool","blocksFromDraw","lastBetPoolPot","lastBetPoolWinningPrize","isUnderWin","isWinnerText","winningStatement","allWinningBets","allLosingBets","senderWinningBets","winningBets","losingBets","allBets","bets","sum","payouts","getPayoutOf","getOutcomeNames","getBetCounts","getBetAmounts","getPayouts","senderBets","colSpan","getPopoverWinningStatementAllBetsDetail","getAllBets","getPopoverWinningStatementSenderBetsDetail","getSenderBets","show","loadSenderBetPoolsInternal","remaining","pools","slice","getSupportedSwapRouterName","supportedSwapRouters","FarmPool","formatDepositToken","formatCreditToken","popoverFarmPoolRef","createRef","tooltipSeigniorageFeeRef","depositTokenPriceInStableToken","creditTokenPriceInStableToken","creditMultiplier","depositFeeRate","depositFee","creditLiquidationRate","liquidatorFeeRate","liquidatorFee","senderDeposited","senderPosition","deposited","senderCredited","credited","senderLiquidated","liquidated","senderCreditLiquidationLevel","creditLiquidationLevel","senderCurrentCredit","requiresRebalancing","totalDeposited","totalCredited","totalLiquidated","updatedBlockId","senderTimeFromUpdate","totalTimeFromUpdate","popoverFarmPoolContent","investorCount","infoText","fontSize","FarmPools","SortBy","CreditMultiplier","DepositFee","CreditLiquidationRate","LiquidatorFee","Credited","SortDirection","Ascending","Descending","TokenType","Single","Liquidity","activePools","setActivePools","filter","setFilter","sortBy","setSortBy","sortDirection","setSortDirection","tokenType","setTokenType","totalLiquidityProvided","totalCreditSupplied","reduce","found","supportedSwapRouterName","depositTokenSymbol","sort","y","onSortByChanged","onSortDirectionChanged","onTokenTypeChanged","forEach","getFarmPools","FarmLiquidatable","poolLiquidatable","totalLiquidity","totalLiquidatorFee","getPoolSelfTotals","fee","netLiquidatorFee","getFarmLiquidatables","investorLiquidatables","investorLiquidatable","isSelf","liquidity","liquidatables","liquidatable","prevState","FarmLiquidatables","poolLiquidatables","BuyCryptoDialog","frameBorder","allow","SwapDialog","ApproveRouterDialog","ApproveHarvesterDialog","OutcomeList","defaultOutcome","setOutcome","isActive","getOutcomeList","floor","random","GameList","games","defaultGameId","setGameId","unit","preventDefault","getGameList","PredefinedValueSelector","predefinedValueListTitle","userSuppliedValueTitle","predefinedValues","isValidValue","GameBetDialog","enableGameSelection","enableAmountEntry","tokens","setTokens","selectedToken","setSelectedToken","tokenPriceInMainToken","setTokenPriceInMainToken","setTokenPriceInStableToken","setIsLoading","isValidAddress","setIsValidAddress","get","tooltipHarvestDescriptionText","tooltipPlaceBetDescriptionText","fetch","headers","getMoralisApiKey","response","json","t","token_address","includes","getTokenList","toChecksumAddress","results","getMaxReservesIndex","maxIndex","maxValue","reserveInfo","k","ApproveFarmDialog","FarmDepositDialog","tokenPriceInDepositToken","setTokenPriceInDepositToken","tooltipDescriptionText","depositTokenAmountInWei","AmountSelectionDialog","Main","showBuyCryptoDialog","showSwapDialog","showRouterApproveDialog","callback","showGameApproveDialog","showGameHarvestDialog","showGameCompoundDialog","showGameBetDialog","showFarmApproveDialog","showFarmDepositDialog","showFarmWithdrawDialog","showToken","showComponent","showGames","showFarms","showLiquidatables","gameBet","gameCompound","farmDeposit","farmWithdraw","prevProps","isHomePage","isBuy","alert","JSON","stringify","getGameCards","farmLiquidatables","buyWeeb","farmBuyWeebInternal","selectedTokenAmount","all","set","componentType","isDirectlyHarvestable","selectedGameId","selectedPoolId","amountInWei","Routes","path","element","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10986a1e.chunk.js","sourcesContent":["'use strict';\r\n\r\nvar BN = require('bn.js');\r\nvar numberToBN = require('number-to-bn');\r\n\r\nvar zero = new BN(0);\r\nvar negative1 = new BN(-1);\r\n\r\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getValueOfUnit\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BigNumber} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\r\nfunction getValueOfUnit(decimals) {\r\n    return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nfunction numberToString(arg) {\r\n    if (typeof arg === 'string') {\r\n        if (!arg.match(/^-?[0-9.]+$/)) {\r\n            throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\r\n        }\r\n        return arg;\r\n    } else if (typeof arg === 'number') {\r\n        return String(arg);\r\n    } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\r\n        if (arg.toPrecision) {\r\n            return String(arg.toPrecision());\r\n        } else {\r\n            // eslint-disable-line\r\n            return arg.toString(10);\r\n        }\r\n    }\r\n    throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\r\n}\r\n\r\nfunction fromWei(weiInput, decimals, optionsInput) {\r\n    var wei = numberToBN(weiInput); // eslint-disable-line\r\n    var negative = wei.lt(zero); // eslint-disable-line\r\n    var base = getValueOfUnit(decimals);\r\n    var baseLength = decimals;\r\n    var options = optionsInput || {};\r\n\r\n    if (negative) {\r\n        wei = wei.mul(negative1);\r\n    }\r\n\r\n    var fraction = wei.mod(base).toString(10); // eslint-disable-line\r\n\r\n    while (fraction.length < baseLength) {\r\n        fraction = '0' + fraction;\r\n    }\r\n\r\n    if (!options.pad) {\r\n        fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\r\n    }\r\n\r\n    var whole = wei.div(base).toString(10); // eslint-disable-line\r\n\r\n    if (options.commify) {\r\n        whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\r\n\r\n    if (negative) {\r\n        value = '-' + value;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction toWei(etherInput, decimals) {\r\n    var ether = numberToString(etherInput); // eslint-disable-line\r\n    var base = getValueOfUnit(decimals);\r\n    var baseLength = decimals;\r\n\r\n    // Is it negative?\r\n    var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\r\n    if (negative) {\r\n        ether = ether.substring(1);\r\n    }\r\n\r\n    if (ether === '.') {\r\n        throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\r\n    }\r\n\r\n    // Split it into a whole and fractional part\r\n    var comps = ether.split('.'); // eslint-disable-line\r\n    if (comps.length > 2) {\r\n        throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\r\n    }\r\n\r\n    var whole = comps[0],\r\n        fraction = comps[1]; // eslint-disable-line\r\n\r\n    if (!whole) {\r\n        whole = '0';\r\n    }\r\n    if (!fraction) {\r\n        fraction = '0';\r\n    }\r\n    if (fraction.length > baseLength) {\r\n        throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\r\n    }\r\n\r\n    while (fraction.length < baseLength) {\r\n        fraction += '0';\r\n    }\r\n\r\n    whole = new BN(whole);\r\n    fraction = new BN(fraction);\r\n    var wei = whole.mul(base).add(fraction); // eslint-disable-line\r\n\r\n    if (negative) {\r\n        wei = wei.mul(negative1);\r\n    }\r\n\r\n    return new BN(wei.toString(10), 10);\r\n}\r\n\r\nmodule.exports = {\r\n    numberToString: numberToString,\r\n    getValueOfUnit: getValueOfUnit,\r\n    fromWei: fromWei,\r\n    toWei: toWei\r\n};","import appsettings from \"./appsettings.json\";\r\n\r\nexport default class Configuration {\r\n    static getProjectName() {\r\n        return appsettings.projectName;\r\n    }\r\n\r\n    static getDefaultChainId() {\r\n        return appsettings.defaultChainId;\r\n    }\r\n\r\n    static getPercentageYieldInvestmentInStablecoin() {\r\n        return parseFloat(appsettings.percentageYieldInvestmentInStablecoin);\r\n    }\r\n\r\n    static getSlippageTolerance() {\r\n        return parseFloat(appsettings.slippageTolerance);\r\n    }\r\n\r\n    static getMoralisApiKey() {\r\n        return appsettings.moralisApiKey;\r\n    }\r\n\r\n    static getChain(chainId) {\r\n        return appsettings.chains[chainId];\r\n    }\r\n\r\n    getChain() { }\r\n\r\n    static getNativeCoin(chainId) {\r\n        return Configuration.getChain(chainId).nativeCoin;\r\n    }\r\n\r\n    static getContracts(chainId) {\r\n        return appsettings.chains[chainId].contracts;\r\n    }\r\n\r\n    getContracts() { }\r\n\r\n    static getNativeToken(chainId) {\r\n        return Configuration.getContracts(chainId).nativeToken;\r\n    }\r\n\r\n    static getStableToken(chainId) {\r\n        return Configuration.getContracts(chainId).stableToken;\r\n    }\r\n\r\n    static getSwapRouters(chainId) {\r\n        return Configuration.getContracts(chainId).swapRouters;\r\n    }\r\n\r\n    static getDefaultSwapRouter(chainId) {\r\n        return Configuration.getContracts(chainId).defaultSwapRouter;\r\n    }\r\n\r\n    getSwapRouters() {\r\n        // In order getSwapRouterName to be able to call the static getSwapRouters a non static getSwapRouters has to be defined.\r\n        // Interesting requirement.\r\n    }\r\n\r\n    static getSwapRouterName(chainId, address) {\r\n        return Configuration.getSwapRouters(chainId)[address].name ?? \"Unknown Router\";\r\n    }\r\n\r\n    static getSwapRouterSwapFee(chainId, address) {\r\n        return parseFloat(Configuration.getSwapRouters(chainId)[address].swapFee);\r\n    }\r\n\r\n    static getChains() {\r\n        const map = new Map();\r\n\r\n        for (const [key, value] of Object.entries(appsettings.chains)) {\r\n            map[parseInt(key)] = value.name;\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    static isSupportedChain(chainId) {\r\n        return Configuration.getChains()[chainId] ? true : false;\r\n    }\r\n\r\n    static getRpcUris() {\r\n        const map = new Map();\r\n\r\n        for (const [key, value] of Object.entries(appsettings.chains)) {\r\n            map[parseInt(key)] = value.rpcUri;\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    static getRpcUri(chainId) {\r\n        return Configuration.getRpcUris()[chainId];\r\n    }\r\n\r\n    static getBlockExplorerLinks() {\r\n        const map = new Map();\r\n\r\n        for (const [key, value] of Object.entries(appsettings.chains)) {\r\n            map[parseInt(key)] = value.blockExplorerLink;\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    getBlockExplorerLinks() { }\r\n\r\n    static getBlockExplorerLink(chainId) {\r\n        return Configuration.getBlockExplorerLinks()[chainId];\r\n    }\r\n\r\n    static getInitialLiquidity(chainId) {\r\n        return Configuration.getChain(chainId).initialLiquidity;\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nimport Configuration from \"../Configuration\";\r\n\r\nexport const WalletContext = React.createContext();\r\n\r\nexport default class WalletProvider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            self: this,\r\n            // account: \"0x0000000000000000000000000000000000000000\",\r\n            balance: 0,\r\n            setBalance: b => {\r\n                this.setState({ balance: b });\r\n            },\r\n        }\r\n\r\n        this.disconnect = this.disconnect.bind(this);\r\n        this.isInjectedProviderInstalled = this.isInjectedProviderInstalled.bind(this);\r\n        this.getProvider = this.getProvider.bind(this);\r\n        this.initializeProvider = this.initializeProvider.bind(this);\r\n        this.initializeWalletConnectProvider = this.initializeWalletConnectProvider.bind(this);\r\n\r\n        this.handleChainChanged = this.handleChainChanged.bind(this);\r\n        this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\r\n        this.handleChainChangedInternal = this.handleChainChangedInternal.bind(this);\r\n        this.handleDisconnect = this.handleDisconnect.bind(this);\r\n\r\n        this.addEthereumChain = this.addEthereumChain.bind(this);\r\n        this.switchOrAddEthereumChain = this.switchOrAddEthereumChain.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i.test(navigator.userAgent);\r\n        this.setState({ isMobileDevice });\r\n\r\n        if (this.isInjectedProviderInstalled()) {\r\n            await this.initializeInjectedProvider();\r\n\r\n            this.setState({\r\n                isInjectedProviderInstalled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isInjectedProviderInstalled: false\r\n            });\r\n\r\n            // Start with the default chain till the wallet connect is initialized.\r\n            this.handleChainChangedInternal(Configuration.getDefaultChainId());\r\n            await this.initializeWalletConnectProvider();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.signer && this.state.signer.givenProvider) {\r\n            this.unsubscribeProvider(this.state.signer.givenProvider);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WalletContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </WalletContext.Provider>\r\n        )\r\n    }\r\n\r\n    disconnect() {\r\n        this.handleDisconnect(410, \"User requested disconnect.\");\r\n\r\n        this.setState({\r\n            account: undefined,\r\n            balance: undefined\r\n        });\r\n    }\r\n\r\n    isInjectedProviderInstalled() {\r\n        return typeof window.ethereum !== \"undefined\" ? true : typeof window.web3 !== \"undefined\";\r\n    }\r\n\r\n    getProvider() {\r\n        if (typeof window.ethereum !== \"undefined\") {\r\n            return window.ethereum;\r\n        }\r\n\r\n        if (typeof window.web3 !== \"undefined\") {\r\n            return window.web3.currentProvider;\r\n        }\r\n\r\n        throw \"Provider not found.\";\r\n    }\r\n\r\n    async initializeProvider(provider) {\r\n        const signer = WalletProvider.createWeb3(provider);\r\n\r\n        this.setState({\r\n            provider: provider,\r\n            signer\r\n        });\r\n\r\n        this.subscribeProvider(provider);\r\n\r\n        const hexChainId = await provider.request({ method: \"eth_chainId\" });\r\n        this.handleChainChanged(hexChainId);\r\n\r\n        // Is already connected?\r\n        let accounts = await provider.request({ method: \"eth_accounts\" });\r\n\r\n        if (accounts.length === 0) {\r\n            try {\r\n                // Connect, MetaMask pop-up windows appears. Internally triggers \"accountsChanged\" event.\r\n                await provider.request({ method: \"eth_requestAccounts\" });\r\n            } catch (error) {\r\n                this.setState({ error });\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            this.handleAccountsChanged(accounts);\r\n        }\r\n    }\r\n\r\n    async initializeInjectedProvider() {\r\n        console.log(\"initializing Injected provider.\");\r\n\r\n        const provider = this.getProvider();\r\n        await this.initializeProvider(provider);\r\n    }\r\n\r\n    async initializeWalletConnectProvider() {\r\n        console.log(\"initializing WalletConnect provider.\");\r\n\r\n        const provider = new WalletConnectProvider({\r\n            rpc: Configuration.getRpcUris(),\r\n            qrcode: true,\r\n        });\r\n\r\n        provider.connector.on(\"display_uri\", (err, payload) => {\r\n            const uri = payload.params[0];\r\n            console.log(`WalletConnect QR code: ${uri}`);\r\n            //CustomQRCodeModal.display(uri);\r\n        });\r\n\r\n        try {\r\n            const accounts = await provider.enable();\r\n\r\n            console.log(accounts);\r\n            console.log(provider.walletMeta.name);\r\n\r\n            await this.initializeProvider(provider);\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    subscribeProvider(provider) {\r\n        if (!provider.on) {\r\n            console.log(\"Provider doesn't support events.\");\r\n            return;\r\n        }\r\n\r\n        provider.on(\"chainChanged\", this.handleChainChanged);\r\n        provider.on(\"accountsChanged\", this.handleAccountsChanged);\r\n        provider.on(\"disconnect\", this.handleDisconnect);\r\n    };\r\n\r\n    unsubscribeProvider(provider) {\r\n        if (!provider.on) {\r\n            console.log(\"Provider doesn't support events.\");\r\n            return;\r\n        }\r\n\r\n        provider.removeListener(\"chainChanged\", this.handleChainChanged);\r\n        provider.removeListener(\"accountsChanged\", this.handleAccountsChanged);\r\n        provider.removeListener(\"disconnect\", this.handleDisconnect);\r\n    }\r\n\r\n    updateReader(chainId) {\r\n        this.setState({\r\n            reader: WalletProvider.createWeb3(Configuration.getRpcUri(chainId))\r\n        });\r\n    }\r\n\r\n    handleChainChangedInternal(chainId) {\r\n        this.setState({\r\n            error: undefined,\r\n            chainId\r\n        });\r\n\r\n        if (!Configuration.isSupportedChain(chainId)) {\r\n            this.setState({\r\n                error: `Unsupported chain: ${chainId}`,\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.updateReader(chainId);\r\n    }\r\n\r\n    handleChainChanged(hexChainId) {\r\n        const chainId = Web3.utils.hexToNumber(hexChainId);\r\n        console.log(`chainChanged: ${chainId}`);\r\n        this.handleChainChangedInternal(chainId);\r\n    }\r\n\r\n    handleAccountsChanged(accounts) {\r\n        console.log(`accountsChanged: ${accounts.length}`);\r\n\r\n        if (accounts.length === 0) {\r\n            this.setState({\r\n                error: undefined,\r\n                connected: false,\r\n                account: undefined\r\n            });\r\n            // MetaMask is locked or the user has not connected any accounts\r\n            console.log(\"Please connect to MetaMask.\");\r\n        } else {\r\n            this.setState({\r\n                error: undefined,\r\n                connected: true,\r\n                account: accounts[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDisconnect(code, reason) {\r\n        console.log({ source: \"Disconnect handler.\", code, reason });\r\n\r\n        if (this.state.signer && this.state.signer.currentProvider) {\r\n            if (this.state.signer.currentProvider instanceof WalletConnectProvider) {\r\n                this.setState({\r\n                    signer: undefined\r\n                });\r\n                this.handleAccountsChanged([]);\r\n            } else {\r\n                if (this.state.signer.currentProvider.connected && this.state.signer.currentProvider.close) {\r\n                    this.state.signer.currentProvider.close()\r\n                        .then(() => {\r\n                            this.setState({\r\n                                signer: undefined\r\n                            })\r\n                            this.handleAccountsChanged([]);\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(\"Wallet close failed.\");\r\n                            console.log(error);\r\n                        });\r\n                } else {\r\n                    this.setState({\r\n                        signer: undefined\r\n                    })\r\n                    this.handleAccountsChanged([]);\r\n                }\r\n            }\r\n        } else {\r\n            this.setState({\r\n                signer: undefined\r\n            });\r\n            this.handleAccountsChanged([]);\r\n        }\r\n    }\r\n\r\n    async addEthereumChain(chainId, chainName, nativeCurrencyName, nativeCurrencySymbol, nativeCurrencyDecimals, rpcUrls, blockExplorerUrls, iconUrls) {\r\n        if (!this.state.provider) {\r\n            console.log(\"Provider not set.\");\r\n            return;\r\n        }\r\n\r\n        if (!Web3.utils.isHex(chainId)) {\r\n            chainId = Web3.utils.numberToHex(chainId);\r\n        }\r\n\r\n        const p = {\r\n            chainId: chainId,\r\n            chainName: chainName,\r\n            nativeCurrency: {\r\n                name: nativeCurrencyName,\r\n                symbol: nativeCurrencySymbol,\r\n                decimals: nativeCurrencyDecimals\r\n            },\r\n            rpcUrls: rpcUrls,\r\n            blockExplorerUrls: blockExplorerUrls,\r\n            iconUrls: iconUrls\r\n        };\r\n\r\n        // Returns null - The method returns null if the request was successful, and an error otherwise.\r\n        return this.state.provider.request({ method: \"wallet_addEthereumChain\", params: [p] });\r\n    }\r\n\r\n    async switchOrAddEthereumChain(chainId, chainName, nativeCurrencyName, nativeCurrencySymbol, nativeCurrencyDecimals, rpcUrls, blockExplorerUrls, iconUrls) {\r\n        if (!this.state.provider) {\r\n            console.log(\"Provider not set.\");\r\n            return;\r\n        }\r\n\r\n        if (!Web3.utils.isHexStrict(chainId)) {\r\n            chainId = Web3.utils.numberToHex(chainId);\r\n        }\r\n\r\n        console.log(`Switching to chain: ${chainId}`);\r\n\r\n        try {\r\n            await this.state.provider.request({\r\n                method: \"wallet_switchEthereumChain\",\r\n                params: [{ chainId: chainId }],\r\n            });\r\n        } catch (switchError) {\r\n            if (switchError.code === 4902/*For desktop MM*/ || switchError.code === -32603/*For iPhone MM*/) {\r\n                console.log(`Non-existent chain: ${chainId}. Trying to add.`);\r\n\r\n                try {\r\n                    await this.addEthereumChain(chainId, chainName, nativeCurrencyName, nativeCurrencySymbol, nativeCurrencyDecimals, rpcUrls, blockExplorerUrls, iconUrls);\r\n                } catch (addError) {\r\n                    this.setState({ error: addError.message });\r\n                    console.error(addError);\r\n                }\r\n            } else {\r\n                this.setState({ error: switchError.message });\r\n                console.error(switchError);\r\n            }\r\n        }\r\n    }\r\n\r\n    static createWeb3(provider) {\r\n        const web3 = new Web3(provider);\r\n\r\n        web3.eth.extend({\r\n            methods: [\r\n                {\r\n                    name: \"chainId\",\r\n                    call: \"eth_chainId\",\r\n                    outputFormatter: web3.utils.hexToNumber\r\n                }\r\n            ]\r\n        });\r\n\r\n        return web3;\r\n    }\r\n}\r\n","export function formatAccount(value) {\r\n    return `${value.substring(0, 6)}...${value.substring(value.length - 4)}`;\r\n}\r\n\r\nexport function formatDateTime(date) {\r\n    const parts = new Date(date).toISOString().split(\"T\");\r\n    return `${parts[0]} ${parts[1]}`;\r\n    // .toLocaleString(undefined, {\r\n    //     year: 'numeric',\r\n    //     month: '2-digit',\r\n    //     day: '2-digit',\r\n    //     hour: '2-digit',\r\n    //     hour12: false,\r\n    //     minute: '2-digit',\r\n    //     second: '2-digit'\r\n    // });\r\n}\r\n\r\nexport function formatTimespan(timespan) {\r\n    const h = parseInt(timespan / 3600);\r\n    const r = timespan % 3600;\r\n    const m = parseInt(r / 60);\r\n    const s = parseInt(r % 60);\r\n\r\n    const hh = h < 10 ? `0${h}` : `${h}`;\r\n    const mm = m < 10 ? `0${m}` : `${m}`;\r\n    const ss = s < 10 ? `0${s}` : `${s}`;\r\n\r\n    return `${hh}:${mm}:${ss}`;\r\n}\r\n\r\nfunction formatFloat(value) {\r\n    const parts = value.split(\".\");\r\n\r\n    return (\r\n        <span className=\"number\">\r\n            <span className=\"integer\">\r\n                {parts[0]}\r\n            </span>\r\n            {parts[1] &&\r\n                <span className=\"decimal\">\r\n                    .{parts[1]}\r\n                </span>\r\n            }\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction formatNumber(number, maxDecimals = 2, minDecimals = 0) {\r\n    const result = new Intl.NumberFormat([], {\r\n        maximumFractionDigits: maxDecimals,\r\n        minimumFractionDigits: minDecimals\r\n    }).format(number);\r\n\r\n    return result;\r\n}\r\n\r\nexport function formatInteger(number) {\r\n    return formatNumber(number, 0);\r\n}\r\n\r\nexport function formatPercentage(number, maxDecimals = 2, minDecimals = 0) {\r\n    console.assert(typeof number === \"number\", \"The 'number' is not of numeric type.\");\r\n    return formatNumberScaled(number * 100, maxDecimals, minDecimals);\r\n}\r\n\r\nexport function formatNumberScaled(number, maxDecimals = 2, minDecimals = 0) {\r\n    console.assert(typeof number === \"number\", \"The 'number' is not of numeric type.\");\r\n\r\n    if (number === 0)\r\n        return `${number}`;\r\n\r\n    if (number >= 10000) {\r\n        return formatNumber(number, Math.min(0, maxDecimals), 0);\r\n    }\r\n\r\n    if (number >= 1000) {\r\n        return formatNumber(number, Math.min(1, maxDecimals), 0);\r\n    }\r\n\r\n    if (number >= 100) {\r\n        return formatNumber(number, Math.min(2, maxDecimals), 0);\r\n    }\r\n\r\n    return formatNumber(number, maxDecimals, minDecimals);\r\n}\r\n\r\nexport function formatCurrency(number, currencyDecimals, maxDecimals = 4, minDecimals = 0) {\r\n    return formatNumberScaled(number, Math.min(currencyDecimals, maxDecimals), Math.min(currencyDecimals, minDecimals));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dialog } from \"@headlessui/react\";\r\n\r\nexport default class ModalDialog extends Component {\r\n    static propTypes = {\r\n        disableBackgroundCancel: PropTypes.bool,\r\n        size: PropTypes.string,\r\n        isVerticallyCentered: PropTypes.bool,\r\n        isScrollable: PropTypes.bool,\r\n        fullscreen: PropTypes.string,\r\n        contentStyle: PropTypes.string,\r\n        isOpen: PropTypes.bool,\r\n        setIsOpen: PropTypes.func,\r\n        header: PropTypes.object,\r\n        body: PropTypes.object,\r\n        footer: PropTypes.object,\r\n        title: PropTypes.string,\r\n        hideTitle: PropTypes.bool,\r\n        info: PropTypes.object,\r\n        hideCloseButton: PropTypes.bool,\r\n        description: PropTypes.string,\r\n        submitButtonText: PropTypes.string,\r\n        hideSubmitButton: PropTypes.bool,\r\n        isSubmitButtonDisabled: PropTypes.bool,\r\n        cancelButtonText: PropTypes.string,\r\n        hideCancelButton: PropTypes.bool,\r\n        submitted: PropTypes.func,\r\n        canceled: PropTypes.func,\r\n        result: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disableBackgroundCancel: false,\r\n        isVerticallyCentered: true,\r\n        isScrollable: true,\r\n        fullscreen: null,\r\n        contentStyle: \"card relative w-full max-w-md max-h-[85vh] overflow-y-auto mx-auto bg-violet-50 text-gray-900\",\r\n        isOpen: false,\r\n        setIsOpen: value => {\r\n\r\n        },\r\n        hideTitle: false,\r\n        hideCloseButton: false,\r\n        submitButtonText: \"OK\",\r\n        hideSubmitButton: false,\r\n        isSubmitButtonDisabled: false,\r\n        cancelButtonText: \"Cancel\",\r\n        hideCancelButton: false,\r\n        submitted: async () => {\r\n        },\r\n        canceled: async () => {\r\n        },\r\n        result: async value => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            style: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { size, isVerticallyCentered, isScrollable, fullscreen } = this.props;\r\n\r\n        let style = \"text-dark\";\r\n\r\n        if (size) {\r\n            style += ` ${size}`;\r\n        }\r\n\r\n        if (isVerticallyCentered === true) {\r\n            style += \" modal-dialog-centered\";\r\n        }\r\n\r\n        if (isScrollable === true) {\r\n            style += \" modal-dialog-scrollable\";\r\n        }\r\n\r\n        if (fullscreen) {\r\n            style += ` ${fullscreen}`;\r\n        }\r\n\r\n        this.setState({ style });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isOpen,\r\n            setIsOpen,\r\n            disableBackgroundCancel,\r\n            contentStyle,\r\n            header,\r\n            body,\r\n            footer,\r\n            title,\r\n            hideTitle,\r\n            info,\r\n            hideCloseButton,\r\n            description,\r\n            submitButtonText,\r\n            hideSubmitButton,\r\n            isSubmitButtonDisabled,\r\n            cancelButtonText,\r\n            hideCancelButton,\r\n            submitted,\r\n            canceled,\r\n            result\r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n                open={isOpen}\r\n                onClose={() => {\r\n                    if (!disableBackgroundCancel) {\r\n                        setIsOpen(false);\r\n                    }\r\n                }}\r\n            >\r\n                <div className=\"flex items-center justify-center min-h-screen text-[16px]\">\r\n                    <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\r\n\r\n                    <div className={`modal-content ${contentStyle} bg-gradient-to-r to-indigo-200 from-purple-200`}>\r\n                        {(header || !hideTitle || !hideCloseButton) &&\r\n                            <div className=\"modal-header grid grid-cols-1 gap-x-2 gap-y-3\">\r\n                                {header\r\n                                    ? { header }\r\n                                    : <div className=\"flex items-center justify-between\">\r\n                                        {!hideTitle &&\r\n                                            <Dialog.Title key=\"0\" className=\"\">\r\n                                                {title}\r\n                                            </Dialog.Title>\r\n                                        }\r\n                                        <div className=\"space-x-2\">\r\n                                            {info &&\r\n                                                <button key=\"1\" type=\"button\" className=\"btn text-[2em] leading-none shadow-none btn-close\" aria-label=\"Info\">\r\n                                                    {info}\r\n                                                </button>\r\n                                            }\r\n                                            {!hideCloseButton &&\r\n                                                <button key=\"2\" type=\"button\" className=\"btn text-[2em] leading-none shadow-none btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={async () => {\r\n                                                    await canceled();\r\n\r\n                                                    if (result) {\r\n                                                        result(false);\r\n                                                    }\r\n                                                }}>\r\n                                                    <i className=\"bi bi-x\" />\r\n                                                </button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n\r\n                        {description &&\r\n                            <Dialog.Description className=\"mt-3\">\r\n                                {description}\r\n                            </Dialog.Description>\r\n                        }\r\n\r\n                        <div className=\"modal-body mt-3\">\r\n                            {body}\r\n                        </div>\r\n\r\n                        {(footer || !hideSubmitButton || !hideCancelButton) &&\r\n                            <div className=\"modal-footer mt-8\">\r\n                                {footer\r\n                                    ? { footer }\r\n                                    : <div className=\"flex items-center justify-end space-x-2 text-violet-50 text-[80%]\">\r\n                                        {!hideSubmitButton &&\r\n                                            <button key=\"0\" type=\"button\" className=\"btn btn-green w-28 h-10\" onClick={async () => {\r\n                                                try {\r\n                                                    await submitted();\r\n                                                    console.log(\"Operation succeeded.\");\r\n\r\n                                                    if (result) {\r\n                                                        result(true);\r\n                                                    }\r\n                                                } catch (error) {\r\n                                                    console.error(\"Operation failed.\", error);\r\n\r\n                                                    if (result) {\r\n                                                        result({ error });\r\n                                                    }\r\n                                                }\r\n                                            }} disabled={isSubmitButtonDisabled}>\r\n                                                {submitButtonText}\r\n                                            </button>\r\n                                        }\r\n                                        {!hideCancelButton &&\r\n                                            <button key=\"1\" type=\"button\" className=\"btn btn-dark w-28 h-10\" data-bs-dismiss=\"modal\" aria-label=\"Cancel\" onClick={async () => {\r\n                                                await canceled();\r\n\r\n                                                if (result) {\r\n                                                    result(false);\r\n                                                }\r\n                                            }}>\r\n                                                {cancelButtonText}\r\n                                            </button>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TitleText({\r\n    title,\r\n    titleClassName,\r\n}) {\r\n    return (\r\n        <>\r\n            <span className={`opacity-50 uppercase tracking-wider overflow-ellipsis break-normal text-[0.6875em] ${titleClassName ?? \"\"}`}>\r\n                {title}\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nTitleText.defaultProps = {\r\n};\r\n\r\nexport function MainText({\r\n    main,\r\n    mainClassName,\r\n    mainUnit,\r\n    mainUnitClassName,\r\n    isUnitOnTop\r\n}) {\r\n    return isUnitOnTop\r\n        ? (\r\n            <>\r\n                {mainUnit &&\r\n                    <span className={`uppercase block mb-1 opacity-75 text-[0.75em] ${mainUnitClassName ?? \"\"}`}>\r\n                        {mainUnit}\r\n                    </span>\r\n                }\r\n                {main &&\r\n                    <span className={`numeric text-[1.4em] ${mainClassName ?? \"\"}`}>\r\n                        {main}\r\n                    </span>\r\n                }\r\n            </>\r\n        )\r\n        : (\r\n            <>\r\n                {main &&\r\n                    <span className={`numeric text-[1.4em] ${mainClassName ?? \"\"}`}>\r\n                        {main}\r\n                    </span>\r\n                }\r\n                {mainUnit &&\r\n                    <span className={`uppercase ml-1 opacity-75 text-[0.75em] ${mainUnitClassName ?? \"\"}`}>\r\n                        {mainUnit}\r\n                    </span>\r\n                }\r\n            </>\r\n        );\r\n}\r\n\r\nMainText.defaultProps = {\r\n    isUnitOnTop: false\r\n};\r\n\r\nexport function DetailText({\r\n    detail,\r\n    detailClassName,\r\n    detailUnit,\r\n    detailUnitClassName\r\n}) {\r\n    return (\r\n        <>\r\n            {detail &&\r\n                <span className={`numeric opacity-75 text-[0.75em] ${detailClassName ?? \"\"}`}>\r\n                    {detail}\r\n                </span>\r\n            }\r\n            {detailUnit &&\r\n                <span className={`uppercase ml-1 opacity-50 text-[0.625em] ${detailUnitClassName ?? \"\"}`}>\r\n                    {detailUnit}\r\n                </span>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nDetailText.defaultProps = {\r\n};\r\n\r\nexport function InfoText({\r\n    info,\r\n    infoClassName\r\n}) {\r\n    return (\r\n        <>\r\n            {info &&\r\n                <div className={`numeric mt-2 text-[0.75em] ${infoClassName ?? \"\"}`}>\r\n                    {info}\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nInfoText.defaultProps = {\r\n    infoClassName: \"opacity-25\"\r\n};\r\n\r\nfunction InfoBox({\r\n    containerClassName,\r\n    lineHeight,\r\n    title,\r\n    titleClassName,\r\n    main,\r\n    detail,\r\n    info\r\n}) {\r\n    return (\r\n        <div className={`grid grid-cols-1 auto-rows-min text-center ${lineHeight ?? \"\"} ${containerClassName ?? \"\"}`}>\r\n            <TitleText title={title} titleClassName={titleClassName} />\r\n            {main && <>{main}</>}\r\n            {detail && <>{detail}</>}\r\n            {info && <>{info}</>}\r\n        </div>\r\n    );\r\n}\r\n\r\nInfoBox.defaultProps = {\r\n};\r\n\r\nexport function PriceBox({\r\n    containerClassName,\r\n    lineHeight,\r\n    title,\r\n    titleClassName,\r\n    mainRaw,\r\n    main,\r\n    mainClassName,\r\n    mainUnit,\r\n    mainUnitClassName,\r\n    isMainUnitOnTop,\r\n    detail,\r\n    detailClassName,\r\n    detailUnit,\r\n    detailUnitClassName,\r\n    info,\r\n    infoClassName\r\n}) {\r\n    return <InfoBox\r\n        containerClassName={containerClassName}\r\n        lineHeight={lineHeight}\r\n        title={title}\r\n        titleClassName={titleClassName}\r\n        main={mainRaw\r\n            ? <>{mainRaw}</>\r\n            : (main || mainUnit) &&\r\n            <div className=\"mt-2\">\r\n                <MainText\r\n                    main={main}\r\n                    mainClassName={mainClassName}\r\n                    mainUnit={mainUnit}\r\n                    mainUnitClassName={mainUnitClassName}\r\n                    isUnitOnTop={isMainUnitOnTop}\r\n                />\r\n            </div>}\r\n        detail={(detail || detailUnit) &&\r\n            <div className=\"mt-1\">\r\n                <DetailText\r\n                    detail={detail}\r\n                    detailClassName={detailClassName}\r\n                    detailUnit={detailUnit}\r\n                    detailUnitClassName={detailUnitClassName}\r\n                />\r\n            </div>\r\n        }\r\n        info={(\r\n            <InfoText info={info} infoClassName={infoClassName} />\r\n        )}\r\n    />;\r\n}\r\n\r\nPriceBox.defaultProps = {\r\n    lineHeight: \"leading-none\",\r\n    infoClassName: \"opacity-25\",\r\n    isMainUnitOnTop: false\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\nimport { formatAccount, formatCurrency } from \"../../../utils/Format\";\r\n\r\nimport { PriceBox } from \"../../InfoBox\";\r\n\r\nimport QRCode from \"qrcode\";\r\n\r\nexport default function WalletDialog({ isOpen, setIsOpen, context, canceled }) {\r\n    const [qrCode, setQrCode] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!context.account) {\r\n            setQrCode(undefined);\r\n            return;\r\n        }\r\n\r\n        QRCode.toDataURL(context.account, {\r\n            color: {\r\n                dark: \"#312e81\",\r\n                light: \"#0000\" // Transparent background\r\n            }\r\n        })\r\n            .then(url => {\r\n                setQrCode(url);\r\n                console.log(url);\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    }, [context.account]);\r\n\r\n    const chain = Configuration.getChain(context.chainId);\r\n    const nativeCoin = Configuration.getNativeCoin(context.chainId);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={\r\n                <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 items-center justify-center text-indigo-900\">\r\n                    {context.account &&\r\n                        <>\r\n                            <PriceBox\r\n                                containerClassName=\"col-span-2\"\r\n                                title=\"Connected Account\"\r\n                                main={context.account}\r\n                                mainClassName=\"numeric break-all\"\r\n                            />\r\n                            <img className=\"col-span-2 mx-auto\" src={qrCode} />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-blue h-10 w-48 text-violet-50 text-[0.75em] justify-self-end\"\r\n                                onClick={async () => {\r\n                                    try {\r\n                                        await navigator.clipboard.writeText(context.account);\r\n                                        console.log(\"The wallet address is copied.\");\r\n                                    } catch (error) {\r\n                                        console.error(\"Failed to copy the wallet address: \", error);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i className=\"bi bi-clipboard mr-1\" />Copy\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-indigo h-10 w-48 text-violet-50 text-[0.75em] justify-self-start\"\r\n                                onClick={() => {\r\n                                    context.self.disconnect();\r\n                                    setIsOpen(false);\r\n                                }}\r\n                            >\r\n                                Disconnect\r\n                            </button>\r\n                            <PriceBox\r\n                                title=\"Chain Id\"\r\n                                main={context.chainId}\r\n                                mainClassName=\"numeric\"\r\n                                detail={chain.name}\r\n                                detailClassName=\"font-display\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Balance\"\r\n                                main={formatCurrency(context.balance, nativeCoin.decimals)}\r\n                                mainUnit={nativeCoin.symbol}\r\n                                detail=\"&nbsp;\"\r\n                            />\r\n                            \r\n                            {/*\r\n                            <PriceBox\r\n                                title=\"Injected Provider\"\r\n                                main={context.isInjectedProviderInstalled ? \"Yes\" : \"No\"}\r\n                                detail={context.provider.isMetaMask ? \"MetaMask\" : context.provider?.walletMeta?.name ?? \"Unknown\"}\r\n                                detailClassName=\"font-display\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Web3 Version\"\r\n                                main={context.signer.version}\r\n                                mainClassName=\"numeric\"\r\n                                detail=\"&nbsp;\"\r\n                            />\r\n                            */}\r\n                        </>\r\n                    }\r\n                </div>\r\n            }\r\n            title=\"Wallet Info\"\r\n            hideSubmitButton={true}\r\n            cancelButtonText=\"Close\"\r\n            canceled={canceled}\r\n        />\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\nimport { formatAccount, formatCurrency } from \"../../../utils/Format\";\r\n\r\nimport { PriceBox } from \"../../InfoBox\";\r\n\r\nexport default function ConnectDialog({ isOpen, setIsOpen, context, canceled }) {\r\n    const chain = Configuration.getChain(context.chainId);\r\n    const nativeCoin = Configuration.getNativeCoin(context.chainId);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={\r\n                <div className=\"grid grid-cols-1 gap-x-4 gap-y-4 items-center justify-center text-indigo-900\">\r\n                    {context.self.isInjectedProviderInstalled()\r\n                        ?\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-red h-16 w-full text-violet-50 text-[0.75em]\"\r\n                            onClick={async () => {\r\n                                context.self.initializeInjectedProvider();\r\n                                setIsOpen(false);\r\n                            }}\r\n                        >\r\n                            Use Injected Provider\r\n                        </button>\r\n                        : <div className=\"h-16 w-full text-violet-900 text-center\">\r\n                            <p>\r\n                                <b>No injected provider found.</b>\r\n                            </p>\r\n                            <a href=\"https://metamask.io/download/\" target=\"_blank\">Install MetaMask <i className=\"bi bi-box-arrow-up-right\" /></a>\r\n                        </div>\r\n                    }\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-blue h-16 w-full text-violet-50 text-[0.75em]\"\r\n                        onClick={() => {\r\n                            context.self.initializeWalletConnectProvider();\r\n                            setIsOpen(false);\r\n                        }}\r\n                    >\r\n                        Use Wallet Connect Provider\r\n                    </button>\r\n                </div>\r\n            }\r\n            title=\"Connect to Wallet\"\r\n            hideSubmitButton={true}\r\n            cancelButtonText=\"Close\"\r\n            canceled={canceled}\r\n        />\r\n    );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../Configuration\";\r\n\r\nimport { WalletContext } from \"../contexts/WalletContext\";\r\n\r\nimport { fromWei } from \"../utils/Web3Converter\";\r\nimport { formatAccount, formatCurrency } from \"../utils/Format\";\r\n\r\nimport WalletDialog from \"./dapp/dialogs/WalletDialog\";\r\nimport ConnectDialog from \"./dapp/dialogs/ConnectDialog\";\r\n\r\nexport default class Wallet extends Component {\r\n    static propTypes = {\r\n        interval: PropTypes.number,\r\n    };\r\n\r\n    static defaultProps = {\r\n        interval: 1000,\r\n    };\r\n\r\n    static contextType = WalletContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            balance: undefined,\r\n            showWalletDialog: false,\r\n            showConnectDialog: false,\r\n        };\r\n\r\n        this.onTick = this.onTick.bind(this);\r\n        this.switchOrAddEthereumChain = this.switchOrAddEthereumChain.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (!this.context.chainId) {\r\n                return false;\r\n            } else if (!Configuration.isSupportedChain(this.context.chainId)) {\r\n                this.switchOrAddEthereumChain();\r\n                return false;\r\n            }\r\n\r\n            if (this.context.account && this.context.reader) {\r\n                if (!this.timerId) {\r\n                    this.startTimer();\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        this.timerId = setInterval(\r\n            async () => await this.onTick(),\r\n            this.props.interval\r\n        );\r\n        console.log(`Started timer: ${this.timerId}`);\r\n    }\r\n\r\n    stopTimer() {\r\n        const timerId = this.timerId;\r\n\r\n        if (timerId) {\r\n            clearInterval(timerId);\r\n            this.timerId = undefined;\r\n\r\n            console.log(`Stopped timer: ${timerId}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.context.connected && !this.context.error) {\r\n            return (\r\n                <Fragment key={0}>\r\n                    <div className=\"flex items-center\">\r\n                        <div className=\"rounded bg-gray-100/10 px-1 text-[0.875em]\">\r\n                            <span\r\n                                className=\"cursor-pointer\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        showConnectDialog: true,\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Connect to Wallet\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.state.showConnectDialog && (\r\n                        <ConnectDialog\r\n                            isOpen={this.state.showConnectDialog}\r\n                            setIsOpen={() => {\r\n                                this.setState({\r\n                                    showConnectDialog: false,\r\n                                });\r\n                            }}\r\n                            context={this.context}\r\n                            canceled={() => {\r\n                                this.setState({\r\n                                    showConnectDialog: false,\r\n                                });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        } else if (this.context.error) {\r\n            return (\r\n                <Fragment key={1}>\r\n                    <div className=\"flex items-center\">\r\n                        <div className=\"rounded bg-gray-100/10 px-1 text-[0.875em]\">\r\n                            <span className=\"text-red-500\">\r\n                                {this.context.error.code === -32002\r\n                                    ? \"Approve the chain switch\"\r\n                                    : this.context.error\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            if (!this.context.chainId || !Configuration.isSupportedChain(this.context.chainId)) {\r\n                return (\r\n                    <Fragment key={2}>\r\n                        <span className=\"text-red-500\">Unsupported chain.</span>\r\n                    </Fragment>\r\n                );\r\n            }\r\n\r\n            const nativeCoin = Configuration.getNativeCoin(this.context.chainId);\r\n            const chain = Configuration.getChain(this.context.chainId);\r\n\r\n            return (\r\n                <Fragment key={3}>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"hidden rounded bg-gray-100/10 px-1 py-0.5 text-[0.875em] xl:block\">\r\n                            <span>{chain.name}</span>\r\n                        </div>\r\n                        <div className=\"xs:block hidden rounded bg-gray-100/10 px-1 py-0.5 text-[0.875em]\">\r\n                            <div>\r\n                                <span className=\"numeric\">\r\n                                    {this.state.balance\r\n                                        ? formatCurrency(this.state.balance, nativeCoin.decimals)\r\n                                        : \"-\"\r\n                                    }\r\n                                </span>\r\n                                <span className=\"numeric-unit text-[0.75em]\">\r\n                                    {nativeCoin.symbol}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {this.context.account &&\r\n                            <div className=\"cursor-pointer rounded bg-gray-100/[0.15] px-1 py-0.5 text-[0.875em]\">\r\n                                <span\r\n                                    className=\"numeric\"\r\n                                    onClick={async () => {\r\n                                        this.setState({\r\n                                            showWalletDialog: true,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {formatAccount(this.context.account)}\r\n                                </span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {this.state.showWalletDialog && (\r\n                        <WalletDialog\r\n                            isOpen={this.state.showWalletDialog}\r\n                            setIsOpen={() => {\r\n                                this.setState({\r\n                                    showWalletDialog: false,\r\n                                });\r\n                            }}\r\n                            context={this.context}\r\n                            canceled={() => {\r\n                                this.setState({\r\n                                    showWalletDialog: false,\r\n                                });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    async onTick() {\r\n        if (this.context.chainId && Configuration.isSupportedChain(this.context.chainId) && this.context.account) {\r\n            const result = await this.context.reader.eth.getBalance(this.context.account);\r\n            const nativeCoin = Configuration.getNativeCoin(this.context.chainId);\r\n            const balance = parseFloat(fromWei(result, nativeCoin.decimals));\r\n\r\n            this.context.setBalance(balance);\r\n            this.setState({ balance });\r\n        }\r\n    }\r\n\r\n    async switchOrAddEthereumChain() {\r\n        const chainId = Configuration.getDefaultChainId();\r\n        const chain = Configuration.getChain(chainId);\r\n        const chainName = chain.name;\r\n        const nativeCurrencyName = undefined;\r\n        const nativeCurrencySymbol = chain.nativeCoin.symbol;\r\n        const nativeCurrencyDecimals = chain.nativeCoin.decimals;\r\n        const rpcUrls = [Configuration.getRpcUri(chainId)];\r\n        const blockExplorerUrls = undefined;\r\n        const iconUrls = undefined;\r\n\r\n        await this.context.self.switchOrAddEthereumChain(\r\n            chainId,\r\n            chainName,\r\n            nativeCurrencyName,\r\n            nativeCurrencySymbol,\r\n            nativeCurrencyDecimals,\r\n            rpcUrls,\r\n            blockExplorerUrls,\r\n            iconUrls\r\n        );\r\n    }\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Links() {\r\n  return (\r\n    <>\r\n      <NavLink className=\"nav-link\" to=\"/\" activeclassname=\"active\">Home</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Games\" activeclassname=\"active\">Games</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Farms\" activeclassname=\"active\">Farms</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Liquidatables\" activeclassname=\"active\">Liquidation Hunt</NavLink>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport Wallet from \"./Wallet\";\r\nimport Links from \"./Links\";\r\n\r\nexport default function Navbar() {\r\n    const [isNavbarCollapsed, setIsNavbarCollapsed] = useState(true);\r\n\r\n    function toggleNavbar() {\r\n        setIsNavbarCollapsed(!isNavbarCollapsed);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"flex h-[64px] items-center justify-between\">\r\n                <div className=\"flex items-center lg:space-x-16\">\r\n                    <Link className=\"navbar-brand flex items-center gap-2\" to=\"/\">\r\n                        {/* <div className=\"bg-weeb-logo hidden h-[1200px] max-h-[64px] w-[1200px] max-w-[64px] bg-left-top bg-no-repeat sm:inline-block\"></div>\r\n                        <div className=\"bg-weeb-text h-[464px] max-h-[48px] w-[908px] max-w-[94px] bg-left-top bg-no-repeat\"></div> */}\r\n\r\n                        {/* <div className=\"bg-weeb-logo hidden max-h-[80px] max-w-[80px] h-[64px] w-[64px] bg-left-top bg-no-repeat sm:inline-block\"></div> */}\r\n                        <div className=\"bg-weeb-text h-[52px] max-h-[52px] w-[102px] max-w-[102px] bg-left-top bg-no-repeat self-end\"></div>\r\n                    </Link>\r\n                    <div className=\"hidden lg:flex lg:space-x-4\">\r\n                        <Links />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-end space-x-4\">\r\n                    <Wallet />\r\n                    <button type=\"button\" className={`lg:hidden rounded-md ring-4 focus:outline-none ${isNavbarCollapsed\r\n                        ? \"text-gray-100/75 ring-gray-100/5 hover:bg-gray-100/10 hover:text-gray-100 hover:ring-gray-100/25\"\r\n                        : \"bg-gray-100/10 text-gray-100 ring-gray-100/25\"\r\n                        }`}\r\n                        onClick={toggleNavbar}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-10 w-12 fill-current p-1`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`lg:hidden ${isNavbarCollapsed\r\n                ? \"hidden\"\r\n                : \"mt-2 grid w-full grid-cols-2 gap-2 rounded-lg bg-gray-100/10\"\r\n                }`}\r\n            >\r\n                <div className=\"flex flex-col p-2 gap-1\">\r\n                    <Links />\r\n                </div>\r\n                <div className=\"flex flex-col items-end justify-end p-2\">\r\n                    {/* <NavLink className=\"nav-link\" to=\"/\" activeclassname=\"active\">\r\n                        <i className=\"bi bi-file-earmark-text mr-1\" />\r\n                        Documentation\r\n                    </NavLink> */}\r\n                    <NavLink className=\"nav-link\" to=\"/\" activeclassname=\"active\">\r\n                        <i className=\"bi bi-box-arrow-right mr-1\" />\r\n                        Exit App\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Spinner({ title, type }) {\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n            {title &&\r\n                <span className=\"mb-2\">{title}</span>\r\n            }\r\n            {type === \"spinner\" &&\r\n                <svg className=\"animate-spin mx-auto h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n            }\r\n            {type === \"cloud\" &&\r\n                <div className=\"animate-bounce mx-auto\">\r\n                    <i className=\"bi bi-cloud-arrow-down text-[1.875em]\" />\r\n                </div>\r\n            }\r\n            <div role=\"status\">\r\n                {title &&\r\n                    <span className=\"hidden\">{title}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSpinner.propTypes = {\r\n    type: PropTypes.string\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    type: \"spinner\"\r\n};\r\n","import IUniswapV2Pair from \"../abi/IUniswapV2Pair.json\";\r\nimport IUniswapV2Router02 from \"../abi/IUniswapV2Router02.json\";\r\nimport TokenFinder from \"../abi/TokenFinder.json\";\r\nimport IziSwap from \"../abi/IziSwap.json\";\r\nimport WeebToken from \"../abi/WeebToken.json\";\r\nimport WeebGame from \"../abi/WeebGame.json\";\r\nimport WeebFarm from \"../abi/WeebFarm.json\";\r\n\r\nexport function createReaderContract(reader, abi, address, options) {\r\n    return new reader.eth.Contract(abi, address, options);\r\n}\r\n\r\nexport function createSignerContract(signer, abi, address, options) {\r\n    return new signer.eth.Contract(abi, address, options);\r\n}\r\n\r\nexport function createReaders(reader, account, contracts) {\r\n    const options = {\r\n        from: account ?? \"0x0000000000000000000000000000000000000000\" /* Fix for hardhat which keeps returning data of previous account when a request comes from an empty account. */\r\n    };\r\n\r\n    return {\r\n        pair: createReaderContract(reader, IUniswapV2Pair, contracts.liquidityToken, options),\r\n        router: createReaderContract(reader, IUniswapV2Router02, contracts.defaultSwapRouter, options),\r\n        token: createReaderContract(reader, WeebToken, contracts.token.address, options),\r\n        game: createReaderContract(reader, WeebGame, contracts.game, options),\r\n        farm: createReaderContract(reader, WeebFarm, contracts.farm, options),\r\n        tokenFinder: createReaderContract(reader, TokenFinder, contracts.tokenFinder, options),\r\n        iziSwap: createReaderContract(reader, IziSwap, contracts.iziSwap, options),\r\n    };\r\n}\r\n\r\nexport function createSigners(signer, account, contracts) {\r\n    const options = {\r\n        from: account\r\n    };\r\n\r\n    return {\r\n        router: createSignerContract(signer, IUniswapV2Router02, contracts.defaultSwapRouter, options),\r\n        token: createSignerContract(signer, WeebToken, contracts.token.address, options),\r\n        game: createSignerContract(signer, WeebGame, contracts.game, options),\r\n        farm: createSignerContract(signer, WeebFarm, contracts.farm, options),\r\n        iziSwap: createSignerContract(signer, IziSwap, contracts.iziSwap, options),\r\n    };\r\n}","export const MAX_UINT256 = \"115792089237316195423570985008687907853269984665640564039457584007913129639935\";\r\n\r\nexport const cmpi = (str1, str2) => str1.localeCompare(str2, undefined, { sensitivity: \"accent\" });\r\nexport const equals = (str1, str2) => cmpi(str1, str2) === 0;\r\n\r\nexport function contains(str1, str2) {\r\n    return (new RegExp(str2, \"i\")).test(str1);\r\n}\r\n\r\nexport function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function promisify(inner) {\r\n    return new Promise((resolve, reject) =>\r\n        inner((err, res) => {\r\n            if (err) {\r\n                reject(err);\r\n            } else {\r\n                resolve(res);\r\n            }\r\n        })\r\n    );\r\n}\r\n\r\nexport async function waitMined(web3, txHash, interval = 500) {\r\n    while (true) {\r\n        const receipt = await promisify(cb => web3.eth.getTransactionReceipt(txHash, cb));\r\n\r\n        if (receipt == null) {\r\n            await sleep(interval);\r\n        }\r\n        else {\r\n            return receipt;\r\n        }\r\n    }\r\n}\r\n\r\nfunction createClamp(minWidthPx, maxWidthPx, minFontSizePx, maxFontSizePx, pixelsPerRem = 16) {\r\n    const minWidth = minWidthPx / pixelsPerRem;\r\n    const maxWidth = maxWidthPx / pixelsPerRem;\r\n\r\n    const minFontSize = minFontSizePx / pixelsPerRem;\r\n    const maxFontSize = maxFontSizePx / pixelsPerRem;\r\n\r\n    const slope = (maxFontSize - minFontSize) / (maxWidth - minWidth);\r\n    const yAxisIntersection = -minWidth * slope + minFontSize\r\n\r\n    return `clamp(${minFontSize}rem, ${yAxisIntersection}rem + ${slope * 100}vw, ${maxFontSize}rem)`;\r\n}\r\n\r\nfunction createClamp2(minWidthPx, maxWidthPx, minFontSizePx, maxFontSizePx, pixelsPerRem = 16) {\r\n    const scale = 1.40;\r\n    return createClamp(minWidthPx, maxWidthPx, minFontSizePx * scale, maxFontSizePx * scale, pixelsPerRem)\r\n}\r\n\r\nexport function createClamps() {\r\n    let classes = \"\";\r\n\r\n    classes += \".getMainSize {font-size: \" + createClamp(360, 1280, 16, 30) + \";\\r\\n\" + \"}\\r\\n\";\r\n\r\n    // classes += \".text-title {font-size: \" + createClamp(360, 1536, 12, 14) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-main {font-size: \" + createClamp(360, 1536, 20, 40) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-mainUnit {font-size: \" + createClamp(360, 1536, 12, 16) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-detail {font-size: \" + createClamp(360, 1536, 13, 17) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-detailUnit {font-size: \" + createClamp(360, 1536, 10, 14) + \";\\r\\n\" + \"}\\r\\n\";\r\n\r\n    // classes += \".text-8_10 {font-size: \" + createClamp(360, 1536, 8, 10) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 10) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_11 {font-size: \" + createClamp(360, 1536, 8, 11) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 11) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_12 {font-size: \" + createClamp(360, 1536, 8, 12) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 12) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_13 {font-size: \" + createClamp(360, 1536, 8, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_14 {font-size: \" + createClamp(360, 1536, 8, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 14) + \";\"*/ + \"}\\r\\n\";\r\n    \r\n    // classes += \".text-9_11 {font-size: \" + createClamp(360, 1536, 9, 11) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 11) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_12 {font-size: \" + createClamp(360, 1536, 9, 12) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 12) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_13 {font-size: \" + createClamp(360, 1536, 9, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_14 {font-size: \" + createClamp(360, 1536, 9, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 14) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_15 {font-size: \" + createClamp(360, 1536, 9, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 15) + \";\"*/ + \"}\\r\\n\";\r\n\r\n    // classes += \".text-10_12 {font-size: \" + createClamp(360, 1536, 10, 12) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 12) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_13 {font-size: \" + createClamp(360, 1536, 10, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_14 {font-size: \" + createClamp(360, 1536, 10, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 14) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_15 {font-size: \" + createClamp(360, 1536, 10, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 15) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_16 {font-size: \" + createClamp(360, 1536, 10, 16) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 16) + \";\"*/ + \"}\\r\\n\";\r\n    \r\n    // classes += \".text-11_13 {font-size: \" + createClamp(360, 1536, 11, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_14 {font-size: \" + createClamp(360, 1536, 11, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 14) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_15 {font-size: \" + createClamp(360, 1536, 11, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 15) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_16 {font-size: \" + createClamp(360, 1536, 11, 16) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 16) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_17 {font-size: \" + createClamp(360, 1536, 11, 17) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 17) + \";\"*/ + \"}\\r\\n\";\r\n    \r\n    // classes += \".text-12_14 {font-size: \" + createClamp(360, 1536, 12, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 14)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_15 {font-size: \" + createClamp(360, 1536, 12, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 15)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_16 {font-size: \" + createClamp(360, 1536, 12, 16) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 16)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_17 {font-size: \" + createClamp(360, 1536, 12, 17) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 17)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_18 {font-size: \" + createClamp(360, 1536, 12, 18) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 18)+ \";\"*/  + \"}\\r\\n\";\r\n \r\n    // classes += \".text-12_24 {font-size: \" + createClamp(360, 1536, 12, 24) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 24) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-12_36 {font-size: \" + createClamp(360, 1536, 12, 36) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 36) + \";\"*/ + \"}\\r\\n\";\r\n\r\n    // classes += \".text-14_36 {font-size: \" + createClamp(360, 1536, 14, 36) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 14, 36) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-14_40 {font-size: \" + createClamp(360, 1536, 14, 40) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 14, 40) + \";\"*/ + \"}\\r\\n\";\r\n\r\n    return classes;\r\n}","import Web3 from \"web3\";\r\n\r\nimport IERC20 from \"../abi/IERC20.json\";\r\nimport IUniswapV2Pair from \"../abi/IUniswapV2Pair.json\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\nimport { fromWei, toWei } from \"../../../utils/Web3Converter\";\r\nimport {\r\n    formatAccount,\r\n    formatDateTime,\r\n    formatTimespan,\r\n    formatInteger,\r\n    formatPercentage,\r\n    formatNumberScaled,\r\n    formatCurrency\r\n} from \"../../../utils/Format\";\r\nimport { MAX_UINT256, promisify, waitMined } from \"../../../utils/Utils\";\r\n\r\nimport { createReaderContract, createReaders, createSigners } from \"./Contracts\";\r\n\r\nexport default (function Services() {\r\n    const self = {\r\n        init: (context) => {\r\n            if (!context.chainId || !Configuration.isSupportedChain(context.chainId)) {\r\n                console.log(\"Can not initialize services due to unsupported chain.\");\r\n                return;\r\n            }\r\n\r\n            self.chainId = context.chainId;\r\n            self.account = context.account;\r\n\r\n            self.nativeCoin = Configuration.getNativeCoin(context.chainId);\r\n            self.contracts = Configuration.getContracts(context.chainId);\r\n\r\n            if (context.reader) {\r\n                self.reader = context.reader;\r\n                self.readers = createReaders(context.reader, context.account, self.contracts);\r\n            }\r\n\r\n            if (context.signer) {\r\n                self.signer = context.signer;\r\n                self.signers = createSigners(context.signer, context.account, self.contracts);\r\n            }\r\n        },\r\n        settings: {\r\n            slippageToleranceKey: \"slippageTolerance\",\r\n            getSlippageTolerance: () => parseFloat(window.localStorage.getItem(self.settings.slippageToleranceKey) ?? Configuration.getSlippageTolerance()),\r\n            setSlippageTolerance: (value) => {\r\n                if (value) {\r\n                    window.localStorage.setItem(self.settings.slippageToleranceKey, value);\r\n                }\r\n            },\r\n            getTokenListUri: () => {\r\n                const chainId = Web3.utils.toHex(self.chainId == 31337 ? 1 : self.chainId);\r\n                return `https://deep-index.moralis.io/api/v2/${self.account}/erc20?chain=${chainId}`;\r\n            },\r\n        },\r\n        convert: {\r\n            formatAccount: value => formatAccount(value),\r\n            formatDateTime: value => formatDateTime(value),\r\n            formatTimespan: value => formatTimespan(value),\r\n            formatInteger: value => formatInteger(value),\r\n            formatPercentage: (value, maxDecimals = 2, minDecimals = 0) => formatPercentage(value, maxDecimals, minDecimals),\r\n            formatNumberScaled: (value, maxDecimals = 2, minDecimals = 0) => formatNumberScaled(value, maxDecimals, minDecimals),\r\n            fromWei: (value, decimals) => parseFloat(fromWei(value, decimals)),\r\n            fromWeiNativeCoin: value => self.convert.fromWei(value, self.nativeCoin.decimals),\r\n            fromWeiNativeToken: value => self.convert.fromWei(value, self.contracts.nativeToken.decimals),\r\n            fromWeiStableToken: value => self.convert.fromWei(value, self.contracts.stableToken.decimals),\r\n            fromWeiMainToken: value => self.convert.fromWei(value, self.contracts.token.decimals),\r\n            trimToDecimals: (value, decimals) => {\r\n                if (typeof value === \"number\") {\r\n                    return parseFloat(value.toFixed(decimals));\r\n                }\r\n\r\n                const index = value.indexOf(\".\");\r\n\r\n                if (index != -1) {\r\n                    const count = value.length - (index + 1) - decimals;\r\n\r\n                    if (count > 0) {\r\n                        value = value.substr(0, value.length - count);\r\n                    }\r\n                }\r\n\r\n                return value;\r\n            },\r\n            toWei: (value, decimals) => toWei(self.convert.trimToDecimals(value, decimals), decimals),\r\n            toWeiNativeCoin: value => self.convert.toWei(value, self.nativeCoin.decimals),\r\n            toWeiNativeToken: value => self.convert.toWei(value, self.contracts.nativeToken.decimals),\r\n            toWeiStableToken: value => self.convert.toWei(value, self.contracts.stableToken.decimals),\r\n            toWeiMainToken: value => self.convert.toWei(value, self.contracts.token.decimals),\r\n            formatCurrency: (value, currencyDecimals) => formatCurrency(value, currencyDecimals),\r\n            formatCurrency: (value, currencyDecimals, maxDecimals, minDecimals) => formatCurrency(value, currencyDecimals, maxDecimals, minDecimals),\r\n            formatNativeCoin: value => self.convert.formatCurrency(value, self.nativeCoin.decimals),\r\n            formatNativeCoin: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.nativeCoin.decimals, maxDecimals, minDecimals),\r\n            formatNativeToken: value => self.convert.formatCurrency(value, self.contracts.nativeToken.decimals),\r\n            formatNativeToken: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.contracts.nativeToken.decimals, maxDecimals, minDecimals),\r\n            formatStableToken: value => self.convert.formatCurrency(value, self.contracts.stableToken.decimals),\r\n            formatStableToken: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.contracts.stableToken.decimals, maxDecimals, minDecimals),\r\n            formatMainToken: value => self.convert.formatCurrency(value, self.contracts.token.decimals),\r\n            formatMainToken: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.contracts.token.decimals, maxDecimals, minDecimals),\r\n            formatDepositToken: (value, pool) => self.convert.formatCurrency(value, pool.depositToken.details.decimals),\r\n            formatDepositToken: (value, pool, maxDecimals, minDecimals) => self.convert.formatCurrency(value, pool.depositToken.details.decimals, maxDecimals, minDecimals),\r\n        },\r\n        format: decimals => {\r\n            const _format = {\r\n                fromWei: (value) => self.convert.fromWei(value, decimals),\r\n                formatCurrency: (value, maxDecimals = 4, minDecimals = 0) => self.convert.formatCurrency(value, decimals, maxDecimals, minDecimals),\r\n                formatToken: (value, maxDecimals = 4, minDecimals = 0) => _format.formatCurrency(value, maxDecimals, minDecimals),\r\n            };\r\n\r\n            return _format;\r\n        },\r\n        block: {\r\n            getBlock: (blockId) => promisify(cb => self.reader.eth.getBlock(blockId, cb)),\r\n            getAverageBlockTime: async count => {\r\n                const blockF = await self.block.getBlock(\"latest\");\r\n                const now = Date.now() / 1000;\r\n                const blockI = await self.block.getBlock(blockF.number - count);\r\n                const blockTime = (blockF.timestamp - blockI.timestamp) / count;\r\n                console.log(`Block Time: ${blockTime} s; F: ${blockF.timestamp} - I: ${blockI.timestamp} = ${blockF.timestamp - blockI.timestamp} s. Lag: ${now - blockF.timestamp} s.`);\r\n\r\n                return blockTime;\r\n            }\r\n        },\r\n        pair: {\r\n            getTokenReserves: async (tokenAddress, decimals) => {\r\n                // Check the order of pair tokens.\r\n                const isTokenFirst = Web3.utils.toBN(tokenAddress).cmp(Web3.utils.toBN(self.contracts.nativeToken.address)) === -1;\r\n                const reserves = await promisify(cb => self.readers.pair.methods.getReserves().call(cb));\r\n\r\n                return isTokenFirst\r\n                    ? {\r\n                        tokenReserve: self.convert.fromWei(reserves.reserve0, decimals),\r\n                        nativeTokenReserve: self.convert.fromWei(reserves.reserve1, self.contracts.nativeToken.decimals)\r\n                    }\r\n                    : {\r\n                        tokenReserve: self.convert.fromWei(reserves.reserve1, decimals),\r\n                        nativeTokenReserve: self.convert.fromWei(reserves.reserve0, self.contracts.nativeToken.decimals)\r\n                    };\r\n            },\r\n            getMainTokenReserves: () => self.pair.getTokenReserves(self.contracts.token.address, self.contracts.token.decimals),\r\n            getMainTokenInitialReserves: () => {\r\n                const initialLiquidity = Configuration.getInitialLiquidity(self.chainId);\r\n\r\n                return {\r\n                    initialTokenReserve: self.convert.fromWeiMainToken(initialLiquidity.tokenReserve),\r\n                    initialNativeTokenReserve: self.convert.fromWeiNativeToken(initialLiquidity.nativeTokenReserve)\r\n                };\r\n            }\r\n        },\r\n        iziSwap: {\r\n            quote: (sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken) => promisify(cb => self.readers.iziSwap.methods.quote(sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken).call(cb)),\r\n            swap: async (sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken, to, deadline, amountOutMin) => waitMined(self.reader, await promisify(cb => self.signers.iziSwap.methods.swap(sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken, to, deadline, amountOutMin).send(cb))),\r\n            getTokenPriceInStableToken: async (\r\n                depositToken,\r\n                decimals,\r\n                isLiquidityToken\r\n            ) => {\r\n                const depositRouter = Configuration.getDefaultSwapRouter(self.chainId);\r\n                const creditRouter = depositRouter;\r\n                const amount = await self.iziSwap.quote(depositRouter, depositToken, isLiquidityToken, self.convert.toWei(1, decimals), creditRouter, self.contracts.stableToken.address, false);\r\n\r\n                return self.convert.fromWeiStableToken(amount);\r\n            },\r\n            getTokenPriceInMainToken: async (\r\n                depositToken,\r\n                decimals,\r\n                isLiquidityToken\r\n            ) => {\r\n                const depositRouter = Configuration.getDefaultSwapRouter(self.chainId);\r\n                const creditRouter = depositRouter;\r\n                const amount = await self.iziSwap.quote(depositRouter, depositToken, isLiquidityToken, self.convert.toWei(1, decimals), creditRouter, self.contracts.token.address, false);\r\n\r\n                return self.convert.fromWeiMainToken(amount);\r\n            }\r\n        },\r\n        router: {\r\n            getTokenPriceInStableToken: async (tokenAddress, decimals) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWei(1, decimals), [\r\n                    tokenAddress,\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.stableToken.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiStableToken(amounts[amounts.length - 1]);\r\n            },\r\n            getMainTokenPriceInStableToken: () => {\r\n                return self.router.getTokenPriceInStableToken(self.contracts.token.address, self.contracts.token.decimals);\r\n            },\r\n            getNativeTokenPriceInStableToken: async () => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWei(1, self.contracts.nativeToken.decimals), [\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.stableToken.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiStableToken(amounts[amounts.length - 1]);\r\n            },\r\n            getTokenPriceInMainToken: async (tokenAddress, decimals) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWei(1, decimals), [\r\n                    tokenAddress,\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.token.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiMainToken(amounts[amounts.length - 1]);\r\n            },\r\n            getMainTokenAmountFromNativeCoin: async (nativeCoinAmountIn) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWeiNativeCoin(nativeCoinAmountIn), [\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.token.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiMainToken(amounts[amounts.length - 1]);\r\n            },\r\n            getNativeCoinAmountFromMainToken: async (mainTokenAmountIn) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWeiMainToken(mainTokenAmountIn), [\r\n                    self.contracts.token.address,\r\n                    self.contracts.nativeToken.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiNativeCoin(amounts[amounts.length - 1]);\r\n            },\r\n            swapNativeTokenForMainToken: async (nativeCoinAmountIn, tokenAmountOutMin, recipient) => {\r\n                return waitMined(self.reader,\r\n                    await promisify(cb => self.signers.router.methods.swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n                        self.convert.toWeiMainToken(tokenAmountOutMin),\r\n                        [self.contracts.nativeToken.address, self.contracts.token.address],\r\n                        recipient ? recipient : self.account,\r\n                        parseInt((Date.now() / 1000) + 3600)\r\n                    ).send({ value: self.convert.toWeiNativeCoin(nativeCoinAmountIn) }, cb)));\r\n            },\r\n            swapMainTokenForNativeToken: async (mainTokenAmountIn, amountNativeTokenOutMin, recipient) => {\r\n                return waitMined(self.reader,\r\n                    await promisify(cb => self.signers.router.methods.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                        self.convert.toWeiMainToken(mainTokenAmountIn),\r\n                        self.convert.toWeiNativeCoin(amountNativeTokenOutMin),\r\n                        [self.contracts.token.address, self.contracts.nativeToken.address],\r\n                        recipient ? recipient : self.account,\r\n                        parseInt((Date.now() / 1000) + 3600)\r\n                    ).send(cb)));\r\n            },\r\n        },\r\n        token: {\r\n            balanceOf: async (tokenAddress) => {\r\n                const reader = createReaderContract(self.reader, IERC20, tokenAddress, { from: self.account });\r\n                return promisify(cb => reader.methods.balanceOf(self.account).call(cb));\r\n            },\r\n            transfer: async (recipient, amount) => waitMined(self.reader, await promisify(cb => self.signers.token.methods.transfer(recipient, amount).send(cb))),\r\n            getAllowance: (owner, spender) => promisify(cb => self.readers.token.methods.allowance(owner, spender).call(cb)),\r\n            getTokenSnapshot: () => promisify(cb => self.readers.token.methods.senderTokenSnapshot().call(cb)),\r\n            harvestPendingReward: async () => waitMined(self.reader, await promisify(cb => self.readers.token.methods.harvestPendingReward().send(cb))),\r\n            approveRouter: async () => waitMined(self.reader, await promisify(cb => self.signers.token.methods.approve(self.readers.router.options.address, MAX_UINT256).send(cb))),\r\n            approveGame: async () => waitMined(self.reader, await promisify(cb => self.signers.token.methods.approve(self.readers.game.options.address, MAX_UINT256).send(cb))),\r\n            isAllowed: async (minAmount, allowance) => allowance.eq(Web3.utils.toBN(0)) ? false : allowance.cmp(Web3.utils.toBN(minAmount)) >= 0,\r\n            isAllowanceSatisfied: async (spender, minAmount) => {\r\n                console.log(`minAmount: ${minAmount}`);\r\n                const allowance = Web3.utils.toBN(await self.token.getAllowance(self.account, spender));\r\n                return self.token.isAllowed(minAmount, allowance);\r\n            },\r\n        },\r\n        game: {\r\n            getAllowance: () => self.token.getAllowance(self.account, self.readers.game.options.address),\r\n            getSnapshots: (isEnabled) => promisify(cb => self.readers.game.methods.senderGameSnapshots(isEnabled).call(cb)),\r\n            getSenderBetPoolCount: (gameId) => promisify(cb => self.readers.game.methods.senderBetPoolCount(gameId).call(cb)),\r\n            getSenderPoolSnapshots: (gameId, offset, count) => promisify(cb => self.readers.game.methods.senderPoolSnapshots(gameId, offset, count).call(cb)),\r\n            getSenderBetPools: (gameId) => promisify(cb => self.readers.game.methods.senderBetPools(gameId).call(cb)),\r\n            betMainToken: async (gameId, amount, outcome) => {\r\n                console.log(\"bet main\");\r\n                return waitMined(self.reader, await promisify(cb => self.signers.game.methods.bet(gameId, amount, outcome).send(cb)));\r\n            },\r\n            bet: async (gameId, sourceToken, sourceAmount, outcome, gameTokenInfo) => {\r\n                const sourceAmountInWei = self.convert.toWei(sourceAmount, sourceToken.info.details.decimals);\r\n                const amountOut = self.convert.fromWei(await self.iziSwap.quote(sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, sourceAmountInWei, gameTokenInfo.router, gameTokenInfo.token, false), gameTokenInfo.details.decimals);\r\n                const amountMin = amountOut * self.settings.getSlippageTolerance() / 10000;\r\n                const amountOutMin = amountOut - amountMin;\r\n\r\n                return waitMined(self.reader, await promisify(cb => self.signers.game.methods.bet(gameId, sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, self.convert.toWei(amountOut, gameTokenInfo.details.decimals), self.convert.toWei(amountOutMin, gameTokenInfo.details.decimals), outcome).send(cb)));\r\n            },\r\n            compound: async (gameId, outcome) => waitMined(self.reader, await promisify(cb => self.signers.game.methods.compound(gameId, outcome).send(cb))),\r\n            claim: async (gameId) => waitMined(self.reader, await promisify(cb => self.signers.game.methods.claim(gameId).send(cb))),\r\n            harvestPendingReward: (gameId, outcome) => self.game.betMainToken(gameId, 0, outcome),\r\n            isAllowanceSatisfied: async (minAmount) => {\r\n                const allowance = Web3.utils.toBN(await self.game.getAllowance());\r\n                return self.token.isAllowed(minAmount, allowance);\r\n            },\r\n        },\r\n        farm: {\r\n            getDepositTokenSymbol: (pool) => pool.isLiquidityToken ? `${pool.token0Details.symbol}/${pool.token1Details.symbol}` : pool.depositToken.details.symbol,\r\n            conversionRateOf: (depositRouter, depositToken, isLiquidityToken, deposit, creditRouter, creditToken) => promisify(cb => self.readers.farm.methods.conversionRateOf(depositRouter, depositToken, isLiquidityToken, deposit, creditRouter, creditToken).call(cb)),\r\n            getAllowance: (reader) => promisify(cb => reader.methods.allowance(self.account, self.readers.farm.options.address).call(cb)),\r\n            approveFarm: async (signer) => waitMined(self.reader, await promisify(cb => signer.methods.approve(self.readers.farm.options.address, MAX_UINT256).send(cb))),\r\n            getSnapshot: (isEnabled) => promisify(cb => self.readers.farm.methods.senderFarmSnapshot(isEnabled).call(cb)),\r\n            getLiquidatablesSnapshot: (isEnabled) => promisify(cb => self.readers.farm.methods.senderFarmLiquidatablesSnapshot(isEnabled).call(cb)),\r\n            REMOVE_deposit: async (poolId, amount) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.deposit(poolId, amount, self.settings.getSlippageTolerance()).send(cb))),\r\n            deposit: async (poolId, sourceToken, sourceAmount, pool) => {\r\n                const sourceAmountInWei = self.convert.toWei(sourceAmount, sourceToken.info.details.decimals);\r\n                const amountOut = self.convert.fromWei(await self.iziSwap.quote(sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, sourceAmountInWei, pool.depositToken.router, pool.depositToken.token, pool.isLiquidityToken), pool.depositToken.details.decimals);\r\n                const amountMin = amountOut * self.settings.getSlippageTolerance() / 10000;\r\n                const amountOutMin = amountOut - amountMin;\r\n\r\n                return waitMined(self.reader, await promisify(cb => self.signers.farm.methods.deposit(poolId, sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, self.convert.toWei(amountOut, pool.depositToken.details.decimals), self.convert.toWei(amountOutMin, pool.depositToken.details.decimals)).send(cb)));\r\n            },\r\n            withdraw: async (poolId, amount) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.withdraw(poolId, amount).send(cb))),\r\n            rebalance: async (poolId) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.rebalance(poolId).send(cb))),\r\n            liquidate: async (poolId) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.liquidateSenderUnchecked(poolId, self.settings.getSlippageTolerance()).send(cb))),\r\n            liquidateAccount: async (poolId, investor) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.liquidateAccount(poolId, investor, self.settings.getSlippageTolerance()).send(cb))),\r\n            isAllowanceSatisfied: async (pool, minAmount) => {\r\n                const reader = createReaderContract(self.reader, pool.isLiquidityToken ? IUniswapV2Pair : IERC20, pool.depositToken.token, { from: self.account });\r\n                const allowance = Web3.utils.toBN(await self.farm.getAllowance(reader));\r\n                return self.token.isAllowed(minAmount, allowance);\r\n            },\r\n            getTokenPriceInDepositToken: async (token, pool) => {\r\n                const amount = await self.iziSwap.quote(token.info.router, token.info.token, token.isLiquidityToken, self.convert.toWei(1, token.info.details.decimals), pool.depositToken.router, pool.depositToken.token, pool.isLiquidityToken);\r\n\r\n                return self.convert.fromWei(amount, pool.depositToken.details.decimals);\r\n            },\r\n        },\r\n        tokenFinder: {\r\n            findAll: (tokenAddress) => promisify(cb => self.readers.tokenFinder.methods.findAll(tokenAddress).call(cb)),\r\n        }\r\n    };\r\n\r\n    return self;\r\n})();","// import BN from \"bn.js\";\r\n\r\nexport const DAYS_IN_WEEK = 7;\r\nexport const DAYS_IN_MONTH = 30.4167;\r\nexport const DAYS_IN_YEAR = 365;\r\n\r\n// export function getAnnualPercentageYieldBigDecimal(rewardPerBlock, blockTime, totalStaked, investment) {\r\n//     var rate = getRewardRatePerDay(rewardPerBlock, blockTime, totalStaked, investment);\r\n//     return BN.pow(1 + rate, 365) - 1;\r\n// }\r\n\r\n/// <summary>\r\n///     https://www.thecalculatorsite.com/finance/calculators/daily-compound-interest.php\r\n/// </summary>\r\n\r\nexport function getDurationPercentageYield2(rewardPerBlock, blockTime, totalStaked, investment, duration) {\r\n    var rate = getRewardRatePerDay(rewardPerBlock, blockTime, totalStaked, investment);\r\n    return Math.pow(1 + rate, duration) - 1;\r\n}\r\n\r\n// If user wants to invest \"investment\" amount of to the existing \"totalStaked\".\r\nexport function getRewardRatePerDay(rewardPerBlock, blockTime, totalStaked, investment) {\r\n    return _getRewardPerDay(rewardPerBlock, blockTime) / (totalStaked + investment);\r\n}\r\n\r\n// This is compounded interest. The reward earned increases user's balance and totalStaked as well which renders constantish daily earned reward for the user.\r\nexport function getDurationPercentageYield(rewardPerBlock, blockTime, totalStaked, investment, duration) {\r\n    const rpd = getRewardPerDay(rewardPerBlock, blockTime, totalStaked + investment, investment);\r\n    return (rpd * duration) / investment;\r\n}\r\n\r\nexport function getRewardPerDay(rewardPerBlock, blockTime, totalStaked, balance) {\r\n    return _getRewardPerDay(rewardPerBlock, blockTime) * balance / totalStaked;\r\n}\r\n\r\nexport function getRewardPerDuration(rewardPerBlock, blockTime, duration) {\r\n    return _getRewardPerDay(rewardPerBlock, blockTime) * duration;\r\n}\r\n\r\nfunction _getRewardPerDay(rewardPerBlock, blockTime) {\r\n    return 60 * 60 * 24 * rewardPerBlock / blockTime;\r\n}\r\n\r\nexport function getRewards(rewardPerBlock, blockTime, totalStaked, balance, duration, compound) {\r\n    const rewardPerDay = _getRewardPerDay(rewardPerBlock, blockTime);\r\n    const dailyRewards = [];\r\n\r\n    for (let i = 0; i < duration; ++i) {\r\n        let reward = rewardPerDay * balance / totalStaked;\r\n        totalStaked += rewardPerDay;\r\n\r\n        if (compound) {\r\n            balance += reward;\r\n        } else {\r\n            totalStaked -= reward;\r\n        }\r\n\r\n        if (i > 0) {\r\n            reward += dailyRewards[i - 1];\r\n        }\r\n\r\n        dailyRewards.push(reward);\r\n    }\r\n\r\n    console.log(`Final balance: ${balance}`);\r\n    console.log(`Total staked : ${totalStaked}`);\r\n    console.log(dailyRewards);\r\n\r\n    const str = dailyRewards.join(\"\\r\\n\");\r\n    console.log(str);\r\n\r\n    return dailyRewards;\r\n}\r\n\r\nexport function getRewardsOfIncrementedBalance(rewardPerBlock, blockTime, totalStaked, balance, duration, compound, balanceIncrement, balanceIncrementPeriod) {\r\n    const rewardPerDay = _getRewardPerDay(rewardPerBlock, blockTime);\r\n    const dailyRewards = [];\r\n\r\n    for (let i = 0; i < duration; ++i) {\r\n        let reward = rewardPerDay * balance / totalStaked;\r\n        totalStaked += rewardPerDay;\r\n\r\n        if (compound) {\r\n            balance += reward;\r\n        } else {\r\n            totalStaked -= reward;\r\n        }\r\n\r\n        if (i > 0) {\r\n            reward += dailyRewards[i - 1];\r\n\r\n            if ((i + 1) % balanceIncrementPeriod === 0) {\r\n                balance += balanceIncrement;\r\n                totalStaked += balanceIncrement;\r\n            }\r\n        }\r\n\r\n        dailyRewards.push(reward);\r\n    }\r\n\r\n    console.log(`Final balance: ${balance}`);\r\n    console.log(`Total staked : ${totalStaked}`);\r\n    console.log(dailyRewards);\r\n\r\n    const str = dailyRewards.join(\"\\r\\n\");\r\n    console.log(str);\r\n\r\n    return dailyRewards;\r\n}","import { useState } from \"react\";\r\nimport { Portal, Popover } from \"@headlessui/react\";\r\nimport { usePopper } from \"react-popper\";\r\n\r\nexport function StyledPopover({ isTooltip, children, icon }) {\r\n    const [referenceElement, setReferenceElement] = useState();\r\n    const [popperElement, setPopperElement] = useState();\r\n\r\n    const { styles, attributes } = usePopper(referenceElement, popperElement);\r\n\r\n    return (\r\n        <Popover as=\"span\">\r\n            <Popover.Button as=\"i\" ref={setReferenceElement} className={`bi ${isTooltip ? icon ?? \"bi-question-circle\" : icon ?? \"bi-three-dots\"} cursor-pointer hover:animate-pulse`}>\r\n            </Popover.Button>\r\n\r\n            <Portal>\r\n                <Popover.Panel ref={setPopperElement} style={styles.popper} {...attributes.popper} className=\"z-10 card popover rounded-lg shadow w-full max-w-md\">\r\n                    {children}\r\n                </Popover.Panel>\r\n            </Portal>\r\n        </Popover>\r\n    );\r\n}\r\n","export const ShowComponentType = Object.freeze({\r\n    All: 255,\r\n    Token: 1,\r\n    Games: 2,\r\n    Farms: 4,\r\n    Liquidatables: 8\r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { DAYS_IN_WEEK, DAYS_IN_MONTH, DAYS_IN_YEAR, getDurationPercentageYield, getRewardRatePerDay, getRewardPerDay, getRewardPerDuration } from \"../../utils/InterestExtensions\";\r\n\r\nimport { PriceBox } from \"../InfoBox\";\r\nimport { StyledPopover } from \"../StyledPopover\";\r\n\r\nimport { ShowComponentType } from \"./Enums\";\r\n\r\n/*\r\n{\r\n    card,\r\n    borderBottom,\r\n    showCompact,\r\n    showHeader,\r\n    showHarvestButton,\r\n    token,\r\n    priceInNativeToken,\r\n    priceInStableToken,\r\n    harvestPendingReward,\r\n    blockTime\r\n}\r\n*/\r\nexport default class Token extends Component {\r\n    static propTypes = {\r\n        card: PropTypes.string,\r\n        borderBottom: PropTypes.string,\r\n        showCompact: PropTypes.bool,\r\n        showHeader: PropTypes.bool,\r\n        showHarvestButton: PropTypes.bool,\r\n        harvestPendingReward: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        card: \"card-t1\",\r\n        borderBottom: \"border-bottom-t1\",\r\n        showCompact: false,\r\n        showHeader: true,\r\n        showHarvestButton: true,\r\n        harvestPendingReward: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isDetailed: !(props.showCompact && props.showHeader),\r\n            isInteractionDisabled: false\r\n        };\r\n\r\n        this.toggleDetailedVisibility = this.toggleDetailedVisibility.bind(this);\r\n        this.execute = this.execute.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const nativeTokenPriceInStableToken = this.props.priceInStableToken / this.props.priceInNativeToken;\r\n        const swapRouterName = Configuration.getSwapRouterName($.chainId, Configuration.getDefaultSwapRouter($.chainId));\r\n        const tokenExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/token/${this.props.token.contractAddress}`;\r\n        const senderBalance = $.convert.fromWeiMainToken(this.props.token.senderBalance);\r\n        const senderLockedBalance = $.convert.fromWeiMainToken(this.props.token.senderLockedBalance);\r\n        const senderFreeBalance = $.convert.fromWeiMainToken(this.props.token.senderFreeBalance);\r\n        const senderPendingReward = $.convert.fromWeiMainToken(this.props.token.senderPendingReward);\r\n        const maximumSupply = $.convert.fromWeiMainToken(this.props.token.maximumSupply);\r\n        const initialSupply = $.convert.fromWeiMainToken(this.props.token.initialSupply);\r\n        const totalSupply = $.convert.fromWeiMainToken(this.props.token.totalSupply);\r\n        const senderBalanceShare = totalSupply === 0 ? 0 : senderBalance / totalSupply;\r\n        const totalLockedSupply = $.convert.fromWeiMainToken(this.props.token.totalLockedSupply);\r\n        const totalStaked = $.convert.fromWeiMainToken(this.props.token.totalStaked);\r\n        const senderStakeShare = totalStaked === 0 ? 0 : senderBalance / totalStaked;\r\n        const supplyInContracts = $.convert.fromWeiMainToken(this.props.token.supplyInContracts);\r\n        const supplyInNonrewardables = $.convert.fromWeiMainToken(this.props.token.supplyInNonrewardables);\r\n        const totalRewarded = $.convert.fromWeiMainToken(this.props.token.totalRewarded);\r\n        const totalTransacted = $.convert.fromWeiMainToken(this.props.token.totalTransacted.total);\r\n        const seigniorageFee = parseFloat(this.props.token.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = $.convert.fromWeiMainToken(this.props.token.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.token.seigniory}`;\r\n        const reducedEmissionHolderLimit = parseInt(this.props.token.reducedEmissionHolderLimit);\r\n        const isRegularEmission = (reducedEmissionHolderLimit == 0 || parseInt(this.props.token.holders) > reducedEmissionHolderLimit);\r\n        const baseRewardPerBlock = $.convert.fromWeiMainToken(this.props.token.baseRewardPerBlock);\r\n        const maximumRewardPerBlock = $.convert.fromWeiMainToken(this.props.token.maximumRewardPerBlock);\r\n        const currentRewardPerBlock = $.convert.fromWeiMainToken(this.props.token.currentRewardPerBlock);\r\n        const transferBurnRate = parseFloat(this.props.token.transferBurnRate) / 10000;\r\n        const salesBaseBurnRate = parseFloat(this.props.token.salesBaseBurnRate) / 10000;\r\n        const salesMaximumBurnRate = parseFloat(this.props.token.salesMaximumBurnRate) / 10000;\r\n        const currentSalesBurnRate = parseFloat(this.props.token.currentSalesBurnRate) / 10000;\r\n        const rebatableBurnRate = parseFloat(this.props.token.rebatableBurnRate) / 10000;\r\n        const rebateMaximizingShare = parseFloat(this.props.token.rebateMaximizingShare) / 10000;\r\n        const rebateShareStepsize = parseFloat(this.props.token.rebateShareStepsize) / 10000;\r\n        const regulationInterval = parseInt(this.props.token.regulationInterval);\r\n        const regulationTimestamp = parseInt(this.props.token.regulationTimestamp);\r\n        const timeToRegulation = (regulationTimestamp + regulationInterval) - now;\r\n        const priceAverage = $.convert.fromWeiMainToken(this.props.token.priceAverage);\r\n        const rewardMultiplier = parseFloat(this.props.token.rewardMultiplier) / 10000;\r\n        const burnMultiplier = parseFloat(this.props.token.burnMultiplier) / 10000;\r\n        const senderRebateRate = parseFloat(this.props.token.senderRebateRate) / 10000;\r\n        const senderTransferBurnRate = transferBurnRate - (transferBurnRate * rebatableBurnRate * senderRebateRate);\r\n        const senderSalesBurnRate = currentSalesBurnRate - (currentSalesBurnRate * rebatableBurnRate * senderRebateRate);\r\n        const senderTotalRebated = $.convert.fromWeiMainToken(this.props.token.senderTotalRebated.total);\r\n        const senderTotalBurnt = $.convert.fromWeiMainToken(this.props.token.senderTotalBurnt.total);\r\n\r\n        const maxRewardPerD = getRewardPerDuration(maximumRewardPerBlock, this.props.blockTime, 1);\r\n        const maxRewardPerW = maxRewardPerD * DAYS_IN_WEEK;\r\n        const maxRewardPerM = maxRewardPerD * DAYS_IN_MONTH;\r\n        const maxRewardPerY = maxRewardPerD * DAYS_IN_YEAR;\r\n        const currentRewardPerD = getRewardPerDuration(currentRewardPerBlock, this.props.blockTime, 1);\r\n        const currentRewardPerW = currentRewardPerD * DAYS_IN_WEEK;\r\n        const currentRewardPerM = currentRewardPerD * DAYS_IN_MONTH;\r\n        const currentRewardPerY = currentRewardPerD * DAYS_IN_YEAR;\r\n\r\n        const senderMaxRewardPerD = getRewardPerDay(maximumRewardPerBlock, this.props.blockTime, totalStaked, senderBalance);\r\n        const senderMaxRewardPerW = senderMaxRewardPerD * DAYS_IN_WEEK;\r\n        const senderMaxRewardPerM = senderMaxRewardPerD * DAYS_IN_MONTH;\r\n        const senderMaxRewardPerY = senderMaxRewardPerD * DAYS_IN_YEAR;\r\n        const senderCurrentRewardPerD = getRewardPerDay(currentRewardPerBlock, this.props.blockTime, totalStaked, senderBalance);\r\n        const senderCurrentRewardPerW = senderCurrentRewardPerD * DAYS_IN_WEEK;\r\n        const senderCurrentRewardPerM = senderCurrentRewardPerD * DAYS_IN_MONTH;\r\n        const senderCurrentRewardPerY = senderCurrentRewardPerD * DAYS_IN_YEAR;\r\n\r\n        const pendingPoolReward = $.convert.fromWeiMainToken(this.props.token.pendingPoolReward);\r\n        const rewardLastDistributedBlock = parseInt(this.props.token.rewardLastDistributedBlock);\r\n        const blocksFromRewardLastDistributed = rewardLastDistributedBlock > 0 ? (parseInt(this.props.token.currentBlock) - rewardLastDistributedBlock) : 0;\r\n        const timeFromRewardLastDistributed = blocksFromRewardLastDistributed * this.props.blockTime;\r\n\r\n        const senderTotalHarvested = $.convert.fromWeiMainToken(this.props.token.senderTotalHarvested.total);\r\n        const totalRebated = $.convert.fromWeiMainToken(this.props.token.totalRebated.total);\r\n        const totalBurnt = $.convert.fromWeiMainToken(this.props.token.totalBurnt.total);\r\n        const totalHarvested = $.convert.fromWeiMainToken(this.props.token.totalHarvested.total);\r\n\r\n        const valueInStableToken = Configuration.getPercentageYieldInvestmentInStablecoin() / this.props.priceInStableToken;\r\n\r\n        const cdpy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, 1);\r\n        const cwpy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, DAYS_IN_WEEK);\r\n        const cmpy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, DAYS_IN_MONTH);\r\n        const capy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, DAYS_IN_YEAR);\r\n\r\n        const tooltipSenderPendingRewardText = (<span className=\"tooltip text-[80%]\">\r\n            Yield generated by holding your tokens in your wallet which is not claimed yet.\r\n        </span>);\r\n        const tooltipMaximumSupplyText = (<span className=\"tooltip text-[80%]\">\r\n            Limiting the maximum supply is not possible due to the dynamic temporary passive (not tradable) supply (DTPS) generation by the farming pools.\r\n        </span>);\r\n        const tooltipTotalLockedSupplyText = (<span className=\"tooltip text-[80%]\">\r\n            Temporary addition to circulating supply. Passive supply which can generate yield but can not be sold.\r\n        </span>);\r\n        const tooltipRewardMaximizingHoldersText = (<span className=\"tooltip text-[80%]\">\r\n            The number of holders required for maximum reward per block emission. The idea is to decelerate the early inflation.\r\n        </span>);\r\n        const tooltipSenderTotalRebatedText = (<span className=\"tooltip text-[80%]\">\r\n            Rebates earned from burns by holding higher balance share.\r\n        </span>);\r\n        const tooltipSeigniorageFeeText = (<span className=\"tooltip text-[80%]\">\r\n            Fee paid to the seignory (token owner) from burns.\r\n        </span>);\r\n\r\n        // 1. popoverSenderBalanceRef\r\n        const popoverSenderBalanceContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Locked Balance\"\r\n                    main={$.convert.formatMainToken(senderLockedBalance)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderLockedBalance * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Free Balance\"\r\n                    main={$.convert.formatMainToken(senderFreeBalance)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderFreeBalance * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Balance Share\"\r\n                    main={$.convert.formatPercentage(senderBalanceShare)}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Stake Share\"\r\n                    main={$.convert.formatPercentage(senderStakeShare)}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 2a. popoverSenderBurnRateRef\r\n        const popoverSenderTransferBurnRateContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Rebatable Burn Rate (RBR)\"\r\n                    main={$.convert.formatPercentage(rebatableBurnRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(transferBurnRate * rebatableBurnRate)}\r\n                    detailUnit=\"% from TBR\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Maximizing Share\"\r\n                    main={$.convert.formatPercentage(rebateMaximizingShare)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Share Stepsize\"\r\n                    main={$.convert.formatPercentage(rebateShareStepsize)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Your Rebate Rate of RBR\"\r\n                    main={$.convert.formatPercentage(senderRebateRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(transferBurnRate * rebatableBurnRate * senderRebateRate)}\r\n                    detailUnit=\"% of TBR\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 2b. popoverSenderBurnRateRef\r\n        const popoverSenderSalesBurnRateContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Rebatable Burn Rate (RBR)\"\r\n                    main={$.convert.formatPercentage(rebatableBurnRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(currentSalesBurnRate * rebatableBurnRate)}\r\n                    detailUnit=\"% from CSBR\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Maximizing Share\"\r\n                    main={$.convert.formatPercentage(rebateMaximizingShare)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Share Stepsize\"\r\n                    main={$.convert.formatPercentage(rebateShareStepsize)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Your Rebate Rate of RBR\"\r\n                    main={$.convert.formatPercentage(senderRebateRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(currentSalesBurnRate * rebatableBurnRate * senderRebateRate)}\r\n                    detailUnit=\"% of CSBR\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 3. popoverMaxRewardPerBlockRef\r\n        const popoverMaxRewardPerBlockContent = (\r\n            <div className=\"grid grid-cols-12 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Day\"\r\n                    main={$.convert.formatMainToken(maxRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Week\"\r\n                    main={$.convert.formatMainToken(maxRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Month\"\r\n                    main={$.convert.formatMainToken(maxRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Year\"\r\n                    main={$.convert.formatMainToken(maxRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n\r\n                <div className={`col-span-12 ${this.props.borderBottom}`}></div>\r\n\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Day\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Week\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Month\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Year\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 4. popoverCurrentRewardPerBlockRef\r\n        const popoverCurrentRewardPerBlockContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title={(<><span className=\"mr-1\">Reward Maximizing Holders</span><StyledPopover isTooltip={true} children={tooltipRewardMaximizingHoldersText} /></>)}\r\n                    main={$.convert.formatInteger(this.props.token.reducedEmissionHolderLimit)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Current Holders\"\r\n                    main={$.convert.formatInteger(this.props.token.holders)}\r\n                    detail={(<span className=\"font-display\">{isRegularEmission ? \"Regular Reward Emission\" : \"Reduced Reward Emission\"}</span>)}\r\n                    detailClassName=\"uppercase text-red-500\"\r\n                />\r\n\r\n                <span className=\"group-title light-box opacity-75 col-span-2\">Pool's Current Reward</span>\r\n                <PriceBox\r\n                    title=\"Per Day\"\r\n                    main={$.convert.formatMainToken(currentRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Week\"\r\n                    main={$.convert.formatMainToken(currentRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Month\"\r\n                    main={$.convert.formatMainToken(currentRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Year\"\r\n                    main={$.convert.formatMainToken(currentRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n\r\n                <span className=\"group-title light-box opacity-75 col-span-2\">Your Current Reward</span>\r\n                <PriceBox\r\n                    title=\"Per Day\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Week\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Month\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Year\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        const lastHarvest = parseInt(this.props.token.senderTotalHarvested.timestamp) === 0 ? \"-\" : $.convert.formatTimespan(now - parseInt(this.props.token.senderTotalHarvested.timestamp));\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-1 gap-y-2\">\r\n                <div className={`card bg-weeb-card1/60 bg-diagonal-lines`}>\r\n                    {this.props.showHeader &&\r\n                        <>\r\n                            <div className=\"grid grid-cols-1 gap-x-2 gap-y-0.5\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <span className=\"card-header-title-text opacity-75 cursor-pointer\" onClick={this.toggleDetailedVisibility}>\r\n                                        <i className={`bi ${(this.state.isDetailed ? \"bi-caret-down-fill\" : \"bi-caret-right-fill\")} mr-1`} />\r\n                                        {this.props.token.details.name}\r\n                                    </span>\r\n                                    <div className=\"card-header-item-text truncate opacity-25 2xs:ml-4\">\r\n                                        <i className=\"bi bi-clipboard mr-1 cursor-pointer\" onClick={async () => {\r\n                                            try {\r\n                                                await navigator.clipboard.writeText(this.props.token.contractAddress);\r\n                                                console.error(\"The token contract address copied.\");\r\n                                            } catch (error) {\r\n                                                console.error(\"Failed to copy the token contract address: \", error);\r\n                                            }\r\n                                        }} />\r\n                                        <a href={tokenExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric hover:select-all\">{this.props.token.contractAddress}</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"flex items-center justify-between card-header-item-text\">\r\n                                    <span className=\"opacity-25\">{swapRouterName}</span>\r\n                                    <span className=\"numeric opacity-25\">\r\n                                        <i className=\"bi bi-box mr-1\" />\r\n                                        {$.convert.formatInteger(this.props.token.currentBlock)}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className={`mt-0.5 mb-3 ${this.props.borderBottom} border-2`}></div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    {/* Header View*/}\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4\">\r\n                        <PriceBox\r\n                            title=\"Price\"\r\n                            main={$.convert.formatStableToken(this.props.priceInStableToken)}\r\n                            mainUnit={$.contracts.stableToken.symbol}\r\n                            detail={$.convert.formatNativeToken(1 / this.props.priceInNativeToken)}\r\n                            detailUnit={`${this.props.token.details.symbol}/${$.contracts.nativeToken.symbol}`}\r\n                        />\r\n                        <PriceBox\r\n                            title={(<><span className=\"mr-1\">Balance</span><StyledPopover children={popoverSenderBalanceContent} /></>)}\r\n                            main={$.convert.formatMainToken(senderBalance)}\r\n                            mainUnit={this.props.token.details.symbol}\r\n                            detail={$.convert.formatMainToken(senderBalance * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                        />\r\n                        <PriceBox\r\n                            title={(<><span className=\"mr-1\">Pending Reward</span><StyledPopover isTooltip={true} children={(<span>{tooltipSenderPendingRewardText}</span>)} /></>)}\r\n                            main={$.convert.formatMainToken(senderPendingReward, 4, 4)}\r\n                            mainUnit={this.props.token.details.symbol}\r\n                            detail={this.props.token.isSenderNonrewardable ? \"Nonrewardable\" : $.convert.formatStableToken(senderPendingReward * this.props.priceInStableToken, 2, 2)}\r\n                            detailUnit={this.props.token.isSenderNonrewardable ? null : $.contracts.stableToken.symbol}\r\n                            mainClassName=\"neon\"\r\n                            detailClassName={`${this.props.token.isSenderNonrewardable ? \"uppercase text-red-400\" : \"\"}`}\r\n                        />\r\n                        <PriceBox\r\n                            containerClassName=\"auto-rows-auto\"\r\n                            title={(\r\n                                <>\r\n                                    Last Harvest\r\n                                    {this.props.token.isDirectHarvestingEnabled\r\n                                        ? (<i className=\"bi bi-lightning-charge-fill text-green-500\" />)\r\n                                        : null}\r\n                                    {this.props.token.isSenderDirectHarvester\r\n                                        ? (<i className=\"bi bi-lightning-charge-fill text-red-500\" />)\r\n                                        : null}\r\n                                </>\r\n                            )}\r\n                            main={this.props.showHarvestButton && lastHarvest}\r\n                            info={!this.props.showHarvestButton && lastHarvest}\r\n                            detail={(\r\n                                <>\r\n                                    {this.props.showHarvestButton &&\r\n                                        <div className=\"sm:container font-display mt-1\">\r\n                                            <button\r\n                                                autoFocus={true}\r\n                                                type=\"button\"\r\n                                                className=\"w-full h-9 btn btn-green\"\r\n                                                disabled={this.state.isInteractionDisabled || senderPendingReward === 0}\r\n                                                onClick={async () => {\r\n                                                    await this.execute(() => this.props.harvestPendingReward());\r\n                                                }}\r\n                                            >\r\n                                                Harvest the Reward\r\n                                            </button>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            )}\r\n                            mainClassName={this.props.showHarvestButton ? \"text-[0.875em]\" : \"\"}\r\n                            infoClassName={!this.props.showHarvestButton ? \"text-[1.4em] self-end\" : \"\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {(this.state.isDetailed && this.props.showHeader) &&\r\n                    <>\r\n                        {/* Supply View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-2 sm:col-span-4\">Supply Details</span>\r\n                                <PriceBox\r\n                                    title=\"Circulating Supply\"\r\n                                    main={$.convert.formatMainToken(totalSupply)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Market Cap.\"\r\n                                    main={$.convert.formatStableToken(totalSupply * this.props.priceInStableToken)}\r\n                                    mainUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Initial Supply\"\r\n                                    main={$.convert.formatMainToken(initialSupply)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(initialSupply * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                {(maximumSupply > 0)\r\n                                    ? <PriceBox\r\n                                        title={(<><span className=\"mr-1\">Maximum Supply</span><StyledPopover isTooltip={true} children={(<span>{tooltipMaximumSupplyText}</span>)} /></>)}\r\n                                        main={$.convert.formatMainToken(maximumSupply)}\r\n                                        mainUnit={this.props.token.details.symbol}\r\n                                        detail={$.convert.formatStableToken(maximumSupply * this.props.priceInStableToken)}\r\n                                        detailUnit={$.contracts.stableToken.symbol}\r\n                                    />\r\n                                    : <PriceBox\r\n                                        title={(<><span className=\"mr-1\">Maximum Supply</span><StyledPopover isTooltip={true} children={(<span>{tooltipMaximumSupplyText}</span>)} /></>)}\r\n                                        main=\"Dynamic\"\r\n                                        mainClassName=\"font-display\"\r\n                                    />\r\n                                }\r\n\r\n                                <div className={`col-span-2 sm:col-span-4 ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    title={(<><span className=\"mr-1\">Total Locked Supply</span><StyledPopover isTooltip={true} children={(<span>{tooltipTotalLockedSupplyText}</span>)} /></>)}\r\n                                    main={$.convert.formatMainToken(totalLockedSupply)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalLockedSupply * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Staked\"\r\n                                    main={$.convert.formatMainToken(totalStaked)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalStaked * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Supply in Contracts\"\r\n                                    main={$.convert.formatMainToken(supplyInContracts)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(supplyInContracts * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Supply in Nonrewardables\"\r\n                                    main={$.convert.formatMainToken(supplyInNonrewardables)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(supplyInNonrewardables * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Reward View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-6 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-6\">Token Emission</span>\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Reward Per Block [Min, Max]\"\r\n                                    main={`[${$.convert.formatMainToken(baseRewardPerBlock)}, ${maximumRewardPerBlock === 0 ? \"-\" : $.convert.formatMainToken(maximumRewardPerBlock)}]`}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Reward Multiplier\"\r\n                                    main={$.convert.formatNumberScaled(1 + rewardMultiplier)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"sm:hidden\">Avg. </span><span className=\"hidden sm:inline\">Average </span>Block Time</>)}\r\n                                    main={this.props.blockTime}\r\n                                    mainUnit=\"s\"\r\n                                />\r\n                                {/* <PriceBox\r\n                                    title={(<><span className=\"mr-1\">Maximum Reward Per Block</span>{!isRegularEmission && <StyledPopover children={popoverMaxRewardPerBlockContent} />}</>)}\r\n                                    main={$.convert.formatMainToken(maximumRewardPerBlock)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(maximumRewardPerBlock * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    mainClassName=\"glow\"\r\n                                /> */}\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"mr-1 hidden sm:inline\">Current Reward Per Block</span><span className=\"mr-1 sm:hidden\">Current Reward/Block</span><StyledPopover children={popoverCurrentRewardPerBlockContent} /></>)}\r\n                                    main={$.convert.formatMainToken(currentRewardPerBlock)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(currentRewardPerBlock * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    mainClassName=\"neon\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Pending Pool Reward\"\r\n                                    main={$.convert.formatMainToken(pendingPoolReward, 4, 4)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(pendingPoolReward * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    // info={this.getActivity2(blocksFromRewardLastDistributed, timeFromRewardLastDistributed)}\r\n                                    info={(<span><i className=\"bi bi-calendar2-check mr-1\" />{$.convert.formatInteger(rewardLastDistributedBlock)} / {$.convert.formatInteger(blocksFromRewardLastDistributed)}</span>)}\r\n                                    infoClassName=\"opacity-25 light-box\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Your Total Harvested\"\r\n                                    main={$.convert.formatMainToken(senderTotalHarvested)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(senderTotalHarvested * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.senderTotalHarvested.count, this.props.token.senderTotalHarvested.timestamp, now)}\r\n                                />\r\n\r\n                                <div className={`col-span-6 ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Transfer Burn Rate (TBR)\"\r\n                                    main={$.convert.formatPercentage(transferBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"mr-1\">Your Transfer Burn Rate</span><StyledPopover children={popoverSenderTransferBurnRateContent} /></>)}\r\n                                    main={this.props.token.isSenderNonburnable ? (<s>{$.convert.formatPercentage(senderTransferBurnRate)}</s>) : $.convert.formatPercentage(senderTransferBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                    info={this.props.token.isSenderNonburnable ? (<span className=\"font-display\">You're Burn Free</span>) : null}\r\n                                    infoClassName=\"opacity-75 font-semibold uppercase text-red-500\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Sales Burn Rates [Min, Max]\"\r\n                                    main={`[${$.convert.formatPercentage(salesBaseBurnRate)}, ${salesMaximumBurnRate === 0 ? \"-\" : $.convert.formatPercentage(salesMaximumBurnRate)}]`}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Sales Burn Multiplier\"\r\n                                    main={$.convert.formatNumberScaled(1 + burnMultiplier)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Current Sales Burn Rate (CSBR)\"\r\n                                    main={$.convert.formatPercentage(currentSalesBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"mr-1\">Your Sales Burn Rate</span><StyledPopover children={popoverSenderSalesBurnRateContent} /></>)}\r\n                                    main={this.props.token.isSenderNonburnable ? (<s>{$.convert.formatPercentage(senderSalesBurnRate)}</s>) : $.convert.formatPercentage(senderSalesBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                    info={this.props.token.isSenderNonburnable ? (<span className=\"font-display\">You're Burn Free</span>) : null}\r\n                                    infoClassName=\"opacity-75 font-semibold uppercase text-red-500\"\r\n                                />\r\n\r\n                                <div className={`col-span-6 ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3\"\r\n                                    title={(<><span className=\"mr-1\">Your Total Rebated</span><StyledPopover isTooltip={true} children={(<span>{tooltipSenderTotalRebatedText}</span>)} /></>)}\r\n                                    main={$.convert.formatMainToken(senderTotalRebated)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(senderTotalRebated * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.senderTotalRebated.count, this.props.token.senderTotalRebated.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3\"\r\n                                    title=\"Your Total Burnt\"\r\n                                    main={$.convert.formatMainToken(senderTotalBurnt)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(senderTotalBurnt * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.senderTotalBurnt.count, this.props.token.senderTotalBurnt.timestamp, now)}\r\n                                />\r\n\r\n                                <span className=\"group-title light-box opacity-75 col-span-6\">Inflation Regulator</span>\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Time From Last Regulation\"\r\n                                    main={$.convert.formatTimespan(now - regulationTimestamp)}\r\n                                    mainClassName={now - regulationTimestamp > regulationInterval ? \"text-red-500\" : null}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Regulation Interval\"\r\n                                    main={$.convert.formatTimespan(regulationInterval)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Interval Average Price\"\r\n                                    main={$.convert.formatStableToken(priceAverage * nativeTokenPriceInStableToken)}\r\n                                    mainUnit={$.contracts.stableToken.symbol}\r\n                                    detail={priceAverage == 0 ? \"-\" : $.convert.formatNativeToken(1 / priceAverage)}\r\n                                    detailUnit={`${this.props.token.details.symbol}/${$.contracts.nativeToken.symbol}`}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Info View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-4\">Current Percentage Yield</span>\r\n                                <PriceBox\r\n                                    title=\"Daily\"\r\n                                    main={$.convert.formatPercentage(cdpy, 4)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Weekly\"\r\n                                    main={$.convert.formatPercentage(cwpy, 3)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Monthly\"\r\n                                    main={$.convert.formatPercentage(cmpy)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Annual\"\r\n                                    main={$.convert.formatPercentage(capy)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* General View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-6 sm:grid-cols-5 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-6 sm:col-span-5\">Liquidity & Others</span>\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-1\"\r\n                                    title=\"Total Liquidity\"\r\n                                    main={$.convert.formatMainToken(this.props.token.tokenReserve)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatNativeToken(this.props.token.nativeTokenReserve)}\r\n                                    detailClassName=\"text-[1.4em] before:content-['+'] before:block before:text-[0.75em]\"\r\n                                    detailUnit={$.contracts.nativeToken.symbol}\r\n                                    detailUnitClassName=\"text-[0.75em]\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-1\"\r\n                                    title=\"Initial Liquidity\"\r\n                                    main={$.convert.formatMainToken(this.props.token.initialTokenReserve)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatNativeToken(this.props.token.initialNativeTokenReserve)}\r\n                                    detailClassName=\"text-[1.4em] before:content-['+'] before:block before:text-[0.75em]\"\r\n                                    detailUnit={$.contracts.nativeToken.symbol}\r\n                                    detailUnitClassName=\"text-[0.75em]\"\r\n                                />\r\n\r\n                                <div className={`col-span-6 sm:hidden ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-2 sm:col-span-1\"\r\n                                    title={(<><span className=\"mr-1\">Seigniorage Fee</span><StyledPopover isTooltip={true} children={(<span>{tooltipSeigniorageFeeText}</span>)} /></>)}\r\n                                    main={$.convert.formatPercentage(seigniorageFee)}\r\n                                    mainUnit=\"%\"\r\n                                    detail={(<a href={seignioryExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric\">{$.convert.formatAccount(this.props.token.seigniory)}</a>)}\r\n                                    info={this.props.token.isSenderSeignory ? (<span className=\"font-display\">You're Seignory</span>) : null}\r\n                                    infoClassName=\"opacity-75 light-box font-semibold uppercase text-red-500\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-2 sm:col-span-1\"\r\n                                    title=\"Transfers\"\r\n                                    main={$.convert.formatInteger(this.props.token.transfers)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-2 sm:col-span-1\"\r\n                                    title=\"Holders\"\r\n                                    main={$.convert.formatInteger(this.props.token.holders)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Totals View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-3 xl:grid-cols-6 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-2 md:col-span-3 xl:col-span-6\">Statistics</span>\r\n                                <PriceBox\r\n                                    title={(<>Total Transacted<span className=\"hidden sm:inline\"> Volume</span></>)}\r\n                                    main={$.convert.formatMainToken(totalTransacted)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalTransacted * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalTransacted.count, this.props.token.totalTransacted.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Seigniorage Collected\"\r\n                                    main={$.convert.formatMainToken(seigniorageFeeCollected)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(seigniorageFeeCollected * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.seigniorageFee.collected.count, this.props.token.seigniorageFee.collected.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Rebated\"\r\n                                    main={$.convert.formatMainToken(totalRebated)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalRebated * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalRebated.count, this.props.token.totalRebated.timestamp, now)}\r\n                                />\r\n\r\n                                <div className={`hidden md:block md:col-span-3 xl:hidden ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    title=\"Total Burnt\"\r\n                                    main={$.convert.formatMainToken(totalBurnt)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalBurnt * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalBurnt.count, this.props.token.totalBurnt.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Rewarded\"\r\n                                    main={$.convert.formatMainToken(totalRewarded)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalRewarded * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Harvested\"\r\n                                    main={$.convert.formatMainToken(totalHarvested)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalHarvested * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalHarvested.count, this.props.token.totalHarvested.timestamp, now)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Content generators\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActivity2(count, timespan) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-calendar2-check mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timespan > 0 ? $.convert.formatTimespan(timespan) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSimulatedRewardPerBlockValues(rewardPerBlock, reducedEmissionHolderLimit) {\r\n        const values = [];\r\n\r\n        for (let i = 0; i <= reducedEmissionHolderLimit;) {\r\n            values.push({\r\n                holder: i,\r\n                rewardPerBlock: rewardPerBlock * i / reducedEmissionHolderLimit\r\n            });\r\n\r\n            i += 100;\r\n\r\n            // if (i <= 10) {\r\n            //     i += 1;\r\n            // } else if (i <= 100) {\r\n            //     i += 10;\r\n            // } else {\r\n            //     i += 100;\r\n            // }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    // Actions\r\n    toggleDetailedVisibility() {\r\n        this.setState({ isDetailed: !this.state.isDetailed });\r\n    }\r\n\r\n    async execute(func) {\r\n        this.setState({ isInteractionDisabled: true });\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.setState({ isInteractionDisabled: false });\r\n        }\r\n    }\r\n}\r\n","export function getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf(factor, reserveQuoteAsset) {\r\n    return (Math.sqrt(factor) - 1) * reserveQuoteAsset;\r\n}\r\n\r\nexport function getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf(factor, reserveBaseAsset) {\r\n    return (1 / Math.sqrt(factor) - 1) * reserveBaseAsset;\r\n}\r\n\r\nexport function getPriceIncreaseFactorFromQuoteAssetInflow(inflowQuoteAssetAmount, reserveQuoteAsset) {\r\n    return Math.pow((inflowQuoteAssetAmount / reserveQuoteAsset + 1), 2);\r\n}\r\n\r\nexport function getPriceDecreaseFactorFromBaseAssetOutflow(outflowBaseAssetAmount, reserveBaseAsset) {\r\n    return Math.pow(1 / (outflowBaseAssetAmount / reserveBaseAsset + 1), 2);\r\n}\r\n\r\nexport function getAmountOut(amount0In, reserve0, reserve1) {\r\n    return amount0In * reserve1 / (amount0In + reserve0);\r\n}","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MainText } from \"../../../InfoBox\";\r\n\r\nexport default function RangeInput({\r\n    isDisabled,\r\n    min,\r\n    max,\r\n    decimals,\r\n    percentages,\r\n    valueClassName,\r\n    rangeClassName,\r\n    buttonClassName,\r\n    setValue,\r\n    setPercentage\r\n}) {\r\n    const [value, setValueInternal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const v = parseFloat(value);\r\n        const m = parseFloat(max);\r\n\r\n        if (v > m) {\r\n            updateValues(m);\r\n        }\r\n    }, [max]);\r\n\r\n    function format(x) {\r\n        return x ? parseFloat(parseFloat(x).toFixed(decimals)) : 0;\r\n    }\r\n\r\n    function getStep() {\r\n        return !isNaN(decimals) ? Math.pow(10, -decimals) : 0;\r\n    }\r\n\r\n    function updateValues(n) {\r\n        const mx = parseFloat(max);\r\n        const mn = parseFloat(min);\r\n\r\n        if (n > mx) {\r\n            n = mx;\r\n        }\r\n\r\n        if (n < mn) {\r\n            n = mn;\r\n        }\r\n\r\n        setValueInternal(n);\r\n        setValue(n);\r\n\r\n        // Update the percentage.\r\n        const r = mx - mn;\r\n        setPercentage(r !== 0 ? n / r : 0);\r\n    }\r\n\r\n    function onValueChanged(e) {\r\n        updateValues(e.target.value != null ? format(e.target.value) : 0);\r\n    }\r\n\r\n    function setPercentageFormatted(percentage) {\r\n        const mx = parseFloat(max);\r\n        const mn = parseFloat(min);\r\n\r\n        const n = mn + (mx - mn) * percentage / 100;\r\n        updateValues(n);\r\n    }\r\n\r\n    function getSelectablePercentages() {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < percentages.length; ++i) {\r\n            const percentage = percentages[i];\r\n\r\n            items.push((\r\n                <button key={i}\r\n                    type=\"button\"\r\n                    className={`${buttonClassName} ${i < 2 ? \"hidden lg:inline\" : \"\"}`}\r\n                    onClick={() => setPercentageFormatted(percentage)}\r\n                >\r\n                    <MainText\r\n                        sizeCount={1}\r\n                        main={percentage}\r\n                        mainUnit=\"%\"\r\n                        mainClassName=\"!text-[0.875em]\"\r\n                        mainUnitClassName=\"!text-[0.6875em] ml-0.5\"\r\n                    />\r\n                </button>\r\n            ));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-y-1\">\r\n            <input\r\n                disabled={isDisabled}\r\n                type=\"number\"\r\n                className={`text-[2em] numeric text-right h-fit ${valueClassName}`}\r\n                min={format(min)}\r\n                max={format(max)}\r\n                step={format(getStep())}\r\n                value={format(value)}\r\n                onInput={onValueChanged}\r\n            />\r\n            <input\r\n                disabled={isDisabled}\r\n                type=\"range\"\r\n                list=\"tickmarks\"\r\n                className={`border-0 focus:border-0 ring-0 focus:ring-0 ${rangeClassName}`}\r\n                min={format(min)}\r\n                max={format(max)}\r\n                step={format(getStep())}\r\n                value={format(value)}\r\n                onInput={onValueChanged}\r\n            />\r\n            {/* <datalist id=\"tickmarks\">\r\n                <option value=\"0\" label=\"0%\"></option>\r\n                <option value=\"10\"></option>\r\n                <option value=\"20\"></option>\r\n                <option value=\"30\"></option>\r\n                <option value=\"40\"></option>\r\n                <option value=\"50\" label=\"50%\"></option>\r\n                <option value=\"60\"></option>\r\n                <option value=\"70\"></option>\r\n                <option value=\"80\"></option>\r\n                <option value=\"90\"></option>\r\n                <option value=\"100\" label=\"100%\"></option>\r\n            </datalist> */}\r\n            <div className=\"flex items-center justify-center space-x-2 lg:justify-evenly\">\r\n                {getSelectablePercentages()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nRangeInput.propTypes = {\r\n    percentages: PropTypes.array,\r\n    buttonClassName: PropTypes.string\r\n};\r\n\r\nRangeInput.defaultProps = {\r\n    percentages: [1, 2, 5, 10, 25, 50, 75, 100],\r\n    buttonClassName: \"btn btn-indigo text-violet-50 numeric w-11 h-7\"\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DelayedInput({\r\n    delay,\r\n    type,\r\n    id,\r\n    className,\r\n    defaultValue,\r\n    placeholder,\r\n    list,\r\n    min,\r\n    max,\r\n    step,\r\n    onInput\r\n}) {\r\n    const [input, setInput] = useState();\r\n\r\n    useEffect(() => {\r\n        //if (!input) {\r\n            setInput(defaultValue);\r\n        //}\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => onInput(input), delay);\r\n        return () => clearTimeout(timerId);\r\n    }, [input]);\r\n\r\n    return (\r\n        <input\r\n            type={type}\r\n            autoComplete=\"off\"\r\n            id={id}\r\n            className={className}\r\n            value={input ? type === \"number\" && isNaN(input) ? \"\" : input : \"\"}\r\n            placeholder={placeholder}\r\n            list={list}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n            onChange={e => setInput(e.target.value)}\r\n        />\r\n    )\r\n}\r\n\r\nDelayedInput.propTypes = {\r\n    delay: PropTypes.number,\r\n    type: PropTypes.string,\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    placeholder: PropTypes.string,\r\n    list: PropTypes.string,\r\n    step: PropTypes.any,\r\n    onInput: PropTypes.func\r\n}\r\n\r\nDelayedInput.defaultProps = {\r\n    delay: 400,\r\n    type: \"search\",\r\n    placeholder: \"Search here...\",\r\n    onInput: () => {\r\n    }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Switch } from \"@headlessui/react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { getAmountOut } from \"../../utils/PriceExtensions\";\r\n\r\nimport RangeInput from \"./dialogs/core/RangeInput\";\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\n\r\nimport { MainText, PriceBox } from \"../InfoBox\";\r\nimport Configuration from \"../../Configuration\";\r\n\r\nexport default function Swap({\r\n    isDarkTheme,\r\n    nativeCoinBalance,\r\n    token,\r\n    nativeTokenPriceInStableToken,\r\n    swap\r\n}) {\r\n    const Mode = Object.freeze({\r\n        Buy: 0,\r\n        Sell: 1\r\n    });\r\n\r\n    const [showSlippageTolerance, setShowSlippageTolerance] = useState(false);\r\n    const [isInteractionDisabled, setIsInteractionDisabled] = useState(false);\r\n\r\n    const [mode, setMode] = useState(Mode.Buy);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [recipient, setRecipient] = useState();\r\n\r\n    const [maxReceived, setMaxReceived] = useState(0);\r\n    const [minReceived, setMinReceived] = useState(0);\r\n    const [maxPriceImpact, setMaxPriceImpact] = useState(0);\r\n    const [minPriceImpact, setMinPriceImpact] = useState(0);\r\n\r\n    const tokenBalance = $.convert.fromWeiMainToken(token.senderFreeBalance);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (amount > 0) {\r\n                const tokenPriceInNativeToken = token.nativeTokenReserve / token.tokenReserve;\r\n                const swapFee = Configuration.getSwapRouterSwapFee($.chainId, Configuration.getDefaultSwapRouter($.chainId)) / 10000;\r\n\r\n                console.log({ tokenReserve: token.tokenReserve, nativeTokenReserve: token.nativeTokenReserve });\r\n                console.log(`initial price: ${nativeTokenPriceInStableToken * tokenPriceInNativeToken}`);\r\n\r\n                if (mode === Mode.Buy) {\r\n                    // const max = await $.router.getMainTokenAmountFromNativeCoin(amount);\r\n                    // setMaxReceived(max);\r\n\r\n                    const max = getAmountOut(amount * (1 - swapFee), token.nativeTokenReserve, token.tokenReserve);\r\n                    setMaxReceived(max);\r\n\r\n                    const min = max - max * $.settings.getSlippageTolerance() / 10000;\r\n                    setMinReceived(min);\r\n\r\n                    let finalTokenPriceInNativeToken = (amount * (1 - swapFee) + token.nativeTokenReserve) / (token.tokenReserve - max);\r\n                    let priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMaxPriceImpact(priceImpact);\r\n\r\n                    finalTokenPriceInNativeToken = (amount * (1 - swapFee) + token.nativeTokenReserve) / (token.tokenReserve - min);\r\n                    priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMinPriceImpact(priceImpact);\r\n\r\n                    console.log(`mainTokenOut: ${max}; price: ${nativeTokenPriceInStableToken * finalTokenPriceInNativeToken}`);\r\n                } else {\r\n                    // const max = await $.router.getNativeCoinAmountFromMainToken(amount);\r\n                    // setMaxReceived(max);\r\n\r\n                    const max = getAmountOut(amount * (1 - swapFee), token.tokenReserve, token.nativeTokenReserve);\r\n                    setMaxReceived(max);\r\n\r\n                    const min = max - max * $.settings.getSlippageTolerance() / 10000;\r\n                    setMinReceived(min);\r\n\r\n                    let finalTokenPriceInNativeToken = (token.nativeTokenReserve - max) / (token.tokenReserve + amount * (1 - swapFee));\r\n                    let priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMaxPriceImpact(priceImpact);\r\n\r\n                    finalTokenPriceInNativeToken = (token.nativeTokenReserve - min) / (token.tokenReserve + amount * (1 - swapFee));\r\n                    priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMinPriceImpact(priceImpact);\r\n\r\n                    console.log(`nativeTokenOut: ${max}; price: ${nativeTokenPriceInStableToken * finalTokenPriceInNativeToken}`);\r\n                }\r\n            }\r\n        })();\r\n    }, [amount, token.tokenReserve, token.nativeTokenReserve]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-y-3\">\r\n                <div className=\"flex items-center justify-between group-title light-box opacity-75 h-9 px-2\">\r\n                    <Switch.Group>\r\n                        <div className=\"flex items-center\">\r\n                            <Switch\r\n                                checked={mode === Mode.Buy}\r\n                                onChange={toggleMode}\r\n                                className={`${isDarkTheme ? \"bg-violet-900/80\" : \"bg-violet-300\"} relative inline-flex items-center h-5 rounded-full w-11 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-violet-300/50`}\r\n                            >\r\n                                <span className=\"sr-only\">Swap mode</span>\r\n                                <span className={`${mode === Mode.Buy ? \"translate-x-6\" : \"translate-x-1\"} inline-block w-4 h-4 transform ${isDarkTheme ? \"bg-violet-300\" : \"bg-slate-800\"} rounded-full transition-transform`} />\r\n                            </Switch>\r\n                            <Switch.Label className=\"leading-6 ml-1.5\">\r\n                                {mode === Mode.Buy ? \"Buy\" : \"Sell\"} {$.contracts.token.symbol}\r\n                            </Switch.Label>\r\n                        </div>\r\n                    </Switch.Group>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                    <div className=\"flex items-center justify-between leading-6\">\r\n                        <span className=\"input-label\">\r\n                            Amount:\r\n                            <span className=\"ml-1\">\r\n                                (\r\n                                <MainText\r\n                                    main={$.convert.formatPercentage(percentage)}\r\n                                    mainUnit=\"%\"\r\n                                    mainClassName=\"text-[1em]\"\r\n                                    mainUnitClassName=\"ml-0.5\"\r\n                                />\r\n                                )\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"input-label\">\r\n                            Balance:\r\n                            <MainText\r\n                                main={mode === Mode.Buy ? nativeCoinBalance ? $.convert.formatNativeCoin(nativeCoinBalance) : \"-\" : tokenBalance ? $.convert.formatMainToken(tokenBalance) : \"-\"}\r\n                                mainUnit={mode === Mode.Buy ? $.nativeCoin.symbol : $.contracts.token.symbol}\r\n                                mainClassName=\"text-[1em] ml-1\"\r\n                                mainUnitClassName=\"ml-0.5\"\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className={`${isDarkTheme ? \"accent-violet-300\" : \"\"}`}>\r\n                        <RangeInput\r\n                            min={0}\r\n                            max={mode === Mode.Buy ? nativeCoinBalance ? nativeCoinBalance : 0 : tokenBalance ? tokenBalance : 0}\r\n                            decimals={Math.min(mode === Mode.Buy ? $.nativeCoin.decimals : $.contracts.token.decimals, 4)}\r\n                            setValue={setAmount}\r\n                            setPercentage={setPercentage}\r\n                            valueClassName={`${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                            rangeClassName={`${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                            buttonClassName={`btn btn-violet text-indigo-50 numeric w-11 h-7 ${isDarkTheme ? \"bg-violet-900/80\" : \"bg-violet-900/20\"} hover:text-violet-900 focus:hover:text-violet-200`}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 gap-y-1\">\r\n                    <label htmlFor=\"recipient\" className=\"flex leading-6\">\r\n                        <span className=\"input-label\">Recipient:</span>\r\n                    </label>\r\n                    <DelayedInput\r\n                        delay={400}\r\n                        type=\"search\"\r\n                        id=\"recipient\"\r\n                        className={`numeric !text-[1em] text-right ${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                        placeholder={`Enter recipient address${$.account ? \" or leave blank if it's you\" : null}`}\r\n                        onInput={value => setRecipient(value)}\r\n                    />\r\n                </div>\r\n                <div className=\"flex items-start justify-between\">\r\n                    <div className=\"lg:col-span-2 justify-self-start\">\r\n                        <span\r\n                            className=\"cursor-pointer text-[1.125em] leading-none shadow-none\"\r\n                            onClick={() => {\r\n                                toggleSlippageTolerance();\r\n                            }}\r\n                        >\r\n                            {showSlippageTolerance\r\n                                ? <i className=\"bi bi-gear-fill\" />\r\n                                : <i className=\"bi bi-gear\" />\r\n                            }\r\n                        </span>\r\n                        <span className=\"ml-2\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className={`w-20 numeric !text-[1em] text-right transition origin-left ${showSlippageTolerance ? \"scale-x-100\" : \"scale-x-0\"} ${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                                defaultValue={$.settings.getSlippageTolerance() / 100}\r\n                                placeholder=\"Enter slippage tolerance\"\r\n                                min={0}\r\n                                step={0.01}\r\n                                onChange={e => {\r\n                                    $.settings.setSlippageTolerance(parseFloat(e.target.value) * 100);\r\n                                }}\r\n                            />\r\n                            <span className={`ml-1 numeric transition ${showSlippageTolerance ? null : \"hidden\"}`}>%</span>\r\n                        </span>\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`lg:col-span-2 w-28 h-9 text-[0.75em] btn btn-green justify-self-end ${isDarkTheme ? \"text-violet-50\" : \"\"}`}\r\n                        disabled={isInteractionDisabled || amount === 0 || !(recipient ? Web3.utils.isAddress(recipient.toLowerCase()) : true)}\r\n                        onClick={async () => {\r\n                            await execute(() => swap(amount, minReceived, recipient, mode === Mode.Buy));\r\n                        }}>\r\n                        {mode === Mode.Buy ? \"Buy\" : \"Sell\"}\r\n                    </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-y-4 gap-x-2 items-center text-[80%]\">\r\n                    <PriceBox\r\n                        title=\"To be Received (Min, Max)\"\r\n                        main={mode === Mode.Buy ? $.convert.formatNativeCoin(minReceived) : $.convert.formatMainToken(minReceived)}\r\n                        mainUnit={mode === Mode.Buy ? $.contracts.token.symbol : $.nativeCoin.symbol}\r\n                        detail={mode === Mode.Buy ? $.convert.formatNativeCoin(maxReceived) : $.convert.formatMainToken(maxReceived)}\r\n                        detailUnit={mode === Mode.Buy ? $.contracts.token.symbol : $.nativeCoin.symbol}\r\n                        detailClassName=\"opacity-100 text-[1.4em]\"\r\n                        detailUnitClassName=\"!opacity-75 !text-[0.75em]\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Price Impact (Min, Max)\"\r\n                        detail={$.convert.formatPercentage(maxPriceImpact, 4, 2)}\r\n                        detailUnit=\"%\"\r\n                        main={$.convert.formatPercentage(minPriceImpact, 4, 2)}\r\n                        mainUnit=\"%\"\r\n                        detailClassName=\"opacity-100 text-[1.4em]\"\r\n                        detailUnitClassName=\"!opacity-75 !text-[0.75em]\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    function toggleMode() {\r\n        if (mode === Mode.Buy) {\r\n            setMode(Mode.Sell);\r\n        } else {\r\n            setMode(Mode.Buy);\r\n        }\r\n    }\r\n\r\n    function toggleSlippageTolerance() {\r\n        setShowSlippageTolerance(!showSlippageTolerance);\r\n    }\r\n\r\n    async function execute(func) {\r\n        setIsInteractionDisabled(true);\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setIsInteractionDisabled(false);\r\n        }\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport RangeInput from \"./dialogs/core/RangeInput\";\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\n\r\nimport { MainText } from \"../InfoBox\";\r\n\r\nimport { MAX_UINT256 } from \"../../utils/Utils\";\r\n\r\nexport default function Transfer({\r\n    balance\r\n}) {\r\n    const [isInteractionDisabled, setIsInteractionDisabled] = useState(false);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [recipient, setRecipient] = useState();\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-y-3 items-center\">\r\n            <div className=\"flex items-center justify-center group-title light-box opacity-75 h-9 px-2\">\r\n                <span>\r\n                    Transfer {$.contracts.token.symbol}\r\n                </span>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                <div className=\"flex items-center justify-between leading-6\">\r\n                    <span className=\"input-label\">\r\n                        Amount:\r\n                        <span className=\"ml-1\">\r\n                            (\r\n                            <MainText\r\n                                main={$.convert.formatPercentage(percentage)}\r\n                                mainUnit=\"%\"\r\n                                mainClassName=\"text-[1em]\"\r\n                                mainUnitClassName=\"ml-0.5\"\r\n                            />\r\n                            )\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"input-label\">\r\n                        Balance:\r\n                        <MainText\r\n                            main={balance ? $.convert.formatMainToken(balance) : \"-\"}\r\n                            mainUnit={$.contracts.token.symbol}\r\n                            mainClassName=\"text-[1em] ml-1\"\r\n                            mainUnitClassName=\"ml-0.5\"\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <RangeInput\r\n                        min={0}\r\n                        max={balance ? balance : 0}\r\n                        decimals={Math.min($.contracts.token.decimals, 4)}\r\n                        setValue={setAmount}\r\n                        setPercentage={setPercentage}\r\n                        buttonClassName=\"btn btn-violet text-indigo-50 numeric w-11 h-7 bg-violet-900/20 hover:text-violet-900 focus:hover:text-violet-200\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 gap-y-1\">\r\n                <label htmlFor=\"recipient\" className=\"flex leading-6\">\r\n                    <span className=\"input-label\">Recipient:</span>\r\n                </label>\r\n                <DelayedInput\r\n                    delay={400}\r\n                    type=\"search\"\r\n                    id=\"recipient\"\r\n                    className=\"numeric !text-[1em] text-right\"\r\n                    placeholder=\"Enter recipient address\"\r\n                    onInput={value => setRecipient(value)}\r\n                />\r\n            </div>\r\n            <div className=\"flex items-start justify-end\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"w-28 h-9 text-[0.75em] btn btn-green\"\r\n                    disabled={isInteractionDisabled || !(recipient && Web3.utils.isAddress(recipient.toLowerCase())) || amount === 0}\r\n                    onClick={async () => {\r\n                        const value = amount === balance ? MAX_UINT256 : $.convert.toWeiMainToken(amount);\r\n                        await execute(() => $.token.transfer(recipient, value));\r\n                    }}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    async function execute(func) {\r\n        setIsInteractionDisabled(true);\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setIsInteractionDisabled(false);\r\n        }\r\n    }\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox } from \"../InfoBox\";\r\n\r\nimport { getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf, getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf } from \"../../utils/PriceExtensions\";\r\n\r\nexport default function InflowOutflowCalculator({\r\n    tokenReserve,\r\n    nativeTokenReserve,\r\n    tokenPriceInStableToken,\r\n    nativeTokenPriceInStableToken\r\n}) {\r\n    const Mode = Object.freeze({\r\n        None: 0,\r\n        Inflow: 1,\r\n        Outflow: 2\r\n    });\r\n\r\n    const [targetPrice, setTargetPrice] = useState(0);\r\n    const [mode, setMode] = useState(Mode.None);\r\n    const [assetAmountRequired, setAssetAmountRequired] = useState();\r\n\r\n    useEffect(() => {\r\n        const factor = targetPrice / tokenPriceInStableToken;\r\n\r\n        if (targetPrice > tokenPriceInStableToken) {\r\n            const quoteAssetAmountRequired = getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf(factor, nativeTokenReserve);\r\n            setAssetAmountRequired(quoteAssetAmountRequired);\r\n            setMode(Mode.Inflow);\r\n        } else if (targetPrice < tokenPriceInStableToken) {\r\n            const baseAssetAmountRequired = getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf(factor, tokenReserve);\r\n            setAssetAmountRequired(baseAssetAmountRequired);\r\n            setMode(Mode.Outflow);\r\n        } else {\r\n            setAssetAmountRequired(undefined);\r\n            setMode(Mode.None);\r\n        }\r\n    }, [tokenReserve, nativeTokenReserve, tokenPriceInStableToken, nativeTokenPriceInStableToken, targetPrice]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                <div>\r\n                    <span className=\"text-[0.5em] text-violet-100/50 light-box block mb-4 min-h-[5.5em] xs:min-h-[4em]\">\r\n                        Calculates the amount of inflow or outflow required to bring the price to the desired level.\r\n                    </span>\r\n                    <div className=\"grid grid-cols-1 gap-y-1\">\r\n                        <label htmlFor=\"price\" className=\"flex leading-6\">\r\n                            <span className=\"input-label\">Target price</span>\r\n                        </label>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"number\"\r\n                            id=\"price\"\r\n                            className=\"numeric !text-[1em] text-right\"\r\n                            defaultValue={$.convert.formatStableToken(tokenPriceInStableToken * 2, 4, 0)}\r\n                            placeholder={`${$.contracts.token.symbol} price in ${$.contracts.stableToken.symbol}`}\r\n                            min={0}\r\n                            step={1}\r\n                            onInput={value => setTargetPrice(parseFloat(value))}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-[80%]\">\r\n                    {mode === Mode.Inflow &&\r\n                        <PriceBox\r\n                            title=\"Required Inflow\"\r\n                            main={$.convert.formatNativeToken(assetAmountRequired)}\r\n                            mainUnit={$.contracts.nativeToken.symbol}\r\n                            detail={$.convert.formatStableToken(assetAmountRequired * nativeTokenPriceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            mainUnitClassName=\"neon\"\r\n                        />\r\n                    }\r\n                    {mode === Mode.Outflow &&\r\n                        <PriceBox\r\n                            title=\"Required Outflow\"\r\n                            main={$.convert.formatMainToken(assetAmountRequired)}\r\n                            mainUnit={$.contracts.token.symbol}\r\n                            detail={$.convert.formatStableToken(assetAmountRequired * tokenPriceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            mainUnitClassName=\"glow\"\r\n                        />\r\n                    }\r\n                    {mode === Mode.None && <p>No change</p>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nInflowOutflowCalculator.propTypes = {\r\n    tokenReserve: PropTypes.number,\r\n    nativeTokenReserve: PropTypes.number,\r\n    tokenPriceInStableToken: PropTypes.number,\r\n    nativeTokenPriceInStableToken: PropTypes.number\r\n}\r\n\r\nInflowOutflowCalculator.defaultProps = {\r\n\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Switch } from \"@headlessui/react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox } from \"../InfoBox\";\r\n\r\nimport { getPriceIncreaseFactorFromQuoteAssetInflow, getPriceDecreaseFactorFromBaseAssetOutflow } from \"../../utils/PriceExtensions\";\r\n\r\nexport default function TargetPriceCalculator({\r\n    tokenReserve,\r\n    nativeTokenReserve,\r\n    tokenPriceInStableToken,\r\n    nativeTokenPriceInStableToken\r\n}) {\r\n    const Mode = Object.freeze({\r\n        Inflow: 0,\r\n        Outflow: 1\r\n    });\r\n\r\n    const [mode, setMode] = useState(Mode.Inflow);\r\n    const [assetAmount, setAssetAmount] = useState(1);\r\n    const [targetPrice, setTargetPrice] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const factor = mode === Mode.Inflow\r\n            ? getPriceIncreaseFactorFromQuoteAssetInflow(assetAmount, nativeTokenReserve)\r\n            : getPriceDecreaseFactorFromBaseAssetOutflow(assetAmount, tokenReserve);\r\n        setTargetPrice(tokenPriceInStableToken * factor);\r\n    }, [tokenReserve, nativeTokenReserve, tokenPriceInStableToken, nativeTokenPriceInStableToken, mode, assetAmount]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                <div>\r\n                    <span className=\"text-[0.5em] text-violet-100/50 light-box block mb-4 min-h-[5.5em] xs:min-h-[4em]\">\r\n                        Calculates the level to which the given inflow or outflow amount brings the price.\r\n                    </span>\r\n                    <div className=\"grid grid-cols-1 gap-y-1\">\r\n                        <Switch.Group>\r\n                            <div className=\"flex items-center\">\r\n                                <Switch\r\n                                    checked={mode === Mode.Inflow}\r\n                                    onChange={toggleMode}\r\n                                    className=\"bg-violet-300 relative inline-flex items-center w-10 h-[1em] rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-violet-300/50\"\r\n                                >\r\n                                    <span className=\"sr-only\">Flow mode</span>\r\n                                    <span className={`${mode === Mode.Inflow ? \"translate-x-6\" : \"translate-x-1\"} inline-block w-[0.75em] h-[0.75em] transform bg-slate-800 rounded-full transition-transform`} />\r\n                                </Switch>\r\n                                <Switch.Label className=\"input-label leading-6 ml-1.5\">\r\n                                    {mode === Mode.Inflow ? `Inflow ${$.contracts.nativeToken.symbol}` : `Outflow ${$.contracts.token.symbol}`}\r\n                                </Switch.Label>\r\n                            </div>\r\n                        </Switch.Group>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"number\"\r\n                            id=\"assetAmount\"\r\n                            className=\"numeric !text-[1em] text-right\"\r\n                            defaultValue={assetAmount}\r\n                            placeholder=\"Asset amount\"\r\n                            min={0}\r\n                            step={1}\r\n                            onInput={value => setAssetAmount(parseFloat(value))} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-[80%]\">\r\n                    <PriceBox\r\n                        title=\"Target Price\"\r\n                        main={isNaN(targetPrice) ? \"-\" : $.convert.formatStableToken(targetPrice)}\r\n                        mainUnit={$.contracts.stableToken.symbol}\r\n                        detail={isNaN(targetPrice) ? \"-\" : $.convert.formatNativeToken(targetPrice / nativeTokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.nativeToken.symbol}\r\n                        mainUnitClassName=\"glow\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    function toggleMode() {\r\n        if (mode === Mode.Inflow) {\r\n            setMode(Mode.Outflow);\r\n        } else {\r\n            setMode(Mode.Inflow);\r\n        }\r\n    }\r\n}\r\n\r\nTargetPriceCalculator.propTypes = {\r\n    tokenReserve: PropTypes.number,\r\n    nativeTokenReserve: PropTypes.number,\r\n    tokenPriceInStableToken: PropTypes.number,\r\n    nativeTokenPriceInStableToken: PropTypes.number\r\n}\r\n\r\nTargetPriceCalculator.defaultProps = {\r\n\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { DAYS_IN_WEEK, DAYS_IN_MONTH, DAYS_IN_YEAR, getRewardPerDay } from \"../../utils/InterestExtensions\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox } from \"../InfoBox\";\r\n\r\nexport default function RewardCalculator({\r\n    senderBalance,\r\n    totalStaked,\r\n    currentRewardPerBlock,\r\n    maxRewardPerBlock,\r\n    isMaximizedEmission,\r\n    blockTime,\r\n    tokenPriceInStableToken\r\n}) {\r\n    const [targetBalance, setTargetBalance] = useState();\r\n    const [currentRewards, setCurrentRewards] = useState([0, 0, 0, 0]);\r\n    const [maxRewards, setMaxRewards] = useState([0, 0, 0, 0]);\r\n\r\n    useEffect(() => {\r\n        if (!targetBalance) {\r\n            setTargetBalance(parseFloat(senderBalance));\r\n        }\r\n    }, [senderBalance]);\r\n\r\n    useEffect(() => {\r\n        const currentRewardPerD = getRewardPerDay(currentRewardPerBlock, blockTime, totalStaked, targetBalance);\r\n        const currentRewardPerW = currentRewardPerD * DAYS_IN_WEEK;\r\n        const currentRewardPerM = currentRewardPerD * DAYS_IN_MONTH;\r\n        const currentRewardPerY = currentRewardPerD * DAYS_IN_YEAR;\r\n\r\n        const maxRewardPerD = getRewardPerDay(maxRewardPerBlock, blockTime, totalStaked, targetBalance);\r\n        const maxRewardPerW = maxRewardPerD * DAYS_IN_WEEK;\r\n        const maxRewardPerM = maxRewardPerD * DAYS_IN_MONTH;\r\n        const maxRewardPerY = maxRewardPerD * DAYS_IN_YEAR;\r\n\r\n        setCurrentRewards([currentRewardPerD, currentRewardPerW, currentRewardPerM, currentRewardPerY]);\r\n        setMaxRewards([maxRewardPerD, maxRewardPerW, maxRewardPerM, maxRewardPerY]);\r\n    }, [totalStaked, currentRewardPerBlock, blockTime, targetBalance]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                <div>\r\n                    <span className=\"text-[0.5em] text-violet-100/50 light-box block mb-4 min-h-[5.5em] xs:min-h-[4em]\">\r\n                        Calculates potential reward levels (daily, weekly, monthly, yearly) for the given balance.\r\n                    </span>\r\n                    <div className=\"grid grid-cols-1 gap-y-1\">\r\n                        <div className=\"flex items-center justify-between leading-6\">\r\n                            <label htmlFor=\"balance\" className=\"flex leading-6\">\r\n                                <span className=\"input-label\">Target balance</span>\r\n                            </label>\r\n                            <span\r\n                                className=\"cursor-pointer text-[1.125em] leading-none shadow-none\"\r\n                                onClick={() => {\r\n                                    setTargetBalance(parseFloat(senderBalance));\r\n                                }}\r\n                            >\r\n                                <i className=\"bi bi-arrow-clockwise\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"number\"\r\n                            id=\"balance\"\r\n                            className=\"numeric !text-[1em] text-right\"\r\n                            defaultValue={targetBalance}\r\n                            placeholder=\"Balance in WEEB\"\r\n                            min={0}\r\n                            step={1}\r\n                            onInput={value => setTargetBalance(parseFloat(value))}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                    <span className=\"group-title opacity-75 col-span-2 sm:col-span-4 light-box\">Current Target Reward</span>\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Day\"\r\n                        main={isNaN(currentRewards[0]) ? \"\" : $.convert.formatMainToken(currentRewards[0])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[0]) ? \"\" : $.convert.formatStableToken(currentRewards[0] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Week\"\r\n                        main={isNaN(currentRewards[1]) ? \"\" : $.convert.formatMainToken(currentRewards[1])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[1]) ? \"\" : $.convert.formatStableToken(currentRewards[1] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Month\"\r\n                        main={isNaN(currentRewards[2]) ? \"\" : $.convert.formatMainToken(currentRewards[2])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[2]) ? \"\" : $.convert.formatStableToken(currentRewards[2] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Year\"\r\n                        main={isNaN(currentRewards[3]) ? \"\" : $.convert.formatMainToken(currentRewards[3])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[3]) ? \"\" : $.convert.formatStableToken(currentRewards[3] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n\r\n                    {!isMaximizedEmission &&\r\n                        <>\r\n                            <span className=\"group-title opacity-75 col-span-2 sm:col-span-4 light-box\">Maximum Target Reward</span>\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Day\"\r\n                                main={isNaN(maxRewards[0]) ? \"\" : $.convert.formatMainToken(maxRewards[0])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[0]) ? \"\" : $.convert.formatStableToken(maxRewards[0] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Week\"\r\n                                main={isNaN(maxRewards[1]) ? \"\" : $.convert.formatMainToken(maxRewards[1])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[1]) ? \"\" : $.convert.formatStableToken(maxRewards[1] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Month\"\r\n                                main={isNaN(maxRewards[2]) ? \"\" : $.convert.formatMainToken(maxRewards[2])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[2]) ? \"\" : $.convert.formatStableToken(maxRewards[2] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Year\"\r\n                                main={isNaN(maxRewards[3]) ? \"\" : $.convert.formatMainToken(maxRewards[3])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[3]) ? \"\" : $.convert.formatStableToken(maxRewards[3] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nRewardCalculator.propTypes = {\r\n    senderBalance: PropTypes.number,\r\n    totalStaked: PropTypes.number,\r\n    currentRewardPerBlock: PropTypes.number,\r\n    blockTime: PropTypes.number,\r\n    tokenPriceInStableToken: PropTypes.number\r\n}\r\n\r\nRewardCalculator.defaultProps = {\r\n\r\n};\r\n","import { fromWei } from \"../../utils/Web3Converter\";\r\n\r\nimport InflowOutflowCalculator from \"./InflowOutflowCalculator\";\r\nimport TargetPriceCalculator from \"./TargetPriceCalculator\";\r\nimport RewardCalculator from \"./RewardCalculator\";\r\n\r\nexport default function TokenCalculators({\r\n    token,\r\n    priceInNativeToken,\r\n    priceInStableToken,\r\n    blockTime\r\n}) {\r\n    const nativeTokenPriceInStableToken = priceInStableToken / priceInNativeToken;\r\n    const senderBalance = fromWeiToken(token.senderBalance);\r\n    const totalStaked = fromWeiToken(token.totalStaked);\r\n    const maxRewardPerBlock = fromWeiToken(token.maximumRewardPerBlock);\r\n    const currentRewardPerBlock = fromWeiToken(token.currentRewardPerBlock);\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-x-2 xs:gap-x-5 gap-y-5 text-center\">\r\n            <div className={`card bg-weeb-card1/30 bg-diagonal-lines`}>\r\n                <InflowOutflowCalculator\r\n                    tokenReserve={token.tokenReserve}\r\n                    nativeTokenReserve={token.nativeTokenReserve}\r\n                    tokenPriceInStableToken={priceInStableToken}\r\n                    nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                />\r\n            </div>\r\n            <div className={`card bg-weeb-card1/30 bg-diagonal-lines`}>\r\n                <TargetPriceCalculator\r\n                    tokenReserve={token.tokenReserve}\r\n                    nativeTokenReserve={token.nativeTokenReserve}\r\n                    tokenPriceInStableToken={priceInStableToken}\r\n                    nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                />\r\n            </div>\r\n            <div className={`card bg-weeb-card1/30 bg-diagonal-lines col-span-2`}>\r\n                <RewardCalculator\r\n                    senderBalance={senderBalance}\r\n                    totalStaked={totalStaked}\r\n                    currentRewardPerBlock={currentRewardPerBlock}\r\n                    maxRewardPerBlock={maxRewardPerBlock}\r\n                    isMaximizedEmission={token.isInflationRegulated}\r\n                    blockTime={blockTime}\r\n                    tokenPriceInStableToken={priceInStableToken}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // Helpers\r\n    function fromWeiToken(value) {\r\n        return parseFloat(fromWei(value, token.details.decimals));\r\n    }\r\n}\r\n","export const BYTE_MAX_VALUE = 255;\r\n\r\nexport function getOutcomeText(outcomeCount, outcome) {\r\n    if (outcome === BYTE_MAX_VALUE) {\r\n        return \"Unknown\";\r\n    }\r\n\r\n    if (outcome > outcomeCount) {\r\n        throw `Outcome \"${outcome}\" is greater than outcome count: ${outcomeCount}`;\r\n    }\r\n\r\n    if (outcomeCount === 2) {\r\n        if (outcome === 0) {\r\n            return \"Heads\";\r\n        }\r\n\r\n        if (outcome === 1) {\r\n            return \"Tails\";\r\n        }\r\n    }\r\n\r\n    return `${outcome + 1}`;\r\n}\r\n\r\nexport function getOutcomeImage(outcomeCount, outcome) {\r\n    if (outcome === BYTE_MAX_VALUE) {\r\n        return \"Unknown\";\r\n    }\r\n\r\n    if (outcome > outcomeCount) {\r\n        throw `Outcome \"${outcome}\" is greater than outcome count: ${outcomeCount}`;\r\n    }\r\n\r\n    // https://miro.medium.com/max/1838/1*p-SahjISD2_mdOf_e-uF5A.png\r\n    if (outcomeCount === 2) {\r\n        if (outcome === 0) {\r\n            return (<img src=\"./images/heads-200px.png\" width=\"140\" height=\"140\" />);\r\n        }\r\n\r\n        if (outcome === 1) {\r\n            return (<img src=\"./images/tails-200px.png\" width=\"140\" height=\"140\" />);\r\n        }\r\n    } else if (outcomeCount === 6) {\r\n        return (<i className={`bi bi-dice-${outcome + 1} text-[2.5rem] sm:text-[3.5rem]`}></i>);\r\n    }\r\n\r\n    return `${outcome}`;\r\n}\r\n\r\nexport function getRandomizeText(outcomeCount) {\r\n    if (outcomeCount === 2) {\r\n        return \"Flip\";\r\n    }\r\n\r\n    if (outcomeCount === 6) {\r\n        return \"Roll\";\r\n    }\r\n\r\n    return \"Randomize\";\r\n}\r\n\r\nexport function getRandomInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport { PriceBox } from \"../InfoBox\";\r\nimport { StyledPopover } from \"../StyledPopover\";\r\n\r\nimport { BYTE_MAX_VALUE, getOutcomeText, getRandomizeText } from \"./GameExtensions\";\r\n\r\n/*\r\n{\r\n    game,\r\n    balance,\r\n    priceInStableToken,\r\n    bet,\r\n    compound,\r\n    claim,\r\n    senderPoolSnapshots\r\n    blockTime\r\n}\r\n*/\r\nexport default class Game extends Component {\r\n    static propTypes = {\r\n        bet: PropTypes.func,\r\n        claim: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        bet: async () => {\r\n        },\r\n        claim: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isInteractionDisabled: false,\r\n            showLastBetPool: false,\r\n            showSenderLastBetPool: false,\r\n            isPoolTotalsVisibile: false,\r\n            showYourBetHistory: false,\r\n            senderBetPools: [],\r\n            isLoading: false\r\n        };\r\n\r\n        this.format = $.format(this.props.game.tokenInfo.details.decimals);\r\n\r\n        this.toggleLastBetPoolVisibility = this.toggleLastBetPoolVisibility.bind(this);\r\n        this.toggleSenderLastBetPoolVisibility = this.toggleSenderLastBetPoolVisibility.bind(this);\r\n        this.togglePoolTotalsVisibility = this.togglePoolTotalsVisibility.bind(this);\r\n        this.toggleYourBetHistoryVisibility = this.toggleYourBetHistoryVisibility.bind(this);\r\n        this.loadSenderBetPools = this.loadSenderBetPools.bind(this);\r\n\r\n        this.execute = this.execute.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const tokenExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/token/${this.props.game.tokenInfo.token}`;\r\n        const swapRouterName = Configuration.getSwapRouterName($.chainId, Configuration.getDefaultSwapRouter($.chainId));\r\n        const minimumBet = this.props.game.isPercentage ? this.format.fromWei(this.props.game.minimumBet) / 1000 : this.format.fromWei(this.props.game.minimumBet);\r\n\r\n        const unclaimedBalance = this.format.fromWei(this.props.game.unclaimedBalance);\r\n        const seigniorageFee = parseFloat(this.props.game.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = this.format.fromWei(this.props.game.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.game.seigniory}`;\r\n\r\n        const zero = Web3.utils.toBN(0);\r\n        const senderUnclaimedPrizeBN = Web3.utils.toBN(this.props.game.senderUnclaimedPrize.winningBet).add(Web3.utils.toBN(this.props.game.senderUnclaimedPrize.prize));\r\n        const isPrizeClaimable = senderUnclaimedPrizeBN.cmp(zero) === 1; // > 0\r\n        const senderUnclaimedPrize = this.format.fromWei(senderUnclaimedPrizeBN);\r\n        const currentBetPoolWinningPrize = this.format.fromWei(this.props.game.currentBetPool.statement.senderPrize);\r\n        const currentBetPoolPot = this.format.fromWei(this.props.game.currentBetPool.statement.allAggregatedBets.total);\r\n        const drawBlock = parseInt(this.props.game.currentPoolId) + parseInt(this.props.game.blockLength);\r\n        const blocksToDraw = drawBlock - parseInt(this.props.game.currentBlock);\r\n        const timeToDraw = blocksToDraw * this.props.blockTime;\r\n\r\n        const totalPlacedBets = this.format.fromWei(this.props.game.totalPosition.placedBets.total);\r\n        const totalClaimedBets = this.format.fromWei(this.props.game.totalPosition.claimedBets.total);\r\n        const totalClaimedPrizes = this.format.fromWei(this.props.game.totalPosition.claimedPrizes.total);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(this.props.game.currentBetPool.statement.senderAggregatedBets.total);\r\n        const senderLosingBets = this.format.fromWei(this.props.game.currentBetPool.statement.senderLosingBets.total);\r\n        const senderPrize = this.format.fromWei(this.props.game.currentBetPool.statement.senderPrize);\r\n        const hasOpponent = this.isWinner(this.props.game.currentBetPool) > 0;\r\n        const senderPnL = hasOpponent ? (senderPrize - senderLosingBets) : senderAggregatedBets;\r\n\r\n        const tooltipSeigniorageFeeText = (<span className=\"tooltip\">Fee paid to the seignory (game owner) from claimed prize.</span>);\r\n\r\n        // 1. popoverGameRef\r\n        const popoverGameContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Bet Token\"\r\n                    main={(<a href={tokenExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"font-display\">{this.props.game.tokenInfo.details.symbol}</a>)}\r\n                    detailUnit={swapRouterName}\r\n                />\r\n                <PriceBox\r\n                    title=\"Minimum Bet\"\r\n                    main={this.props.game.isPercentage ? $.convert.formatPercentage(minimumBet) : this.format.formatToken(minimumBet)}\r\n                    mainUnit={this.props.game.isPercentage ? \"%\" : this.props.game.tokenInfo.details.symbol}\r\n                    detail={this.props.game.isPercentage ? null : $.convert.formatStableToken(minimumBet * this.props.priceInStableToken)}\r\n                    detailUnit={this.props.game.isPercentage ? this.props.game.tokenInfo.details.symbol : $.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Outcome Count\"\r\n                    main={$.convert.formatInteger(this.props.game.outcomeCount)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Unclaimed Balance\"\r\n                    main={this.format.formatToken(unclaimedBalance)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(unclaimedBalance * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title={(<><span className=\"mr-1\">Seigniorage Fee</span><StyledPopover isTooltip={true} children={tooltipSeigniorageFeeText} /></>)}\r\n                    main={$.convert.formatPercentage(seigniorageFee)}\r\n                    mainUnit=\"%\"\r\n                    detail={(<a href={seignioryExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric\">{$.convert.formatAccount(this.props.game.seigniory)}</a>)}\r\n                    info={this.props.game.isSenderSeignory ? (<span className=\"font-display\">You're Seignory</span>) : null}\r\n                    infoClassName=\"opacity-75 light-box font-semibold uppercase text-red-500\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Seigniorage Collected\"\r\n                    main={this.format.formatToken(seigniorageFeeCollected)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(seigniorageFeeCollected * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={this.getActivity(this.props.game.seigniorageFee.collected.count, this.props.game.seigniorageFee.collected.timestamp, now)}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        const isCurrentBetPoolSenderUnderWin = this.isSenderUnderWin(this.props.game.currentBetPool.statement);\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-1 gap-y-3\">\r\n                <div className={`card bg-indigo-900/25 bg-diagonal-lines`}>\r\n                    <div className=\"grid grid-cols-12 gap-x-2 gap-y-0.5\">\r\n                        <div className=\"col-span-5\">\r\n                            <span className=\"card-header-title-text opacity-75\">\r\n                                <span className=\"mr-1\">{this.props.game.name}</span>\r\n                                <StyledPopover children={popoverGameContent} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-7 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"uppercase opacity-50\">Time to Draw</span>\r\n                            <span className=\"numeric opacity-75 ml-1 glow\">{$.convert.formatTimespan(timeToDraw)}</span>\r\n                            <span className=\"2xs:hidden xs:block numeric opacity-75 ml-2\">{blocksToDraw}</span>\r\n                            <span className=\"2xs:hidden xs:block uppercase opacity-50 ml-1\">blocks</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-8 flex items-center justify-start card-header-item-text\">\r\n                            <span className=\"2xs:hidden xs:block opacity-25\">Draws every</span>\r\n                            <span className=\"2xs:hidden xs:block numeric opacity-50 ml-1\">{this.props.game.blockLength}</span>\r\n                            <span className=\"2xs:hidden xs:block opacity-25 ml-1 mr-2\">blocks.</span>\r\n                            <span className=\"uppercase opacity-50\">Pool Id</span>\r\n                            <span className=\"numeric opacity-25 ml-1\">{$.convert.formatInteger(this.props.game.currentBetPool.poolId)}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-4 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"numeric opacity-25\">\r\n                                <i className=\"bi bi-box mr-1\" />\r\n                                {$.convert.formatInteger(this.props.game.currentBlock)}\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-12 mt-0.5 mb-3 border-bottom-t2 border-2\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 gap-y-3\">\r\n                        <div className=\"grid grid-cols-2 gap-x-2\">\r\n                            <PriceBox\r\n                                title=\"Your Unclaimed Prize\"\r\n                                main={this.format.formatToken(senderUnclaimedPrize)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(senderUnclaimedPrize * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                mainClassName=\"glow\"\r\n                            />\r\n                            <div className=\"grid grid-cols-2 gap-x-2 gap-y-3 leading-none auto-rows-auto text-[0.75em]\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"w-full h-9 justify-self-end self-end btn btn-green\"\r\n                                    disabled={this.state.isInteractionDisabled || !isPrizeClaimable} onClick={async () => {\r\n                                        await this.execute(() => this.props.claim());\r\n                                    }}\r\n                                >\r\n                                    Claim the Prize\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"w-full h-9 justify-self-start self-end btn btn-blue\"\r\n                                    disabled={this.state.isInteractionDisabled || !isPrizeClaimable} onClick={async () => {\r\n                                        await this.execute(() => this.props.compound());\r\n                                    }}\r\n                                >\r\n                                    Bet the Prize\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"w-full h-9 justify-self-center self-start col-span-2 btn btn-red\"\r\n                                    disabled={this.state.isInteractionDisabled || this.props.balance === 0} onClick={async () => {\r\n                                        await this.execute(() => this.props.bet());\r\n                                    }}\r\n                                >\r\n                                    Place a Bet\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"border-bottom-t2\"></div>\r\n\r\n                        <div className=\"grid grid-cols-2 xl:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                            <PriceBox\r\n                                title=\"Winning Outcome\"\r\n                                main={getOutcomeText(parseInt(this.props.game.outcomeCount), parseInt(this.props.game.currentBetPool.outcome))}\r\n                                detailUnit={parseInt(this.props.game.currentBetPool.outcome) === BYTE_MAX_VALUE ? (<><span className=\"animate-pulse\">Place a Bet</span></>) : (<><span className=\"animate-pulse\">Bet to Change</span></>)}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"font-display neon\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Pot\"\r\n                                main={this.format.formatToken(currentBetPoolPot)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(currentBetPoolPot * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                // info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(this.props.game.currentBetPool.statement.allAggregatedBets.count)}</span>)}\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n\r\n                            <PriceBox\r\n                                title=\"Potential Prize\"\r\n                                main={this.format.formatToken(currentBetPoolWinningPrize)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(currentBetPoolWinningPrize * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                info={isCurrentBetPoolSenderUnderWin ? \"Under Win\" : null}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"neon\"\r\n                                infoClassName={`glow ${isCurrentBetPoolSenderUnderWin ? \" blinker\" : null}}`}\r\n                            />\r\n                            <PriceBox\r\n                                title=\"PnL\"\r\n                                main={this.format.formatToken(senderPnL)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(senderPnL * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"glow\"\r\n                            />\r\n\r\n                            <div className=\"col-span-2 xl:col-span-4\">\r\n                                {this.getBetInfo(this.props.game.currentBetPool, this.props.game.outcomeCount)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"border-bottom-t2\"></div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-x-2 text-[0.75em]\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"w-full h-9 btn btn-dark\"\r\n                                disabled={parseInt(this.props.game.lastBetPool.poolId) === 0}\r\n                                onClick={this.toggleLastBetPoolVisibility}>\r\n                                Last Bet Pool{this.state.showLastBetPool && <i className=\"bi bi-caret-down-fill ml-1\" />}\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"w-full h-9 btn btn-dark\"\r\n                                disabled={parseInt(this.props.game.senderLastBetPool.poolId) === 0}\r\n                                onClick={this.toggleSenderLastBetPoolVisibility}>\r\n                                Your Last Bet Pool{this.state.showSenderLastBetPool && <i className=\"bi bi-caret-down-fill ml-1\" />}\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"border-bottom-t2\"></div>\r\n\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <span className=\"card-header-item-text uppercase opacity-75 cursor-pointer\" onClick={this.togglePoolTotalsVisibility}><i className={`bi ${(this.state.isPoolTotalsVisibile ? \"bi-caret-down-fill\" : \"bi-caret-right-fill\")} mr-1`} />\r\n                                Pool Totals\r\n                            </span>\r\n                            <span className={`card-header-item-text opacity-25 ${parseInt(this.props.game.senderBetPoolCount) === 0 ? \"disabled\" : \"cursor-pointer\"}`} onClick={() => {\r\n                                if (parseInt(this.props.game.senderBetPoolCount) > 0) {\r\n                                    this.toggleYourBetHistoryVisibility();\r\n                                }\r\n                            }}>\r\n                                <i className=\"bi bi-calendar3 mr-1\" />\r\n                                Your Bet History (<span className=\"numeric\">{$.convert.formatInteger(this.props.game.senderBetPoolCount)}</span>)\r\n                            </span>\r\n                        </div>\r\n\r\n                        {this.state.isPoolTotalsVisibile &&\r\n                            <div className=\"grid grid-cols-3 gap-x-2 text-[80%]\">\r\n                                <PriceBox\r\n                                    title=\"Placed Bets\"\r\n                                    main={this.format.formatToken(totalPlacedBets)}\r\n                                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalPlacedBets * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.game.totalPosition.placedBets.count, this.props.game.totalPosition.placedBets.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Claimed Bets\"\r\n                                    main={this.format.formatToken(totalClaimedBets)}\r\n                                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalClaimedBets * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.game.totalPosition.claimedBets.count, this.props.game.totalPosition.claimedBets.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Claimed Prizes\"\r\n                                    main={this.format.formatToken(totalClaimedPrizes)}\r\n                                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalClaimedPrizes * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.game.totalPosition.claimedPrizes.count, this.props.game.totalPosition.claimedPrizes.timestamp, now)}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.showLastBetPool && this.getBetPool(\"Last Bet Pool\", this.props.game.lastBetPool, this.props.game.outcomeCount)}\r\n                {this.state.showSenderLastBetPool && this.getBetPool(\"Your Last Bet Pool\", this.props.game.senderLastBetPool, this.props.game.outcomeCount)}\r\n                {this.state.showYourBetHistory && this.getSenderBetPools()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSenderBetPools() {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.state.senderBetPools.length; ++i) {\r\n            items.push(<div key={i}>{this.getBetPool(`Your Bet Pool #${i + 1}`, this.state.senderBetPools[i])}</div>);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {items}\r\n                <div className=\"flex items-center justify-center text-[0.75em]\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"w-48 h-9 btn btn-dark\"\r\n                        disabled={(this.state.isLoading || this.state.senderBetPools.length === parseInt(this.props.game.senderBetPoolCount))}\r\n                        onClick={this.loadSenderBetPools}>Load more</button>\r\n                </div>\r\n                {this.state.isLoading && <Spinner type=\"cloud\" title={`Loading ${$.convert.formatInteger(this.props.game.senderBetPoolCount)} pools.`} />}\r\n            </>\r\n        );\r\n    }\r\n\r\n    getBetPool(title, betPool, outcomeCount) {\r\n        const blocksFromDraw = parseInt(this.props.game.currentBlock) - parseInt(betPool.poolId);\r\n        const lastBetPoolPot = this.format.fromWei(betPool.statement.allAggregatedBets.total);\r\n        const lastBetPoolWinningPrize = this.format.fromWei(betPool.statement.senderPrize);\r\n        const isUnderWin = this.isSenderUnderWin(betPool.statement);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(betPool.statement.senderAggregatedBets.total);\r\n        const senderLosingBets = this.format.fromWei(betPool.statement.senderLosingBets.total);\r\n        const senderPrize = this.format.fromWei(betPool.statement.senderPrize);\r\n        const hasOpponent = this.isWinner(betPool) > 0;\r\n        const senderPnL = hasOpponent ? (senderPrize - senderLosingBets) : senderAggregatedBets;\r\n\r\n        return (\r\n            <>\r\n                <div className={`card bg-white/5 bg-diagonal-lines`}>\r\n                    <div className=\"grid grid-cols-12 gap-x-2 gap-y-0.5\">\r\n                        <div className=\"col-span-5\">\r\n                            <span className=\"card-header-title-text opacity-75\">\r\n                                {title}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"col-span-7 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"uppercase opacity-50\">Time from Draw</span>\r\n                            <span className=\"numeric opacity-75 ml-1 glow\">{betPool.poolId > 0 ? $.convert.formatTimespan(blocksFromDraw * this.props.blockTime) : \"-\"}</span>\r\n                            <span className=\"2xs:hidden xs:block numeric opacity-75 ml-2\">{betPool.poolId > 0 ? $.convert.formatInteger(blocksFromDraw) : \"-\"}</span>\r\n                            <span className=\"2xs:hidden xs:block uppercase opacity-50 ml-1\">blocks</span>\r\n                        </div>\r\n                        <div className=\"col-span-7 flex items-center justify-start card-header-item-text\">\r\n                            <span className=\"uppercase opacity-50\">Pool Id</span>\r\n                            <span className=\"numeric opacity-25 ml-1\">{betPool.poolId > 0 ? $.convert.formatInteger(betPool.poolId) : \"-\"}</span>\r\n                        </div>\r\n                        <div className=\"col-span-5 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"opacity-25\">\r\n                                You {this.isWinnerText(betPool)}\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-12 mt-0.5 mb-3 border-bottom-t2 border-2\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Outcome\"\r\n                            main={getOutcomeText(parseInt(this.props.game.outcomeCount), parseInt(betPool.outcome))}\r\n                            titleClassName=\"light-box\"\r\n                            mainClassName=\"font-display neon\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Pot\"\r\n                            main={this.format.formatToken(lastBetPoolPot)}\r\n                            mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                            detail={$.convert.formatStableToken(lastBetPoolPot * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            // info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(betPool.statement.allAggregatedBets.count)}</span>)}\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n\r\n                        <PriceBox\r\n                            title=\"Your Prize\"\r\n                            main={this.format.formatToken(lastBetPoolWinningPrize)}\r\n                            mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                            detail={$.convert.formatStableToken(lastBetPoolWinningPrize * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            info={isUnderWin ? \"Under Win\" : null}\r\n                            titleClassName=\"light-box\"\r\n                            mainClassName=\"neon\"\r\n                            infoClassName={`glow ${isUnderWin ? \" blinker\" : null}}`}\r\n                        />\r\n                        <PriceBox\r\n                            title=\"PnL\"\r\n                            main={this.format.formatToken(senderPnL)}\r\n                            mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                            detail={$.convert.formatStableToken(senderPnL * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            titleClassName=\"light-box\"\r\n                            mainClassName=\"glow\"\r\n                        />\r\n\r\n                        <div className=\"col-span-2 sm:col-span-4\">\r\n                            {this.getBetInfo(betPool, outcomeCount)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    isSenderUnderWin(winningStatement) {\r\n        const senderPrize = this.format.fromWei(winningStatement.senderPrize);\r\n        const senderLosingBets = this.format.fromWei(winningStatement.senderLosingBets.total);\r\n\r\n        return senderPrize > 0 && senderPrize < senderLosingBets;\r\n    }\r\n\r\n    getPopoverWinningStatementAllBetsDetail(winningStatement) {\r\n        const allAggregatedBets = this.format.fromWei(winningStatement.allAggregatedBets.total);\r\n        const allWinningBets = this.format.fromWei(winningStatement.allWinningBets.total);\r\n        const allLosingBets = this.format.fromWei(winningStatement.allLosingBets.total);\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(allAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(allWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allWinningBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(allLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Payout\"\r\n                    main={`×${$.convert.formatNumberScaled(allWinningBets === 0 ? 0 : allLosingBets / allWinningBets, 2)}`}\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getPopoverWinningStatementSenderBetsDetail(winningStatement) {\r\n        const allWinningBets = this.format.fromWei(winningStatement.allWinningBets.total);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(winningStatement.senderAggregatedBets.total);\r\n        const senderWinningBets = this.format.fromWei(winningStatement.senderWinningBets.total);\r\n        const senderLosingBets = this.format.fromWei(winningStatement.senderLosingBets.total);\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(senderAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(senderWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderWinningBets.count)}</span>)}\r\n                    mainClassName=\"neon\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(senderLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Share\"\r\n                    main={$.convert.formatPercentage(allWinningBets === 0 ? 0 : parseFloat(senderWinningBets) / parseFloat(allWinningBets))}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getPopoverBetPoolWinningStatementDetail(winningStatement) {\r\n        const allAggregatedBets = this.format.fromWei(winningStatement.allAggregatedBets.total);\r\n        const allWinningBets = this.format.fromWei(winningStatement.allWinningBets.total);\r\n        const allLosingBets = this.format.fromWei(winningStatement.allLosingBets.total);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(winningStatement.senderAggregatedBets.total);\r\n        const senderWinningBets = this.format.fromWei(winningStatement.senderWinningBets.total);\r\n        const senderLosingBets = this.format.fromWei(winningStatement.senderLosingBets.total);\r\n\r\n        const senderPrize = this.format.fromWei(winningStatement.senderPrize);\r\n        const senderPnL = senderPrize - senderLosingBets;\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                <span className=\"group-title opacity-75 col-span-4 glass-box\">Total Position</span>\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(allAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(allWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allWinningBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(allLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Payout\"\r\n                    main={`×${$.convert.formatNumberScaled(allWinningBets === 0 ? 0 : allLosingBets / allWinningBets, 2)}`}\r\n                    mainClassName=\"neon\"\r\n                />\r\n\r\n                <span className=\"group-title opacity-75 col-span-4 glass-box\">Your Position</span>\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(senderAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(senderWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderWinningBets.count)}</span>)}\r\n                    mainClassName=\"neon\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(senderLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"PnL\"\r\n                    main={this.format.formatToken(senderPnL)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderPnL * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-4\"\r\n                    title=\"Winning Share\"\r\n                    main={$.convert.formatPercentage(allWinningBets === 0 ? 0 : parseFloat(senderWinningBets) / parseFloat(allWinningBets))}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"hidden xs:inline-block bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"hidden xs:inline-block bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Game functions.\r\n    getPayoutOf(betPool, outcome) {\r\n        const zero = Web3.utils.toBN(0);\r\n\r\n        let winningBets = zero;\r\n        let losingBets = zero;\r\n\r\n        const allBets = betPool.allBets;\r\n\r\n        for (let i = 0; i < allBets.length; ++i) {\r\n            var bet = allBets[i];\r\n\r\n            if (i === outcome)\r\n                winningBets = winningBets.add(Web3.utils.toBN(bet.total));\r\n            else\r\n                losingBets = losingBets.add(Web3.utils.toBN(bet.total));\r\n        }\r\n\r\n        if (winningBets.cmp(zero) === 0) {\r\n            return null;\r\n        }\r\n\r\n        return this.format.fromWei(losingBets) / this.format.fromWei(winningBets);\r\n    }\r\n\r\n    // Content generators\r\n    getOutcomeNames() {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            items.push((<th key={i} className=\"text-[1em] font-normal light-box px-2\">{getOutcomeText(parseInt(this.props.game.outcomeCount), i)}</th>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getBetCounts(bets) {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            items.push((<td key={i} className=\"text-[1em] lighter-box px-2\">{bets[i]?.count ? $.convert.formatInteger(bets[i].count) : 0}</td>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getBetAmounts(bets) {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            items.push((<td key={i}><span className=\"text-[1em] px-2 py-1\">{bets[i]?.total ? this.format.formatToken(this.format.fromWei(bets[i].total)) : 0}</span></td>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getBetsSum(bets) {\r\n        let sum = 0;\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            sum += bets[i]?.total ? this.format.fromWei(bets[i].total) : 0;\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    getPayouts(betPool) {\r\n        const payouts = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            payouts.push(this.getPayoutOf(betPool, i));\r\n        }\r\n\r\n        const max = Math.max(...payouts);\r\n        const items = [];\r\n\r\n        for (let i = 0; i < payouts.length; ++i) {\r\n            items.push((<td key={i}><span className={`text-[1em] px-2 py-1 ${payouts[i] === max ? \" glow\" : \"\"}`}>×{payouts[i] ? $.convert.formatNumberScaled(payouts[i], 2) : \"\"}</span></td>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getAllBets(betPool) {\r\n        return (\r\n            <table className=\"mx-auto table-fixed border-separate leading-none w-full\">\r\n                <thead className=\"group-title uppercase tracking-wider\">\r\n                    <tr>\r\n                        {this.getOutcomeNames()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"numeric\">\r\n                    <tr className=\"opacity-75\">\r\n                        {this.getBetCounts(betPool.allBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.getBetAmounts(betPool.allBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.getPayouts(betPool)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    getSenderBets(betPool) {\r\n        return (\r\n            <table className=\"mx-auto table-fixed border-separate leading-none w-full\">\r\n                <thead className=\"group-title uppercase tracking-wider\">\r\n                    <tr>\r\n                        {this.getOutcomeNames()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"numeric\">\r\n                    <tr className=\"opacity-75\">\r\n                        {this.getBetCounts(betPool.senderBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.getBetAmounts(betPool.senderBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={this.props.game.outcomeCount}>\r\n                            {/* &nbsp; */}\r\n                            {/* <span className=\"text-[14px] px-2 py-1 glow\">\r\n                                {this.format.formatToken(this.getBetsSum(betPool.senderBets))}\r\n                            </span> */}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    getBetInfo(betPool, outcomeCount) {\r\n        return (\r\n            <>\r\n                <div className={`grid ${outcomeCount > 2 ? \"grid-cols-1 sm:grid-cols-2\" : \"grid-cols-2\"} gap-x-2 gap-y-2 text-center`}>\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <span className=\"group-title light-box w-full uppercase tracking-wider\">\r\n                            <span className=\"mr-1\">Total Bets</span>\r\n                            <StyledPopover children={this.getPopoverWinningStatementAllBetsDetail(betPool.statement)} />\r\n                        </span>\r\n                        {/* <span className=\"group-title opacity-25 mt-1\">{this.props.game.tokenInfo.details.symbol}</span> */}\r\n                        <div className=\"overflow-x-auto overflow-y-hidden section\">\r\n                            {this.getAllBets(betPool)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <span className=\"group-title light-box w-full uppercase tracking-wider\">\r\n                            <span className=\"mr-1\">Your Bets</span>\r\n                            <StyledPopover children={this.getPopoverWinningStatementSenderBetsDetail(betPool.statement)} />\r\n                        </span>\r\n                        {/* <span className=\"group-title opacity-25 mt-1\">{this.props.game.tokenInfo.details.symbol}</span> */}\r\n                        <div className=\"overflow-x-auto overflow-y-hidden section\">\r\n                            {this.getSenderBets(betPool)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    isWinner(betPool) {\r\n        if (betPool.senderBets.length > 0) {\r\n            return betPool.senderBets[betPool.outcome].count > 0\r\n                ? Web3.utils.toBN(betPool.statement.allLosingBets.count).cmp(Web3.utils.toBN(0)) === 1 ? 1 : -1\r\n                : Web3.utils.toBN(betPool.statement.allWinningBets.count).cmp(Web3.utils.toBN(0)) === 1 ? 2 : -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    isWinnerText(betPool) {\r\n        switch (this.isWinner(betPool)) {\r\n            case -1:\r\n                return \"had no opponent\";\r\n            case 0:\r\n                return \"didn't bet\";\r\n            case 1:\r\n                return \"won\";\r\n            case 2:\r\n                return \"lost\";\r\n        }\r\n    }\r\n\r\n    // Actions\r\n    togglePoolTotalsVisibility() {\r\n        this.setState({ isPoolTotalsVisibile: !this.state.isPoolTotalsVisibile });\r\n    }\r\n\r\n    toggleLastBetPoolVisibility() {\r\n        this.setState({ showLastBetPool: !this.state.showLastBetPool });\r\n    }\r\n\r\n    toggleSenderLastBetPoolVisibility() {\r\n        this.setState({ showSenderLastBetPool: !this.state.showSenderLastBetPool });\r\n    }\r\n\r\n    async execute(func) {\r\n        this.setState({ isInteractionDisabled: true });\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        } finally {\r\n            this.setState({ isInteractionDisabled: false });\r\n        }\r\n    }\r\n\r\n    async toggleYourBetHistoryVisibility() {\r\n        const show = this.state.showYourBetHistory;\r\n        this.setState({ showYourBetHistory: !show });\r\n\r\n        if (!show) {\r\n            await this.loadSenderBetPools();\r\n        }\r\n    }\r\n\r\n    async loadSenderBetPools() {\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            await this.loadSenderBetPoolsInternal();\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    async loadSenderBetPoolsInternal() {\r\n        const pageLength = 3;\r\n\r\n        const senderBetPoolCount = parseInt(this.props.game.senderBetPoolCount);\r\n        const remaining = senderBetPoolCount - this.state.senderBetPools.length;\r\n\r\n        if (remaining > 0) {\r\n            let offset;\r\n            let count;\r\n\r\n            offset = this.state.senderBetPools.length;\r\n\r\n            if (remaining > pageLength) {\r\n                count = pageLength;\r\n            } else {\r\n                count = remaining;\r\n            }\r\n\r\n            let pools = [...await this.props.senderPoolSnapshots(offset, count)];\r\n\r\n            if (pools.length > 0 && parseInt(pools[pools.length - 1].poolId) === parseInt(this.props.game.currentPoolId)) {\r\n                pools = pools.slice(0, pools.length - 1);\r\n            }\r\n\r\n            this.setState({ senderBetPools: [...this.state.senderBetPools, ...pools] });\r\n        }\r\n    }\r\n}","import Configuration from \"../../Configuration\";\r\n\r\nexport function getSupportedSwapRouterName(chainId, pool) {\r\n    const supportedSwapRouters = Configuration.getSwapRouters(chainId);\r\n    const address = pool.depositToken.router;\r\n\r\n    return address == null || supportedSwapRouters == null ? null : supportedSwapRouters[address].name ?? null;\r\n}\r\n\r\nexport function getDepositTokenSymbol(pool) {\r\n    return pool.isLiquidityToken ? `${pool.token0Details.symbol}/${pool.token1Details.symbol}` : pool.depositToken.details.symbol;\r\n}\r\n\r\nexport function getDepositTokenDecimals(pool) {\r\n    return pool.isLiquidityToken ? Math.min(pool.token0Details.decimals, pool.token1Details.decimals) : pool.depositToken.details.decimals;\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { getSupportedSwapRouterName } from \"./FarmPoolExtensions\";\r\n\r\nimport { PriceBox } from \"../InfoBox\";\r\nimport { StyledPopover } from \"../StyledPopover\";\r\n\r\n/*\r\n{\r\n    creditToken,\r\n    pool,\r\n    nativeTokenPriceInStableToken,\r\n    deposit,\r\n    withdraw,\r\n    blockTime,\r\n    currentBlock\r\n}\r\n*/\r\nexport default class FarmPool extends Component {\r\n    static propTypes = {\r\n        deposit: PropTypes.func,\r\n        withdraw: PropTypes.func,\r\n    }\r\n\r\n    static defaultProps = {\r\n        deposit: async () => {\r\n        },\r\n        withdraw: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isInteractionDisabled: false,\r\n            isPoolTotalsVisibile: false,\r\n            // depositTokenPriceInStableToken: 0,\r\n            // creditTokenPriceInStableToken: 0\r\n        };\r\n\r\n        this.onTick = this.onTick.bind(this);\r\n\r\n        this.formatDepositToken = $.format(this.props.pool.depositToken.details.decimals);\r\n        this.formatCreditToken = $.format(this.props.creditToken.details.decimals);\r\n\r\n        this.togglePoolTotalsVisibility = this.togglePoolTotalsVisibility.bind(this);\r\n\r\n        this.execute = this.execute.bind(this);\r\n\r\n        this.popoverFarmPoolRef = React.createRef();\r\n        this.tooltipSeigniorageFeeRef = React.createRef();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (!this.timerId) {\r\n                this.startTimer(this.props.blockTime * 1000);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    startTimer(blockTime) {\r\n        this.timerId = setInterval(async () => await this.onTick(), blockTime);\r\n        console.log(`Started timer: ${this.timerId}; Interval: ${blockTime} ms`);\r\n    }\r\n\r\n    stopTimer() {\r\n        const timerId = this.timerId;\r\n\r\n        if (timerId) {\r\n            clearInterval(timerId);\r\n            this.timerId = undefined;\r\n\r\n            console.log(`Stopped timer: ${timerId}`);\r\n        }\r\n    }\r\n\r\n    async onTick() {\r\n        try {\r\n            const depositTokenPriceInStableToken = await $.iziSwap.getTokenPriceInStableToken(this.props.pool.depositToken.token, this.props.pool.depositToken.details.decimals, this.props.pool.isLiquidityToken);\r\n            const creditTokenPriceInStableToken = await $.iziSwap.getTokenPriceInStableToken(this.props.creditToken.token, this.props.creditToken.details.decimals, false);\r\n\r\n            this.setState({\r\n                depositTokenPriceInStableToken,\r\n                creditTokenPriceInStableToken\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const creditMultiplier = parseFloat(this.props.pool.creditMultiplier) / 10000;\r\n        const depositFeeRate = parseFloat(this.props.pool.depositFee.rate) / 10000;\r\n        const creditLiquidationRate = parseFloat(this.props.pool.creditLiquidationRate) / 10000;\r\n        const liquidatorFeeRate = parseFloat(this.props.pool.liquidatorFee.rate) / 10000;\r\n        const senderBalance = this.formatDepositToken.fromWei(this.props.pool.senderBalance);\r\n        const senderDeposited = this.formatDepositToken.fromWei(this.props.pool.senderPosition.deposited);\r\n        const senderCredited = this.formatCreditToken.fromWei(this.props.pool.senderPosition.credited);\r\n        const senderLiquidated = this.formatDepositToken.fromWei(this.props.pool.senderPosition.liquidated.total);\r\n        const senderCreditLiquidationLevel = this.formatCreditToken.fromWei(this.props.pool.senderPosition.creditLiquidationLevel);\r\n        const senderCurrentCredit = this.formatCreditToken.fromWei(this.props.pool.senderCurrentCredit);\r\n        const requiresRebalancing = senderCurrentCredit > senderCredited || senderCurrentCredit < senderCreditLiquidationLevel;\r\n        const totalDeposited = this.formatDepositToken.fromWei(this.props.pool.totalPosition.deposited);\r\n        const totalCredited = this.formatCreditToken.fromWei(this.props.pool.totalPosition.credited);\r\n        const totalLiquidated = this.formatDepositToken.fromWei(this.props.pool.totalPosition.liquidated.total);\r\n        const seigniorageFee = parseFloat(this.props.pool.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = $.convert.fromWeiNativeToken(this.props.pool.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.pool.seigniory}`;\r\n\r\n        let updatedBlockId = parseInt(this.props.pool.senderPosition.updatedBlockId);\r\n        const senderTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        updatedBlockId = parseInt(this.props.pool.totalPosition.updatedBlockId);\r\n        const totalTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        const tooltipSeigniorageFeeText = (<span className=\"tooltip text-[80%]\">Fee paid to the seignory (token owner) from burns.</span>);\r\n\r\n        const popoverFarmPoolContent = (\r\n            <div className=\"grid grid-cols-3 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Investor Count\"\r\n                    main={$.convert.formatInteger(this.props.pool.investorCount)}\r\n                />\r\n                <PriceBox\r\n                    title={(<><span className=\"mr-1\">Seigniorage Fee</span><StyledPopover isTooltip={true} children={tooltipSeigniorageFeeText} /></>)}\r\n                    main={$.convert.formatPercentage(seigniorageFee)}\r\n                    mainUnit=\"%\"\r\n                    detail={(<a href={seignioryExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric\">{$.convert.formatAccount(this.props.pool.seigniory)}</a>)}\r\n                    info={this.props.pool.isSenderSeignory ? (<span className=\"font-display\">You're Seignory</span>) : null}\r\n                    infoClassName=\"opacity-75 light-box font-semibold uppercase text-red-500\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Seigniorage Collected\"\r\n                    main={$.convert.formatNativeToken(seigniorageFeeCollected)}\r\n                    mainUnit={$.contracts.nativeToken.symbol}\r\n                    detail={$.convert.formatStableToken(seigniorageFeeCollected * this.props.nativeTokenPriceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    infoText={this.getActivity(this.props.pool.seigniorageFee.collected.count, this.props.pool.seigniorageFee.collected.timestamp, now)}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={`card bg-[#1e0f3c80] bg-diagonal-lines`}>\r\n                <div className=\"grid grid-cols-12 gap-x-2 gap-y-0.5\">\r\n                    <div className=\"col-span-5\">\r\n                        <span className=\"block opacity-75 text-uppercase fs-6 m-0\">\r\n                            <span className=\"mr-1\">{$.farm.getDepositTokenSymbol(this.props.pool)}</span><StyledPopover children={popoverFarmPoolContent} />\r\n                        </span>\r\n                        <span className=\"opacity-25 text-[0.75em]\">\r\n                            {getSupportedSwapRouterName($.chainId, this.props.pool)}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"col-span-7 flex items-center justify-end text-[0.75em]\">\r\n                        {this.props.pool.isLiquidityToken\r\n                            ? <>\r\n                                <div className=\"avatar\">\r\n                                    <span className=\"card-title opacity-25 text-uppercase m-0\" style={{ fontSize: \"x-small\" }}>{this.props.pool.token0Details.symbol}</span>\r\n                                </div>\r\n                                <div className=\"avatar\">\r\n                                    <span className=\"card-title opacity-25 text-uppercase m-0\" style={{ fontSize: \"x-small\" }}>{this.props.pool.token1Details.symbol}</span>\r\n                                </div>\r\n                            </>\r\n                            : <div className=\"avatar\">\r\n                                <span className=\"card-title opacity-25 text-uppercase m-0\" style={{ fontSize: \"x-small\" }}>{this.props.pool.depositToken.details.symbol}</span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-span-12 mt-0.5 mb-3 border-bottom-t4 border-2\"></div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Credit Multiplier\"\r\n                            main={`×${$.convert.formatNumberScaled(1 + creditMultiplier, 2)}`}\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Deposit Fee\"\r\n                            main={$.convert.formatPercentage(depositFeeRate)}\r\n                            mainUnit=\"%\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Credit Liq. Rate\"\r\n                            main={$.convert.formatPercentage(creditLiquidationRate)}\r\n                            mainUnit=\"%\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Liquidator Fee\"\r\n                            main={$.convert.formatPercentage(liquidatorFeeRate)}\r\n                            mainUnit=\"%\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"text-[80%] -mb-2\">\r\n                        <div className=\"flex items-center justify-between group-title opacity-75 light-box px-2\">\r\n                            <span>Your Position</span>\r\n                            <span className=\"numeric opacity-25\">\r\n                                <i className=\"bi bi-clock mr-1\" />\r\n                                {$.convert.formatTimespan(senderTimeFromUpdate)}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-3 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Balance\"\r\n                            main={this.formatDepositToken.formatCurrency(senderBalance)}\r\n                            mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                            detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * senderBalance) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Deposited\"\r\n                            main={this.formatDepositToken.formatCurrency(senderDeposited)}\r\n                            mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                            detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * senderDeposited) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Credited\"\r\n                            main={this.formatCreditToken.formatCurrency(senderCredited)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            detail={this.state.creditTokenPriceInStableToken ? $.convert.formatStableToken(this.state.creditTokenPriceInStableToken * senderCredited) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n\r\n                        <PriceBox\r\n                            title=\"Current Level\"\r\n                            main={this.formatCreditToken.formatCurrency(senderCurrentCredit)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainClassName={`${senderCurrentCredit > senderCredited ? \"animate-pulse neon\" : senderCurrentCredit < senderCreditLiquidationLevel ? \"animate-pulse glow\" : \"\"}`}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Liquidation Level\"\r\n                            main={this.formatCreditToken.formatCurrency(senderCreditLiquidationLevel)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Liquidated\"\r\n                            main={this.formatDepositToken.formatCurrency(senderLiquidated)}\r\n                            mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                            detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * senderLiquidated) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            info={this.getActivity(this.props.pool.senderPosition.liquidated.count, this.props.pool.senderPosition.liquidated.timestamp, now)}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-4 gap-x-2 gap-y-4 leading-none auto-rows-auto text-[0.75em]\">\r\n                        <button type=\"button\" className=\"h-9 btn btn-blue\" disabled={this.state.isInteractionDisabled || senderBalance === 0}\r\n                            onClick={async () => {\r\n                                await this.execute(() => this.props.deposit(this.state.depositTokenPriceInStableToken));\r\n                            }}\r\n                        >\r\n                            Deposit\r\n                        </button>\r\n                        <button type=\"button\" className=\"h-9 btn btn-slate\" disabled={this.state.isInteractionDisabled || senderDeposited === 0}\r\n                            onClick={async () => {\r\n                                await this.execute(() => this.props.withdraw(this.state.creditTokenPriceInStableToken));\r\n                            }}\r\n                        >\r\n                            Withdraw\r\n                        </button>\r\n                        <button type=\"button\" className=\"h-9 btn btn-green\" disabled={this.state.isInteractionDisabled || senderDeposited === 0 || !requiresRebalancing}\r\n                            onClick={async () => {\r\n                                await this.execute(() => $.farm.rebalance(this.props.pool.poolId));\r\n                            }}\r\n                        >\r\n                            <span className={`${requiresRebalancing ? \"animate-pulse\" : \"\"}`}>Rebalance</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"h-9 btn btn-red\" disabled={this.state.isInteractionDisabled || senderDeposited === 0}\r\n                            onClick={async () => {\r\n                                await this.execute(() => $.farm.liquidate(this.props.pool.poolId));\r\n                            }}\r\n                        >\r\n                            Liquidate\r\n                        </button>\r\n\r\n                        <div className=\"col-span-4 border-bottom-t4\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center justify-between -mt-2\">\r\n                        <span className=\"text-[0.75em] uppercase opacity-75 cursor-pointer\" onClick={this.togglePoolTotalsVisibility}><i className={`bi ${(this.state.isPoolTotalsVisibile ? \"bi-caret-down-fill\" : \"bi-caret-right-fill\")} mr-1`} />\r\n                            Pool Totals\r\n                        </span>\r\n                        <span className=\"numeric text-[0.75em] opacity-25\">\r\n                            <i className=\"bi bi-clock mr-1\" />\r\n                            {$.convert.formatTimespan(totalTimeFromUpdate)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {this.state.isPoolTotalsVisibile &&\r\n                        <div className=\"grid grid-cols-3 gap-x-2 text-[80%]\">\r\n                            <PriceBox\r\n                                title=\"Deposited\"\r\n                                main={this.formatDepositToken.formatCurrency(totalDeposited)}\r\n                                mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                                detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * totalDeposited) : \"-\"}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Credited\"\r\n                                main={this.formatCreditToken.formatCurrency(totalCredited)}\r\n                                mainUnit={this.props.creditToken.details.symbol}\r\n                                detail={this.state.creditTokenPriceInStableToken ? $.convert.formatStableToken(this.state.creditTokenPriceInStableToken * totalCredited) : \"-\"}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Liquidated\"\r\n                                main={this.formatDepositToken.formatCurrency(totalLiquidated)}\r\n                                mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                                detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * totalLiquidated) : \"-\"}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                info={this.getActivity(this.props.pool.totalPosition.liquidated.count, this.props.pool.totalPosition.liquidated.timestamp, now)}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTokenAvatars() {\r\n        return this.props.pool.isLiquidityToken\r\n            ? (<>\r\n                <div className=\"avatar\">\r\n                    <span className=\"card-title opacity-25 text-uppercase m-0\">{this.props.pool.token0Details.symbol}</span>\r\n                </div>\r\n                <div className=\"avatar\">\r\n                    <span className=\"card-title opacity-25 text-uppercase m-0\">{this.props.pool.token1Details.symbol}</span>\r\n                </div>\r\n            </>)\r\n            : (<div className=\"avatar\">\r\n                <span className=\"card-title opacity-25 text-uppercase m-0\">{this.props.pool.depositToken.details.symbol}</span>\r\n            </div>);\r\n    }\r\n\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Actions\r\n    togglePoolTotalsVisibility() {\r\n        this.setState({ isPoolTotalsVisibile: !this.state.isPoolTotalsVisibile });\r\n    }\r\n\r\n    async execute(func) {\r\n        this.setState({ isInteractionDisabled: true });\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        } finally {\r\n            this.setState({ isInteractionDisabled: false });\r\n        }\r\n    }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { contains } from \"../../utils/Utils\";\r\n\r\nimport { getSupportedSwapRouterName } from \"./FarmPoolExtensions\";\r\nimport FarmPool from \"./FarmPool\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox, TitleText, MainText } from \"../InfoBox\";\r\n\r\nexport default function FarmPools({\r\n    farm,\r\n    nativeTokenPriceInStableToken,\r\n    deposit,\r\n    withdraw,\r\n    blockTime\r\n}) {\r\n    const SortBy = Object.freeze({\r\n        CreditMultiplier: 0,\r\n        DepositFee: 1,\r\n        CreditLiquidationRate: 2,\r\n        LiquidatorFee: 3,\r\n        Credited: 4\r\n    });\r\n\r\n    const SortDirection = Object.freeze({\r\n        Ascending: 0,\r\n        Descending: 1\r\n    });\r\n\r\n    const TokenType = Object.freeze({\r\n        All: 0,\r\n        Single: 1,\r\n        Liquidity: 2\r\n    });\r\n\r\n    const [activePools, setActivePools] = useState(farm.pools);\r\n    const [filter, setFilter] = useState();\r\n    const [sortBy, setSortBy] = useState(SortBy.CreditMultiplier);\r\n    const [sortDirection, setSortDirection] = useState(SortDirection.Descending);\r\n    const [tokenType, setTokenType] = useState(TokenType.All);\r\n\r\n    const format = $.format(farm.creditToken.details.decimals);\r\n\r\n    const totalLiquidityProvided = format.fromWei(farm.totalLiquidityProvided.total);\r\n    const totalCreditSupplied = farm.pools.reduce((sum, pool) => sum + format.fromWei(pool.totalPosition.credited, farm.creditToken.details.decimals), 0);\r\n\r\n    useEffect(() => {\r\n        const pools = farm.pools.filter(p => {\r\n            let found = true;\r\n\r\n            if (filter && filter.length > 0) {\r\n                const supportedSwapRouterName = getSupportedSwapRouterName($.chainId, p.pool);\r\n                const depositTokenSymbol = $.farm.getDepositTokenSymbol(p.pool);\r\n\r\n                found = contains(supportedSwapRouterName, filter) || contains(depositTokenSymbol, filter);\r\n            }\r\n\r\n            if (tokenType !== TokenType.All) {\r\n                if (tokenType === TokenType.Single) {\r\n                    found &= !p.pool.isLiquidityToken;\r\n                } else if (tokenType === TokenType.Liquidity) {\r\n                    found &= p.pool.isLiquidityToken;\r\n                }\r\n            }\r\n\r\n            return found;\r\n        });\r\n\r\n        pools.sort(function (a, b) {\r\n            let x;\r\n            let y;\r\n\r\n            if (sortDirection === SortDirection.Ascending) {\r\n                x = a;\r\n                y = b;\r\n            } else {\r\n                x = b;\r\n                y = a;\r\n            }\r\n\r\n            if (sortBy === SortBy.CreditMultiplier) {\r\n                return Web3.utils.toBN(x.creditMultiplier).cmp(Web3.utils.toBN(y.creditMultiplier));\r\n            }\r\n\r\n            if (sortBy === SortBy.DepositFee) {\r\n                return Web3.utils.toBN(x.depositFee.rate).cmp(Web3.utils.toBN(y.depositFee.rate));\r\n            }\r\n\r\n            if (sortBy === SortBy.CreditLiquidationRate) {\r\n                return Web3.utils.toBN(x.creditLiquidationRate).cmp(Web3.utils.toBN(y.creditLiquidationRate));\r\n            }\r\n\r\n            if (sortBy === SortBy.LiquidatorFee) {\r\n                return Web3.utils.toBN(x.liquidatorFee.rate).cmp(Web3.utils.toBN(y.liquidatorFee.rate));\r\n            }\r\n\r\n            if (sortBy === SortBy.Credited) {\r\n                return Web3.utils.toBN(x.senderPosition.credited).cmp(Web3.utils.toBN(y.senderPosition.credited));\r\n            }\r\n        });\r\n\r\n        // Pools where sender has deposits come first.\r\n        // TODO: Select the owners pools and append the rest so that they will appear at the top.\r\n        // pools.sort(function (a, b) {\r\n        //     return Web3.utils.toBN(b.pool.senderPosition.deposited).cmp(Web3.utils.toBN(a.pool.senderPosition.deposited));\r\n        // });\r\n\r\n        setActivePools(pools);\r\n    }, [filter, tokenType, sortBy, sortDirection, farm]);\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-x-2 gap-y-10\">\r\n            <div className=\"card bg-[#1e0f3c99] bg-diagonal-lines text-center\">\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                    <PriceBox\r\n                        title=\"Credit Token\"\r\n                        main={farm.creditToken.details.symbol}\r\n                        mainUnit=\"&nbsp;\"\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainClassName=\"font-display\"\r\n                        mainUnitClassName=\"mb-3\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Farm Pools\"\r\n                        main={$.convert.formatInteger(farm.pools.length)}\r\n                        mainUnit=\"&nbsp;\"\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainUnitClassName=\"mb-3\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Total Liquidity Added\"\r\n                        main={$.convert.formatCurrency(totalLiquidityProvided, Math.min(farm.creditToken.details.decimals, $.contracts.nativeToken.decimals))}\r\n                        mainUnit={`${farm.creditToken.details.symbol}/${$.contracts.nativeToken.symbol}`}\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainUnitClassName=\"!opacity-25 mb-3\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Total Credit Supplied\"\r\n                        main={$.convert.formatCurrency(totalCreditSupplied, farm.creditToken.details.decimals)}\r\n                        mainUnit={farm.creditToken.details.symbol}\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainUnitClassName=\"!opacity-25 mb-3\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card bg-[#1e0f3c99] bg-diagonal-lines\">\r\n                <div className=\"grid grid-cols-12 gap-x-2 gap-y-4 justify-between\">\r\n                    <div className=\"col-span-12\">\r\n                        <label htmlFor=\"price\">\r\n                            <TitleText title=\"Filter pools\" titleClassName=\"opacity-100 leading-6\" />\r\n                        </label>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"search\"\r\n                            id=\"filter\"\r\n                            className=\"!text-[1em] px-2\"\r\n                            placeholder=\"WEEB, Uniswap\"\r\n                            onInput={value => {\r\n                                console.log(`filter: ${value}`);\r\n                                setFilter(value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-12 xl:col-span-8 accent-violet-600\">\r\n                        <label>\r\n                            <TitleText title=\"Sort by\" titleClassName=\"opacity-100 leading-6\" />\r\n                        </label>\r\n                        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-x-2 gap-y-0.5 justify-between\">\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy1\" value={SortBy.CreditMultiplier} checked={sortBy === SortBy.CreditMultiplier} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy1\">\r\n                                    <TitleText title=\"Credit Multiplier\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy2\" value={SortBy.DepositFee} checked={sortBy === SortBy.DepositFee} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy2\">\r\n                                    <TitleText title=\"Deposit Fee\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy3\" value={SortBy.CreditLiquidationRate} checked={sortBy === SortBy.CreditLiquidationRate} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy3\">\r\n                                    <TitleText title=\"Credit Liq. Rate\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy4\" value={SortBy.LiquidatorFee} checked={sortBy === SortBy.LiquidatorFee} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy4\">\r\n                                    <TitleText title=\"Liquidator Fee\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy5\" value={SortBy.Credited} checked={sortBy === SortBy.Credited} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy5\">\r\n                                    <TitleText title=\"Credited Amount\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-12 xl:col-span-4 accent-violet-600\">\r\n                        <div className=\"grid grid-cols-2 gap-x-2 gap-y-0.5 justify-between\">\r\n                            <div>\r\n                                <label>\r\n                                    <TitleText title=\"Sort direction\" titleClassName=\"opacity-100\" />\r\n                                </label>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"sortDirection\" id=\"sortDirection1\" value={SortDirection.Ascending} checked={sortDirection === SortDirection.Ascending} onChange={onSortDirectionChanged} />\r\n                                        <label htmlFor=\"sortDirection1\">\r\n                                            <TitleText title={(<i className=\"bi bi-sort-numeric-down text-[20px]\" />)} titleClassName=\"opacity-100 normal-case\" />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"sortDirection\" id=\"sortDirection2\" value={SortDirection.Descending} checked={sortDirection === SortDirection.Descending} onChange={onSortDirectionChanged} />\r\n                                        <label htmlFor=\"sortDirection2\">\r\n                                            <TitleText title={(<i className=\"bi bi-sort-numeric-down-alt text-[20px]\"></i>)} titleClassName=\"opacity-100 normal-case\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <TitleText title=\"Token type\" titleClassName=\"opacity-100\" />\r\n                                </label>\r\n                                <div className=\"flex flex-wrap items-center gap-2\">\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"tokenType\" id=\"tokenType1\" value={TokenType.All} checked={tokenType === TokenType.All} onChange={onTokenTypeChanged} />\r\n                                        <label htmlFor=\"tokenType1\">\r\n                                            <TitleText title=\"All\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"tokenType\" id=\"tokenType2\" value={TokenType.Single} checked={tokenType === TokenType.Single} onChange={onTokenTypeChanged} />\r\n                                        <label htmlFor=\"tokenType2\">\r\n                                            <TitleText title=\"Single\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"tokenType\" id=\"tokenType3\" value={TokenType.Liquidity} checked={tokenType === TokenType.Liquidity} onChange={onTokenTypeChanged} />\r\n                                        <label htmlFor=\"tokenType3\">\r\n                                            <TitleText title=\"Liquidity\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-x-5 gap-y-10\">\r\n                {getFarmPools(activePools)}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function onTokenTypeChanged(e) {\r\n        const { name, value } = e.target;\r\n        setTokenType(parseInt(value));\r\n    }\r\n\r\n    function onSortByChanged(e) {\r\n        const { name, value } = e.target;\r\n        setSortBy(parseInt(value));\r\n    }\r\n\r\n    function onSortDirectionChanged(e) {\r\n        const { name, value } = e.target;\r\n        setSortDirection(parseInt(value));\r\n    }\r\n\r\n    function indexPools(pools) {\r\n        return pools.map((pool, poolId) => {\r\n            return { poolId, pool };\r\n        });\r\n    }\r\n\r\n    function getFarmPools(pools) {\r\n        const items = [];\r\n\r\n        pools.forEach((pool, i) => {\r\n            items.push((\r\n                <div key={i} className=\"max-h-full\">\r\n                    <FarmPool\r\n                        creditToken={farm.creditToken}\r\n                        pool={pool}\r\n                        nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                        deposit={depositTokenPriceInStableToken => deposit(pool.poolId, depositTokenPriceInStableToken)}\r\n                        withdraw={creditTokenPriceInStableToken => withdraw(pool.poolId, creditTokenPriceInStableToken)}\r\n                        blockTime={blockTime}\r\n                        currentBlock={farm.currentBlock}\r\n                    />\r\n                </div>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\n\r\nFarmPools.propTypes = {\r\n    borderBottom: PropTypes.string,\r\n    deposit: PropTypes.func,\r\n    withdraw: PropTypes.func,\r\n    rebalance: PropTypes.func,\r\n    liquidate: PropTypes.func\r\n};\r\n\r\nFarmPools.defaultProps = {\r\n    deposit: async (poolId, amount) => {\r\n    },\r\n    withdraw: async (poolId, amount) => {\r\n    },\r\n    rebalance: async (poolId) => {\r\n    },\r\n    liquidate: async (poolId) => {\r\n    }\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { getSupportedSwapRouterName } from \"./FarmPoolExtensions\";\r\n\r\nimport { PriceBox, TitleText, MainText, DetailText, InfoText } from \"../InfoBox\";\r\n\r\n/*\r\n{\r\n    creditToken,\r\n    poolLiquidatable,\r\n    blockTime,\r\n    currentBlock\r\n}\r\n*/\r\nexport default class FarmLiquidatable extends Component {\r\n    static propTypes = {\r\n        liquidate: PropTypes.func,\r\n        blockTime: PropTypes.number\r\n    }\r\n\r\n    static defaultProps = {\r\n        liquidate: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isInteractionDisabled: {}\r\n        };\r\n\r\n        this.formatDepositToken = $.format(this.props.poolLiquidatable.pool.depositToken.details.decimals);\r\n        this.formatCreditToken = $.format(this.props.creditToken.details.decimals);\r\n\r\n        this.execute = this.execute.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const creditMultiplier = parseFloat(this.props.poolLiquidatable.pool.creditMultiplier) / 10000;\r\n        const depositFeeRate = parseFloat(this.props.poolLiquidatable.pool.depositFee.rate) / 10000;\r\n        const creditLiquidationRate = parseFloat(this.props.poolLiquidatable.pool.creditLiquidationRate) / 10000;\r\n        const liquidatorFeeRate = parseFloat(this.props.poolLiquidatable.pool.liquidatorFee.rate) / 10000;\r\n        const senderBalance = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.senderBalance);\r\n        const senderDeposited = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.deposited);\r\n        const senderCredited = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.credited);\r\n        const senderLiquidated = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.liquidated.total);\r\n        const senderCreditLiquidationLevel = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.creditLiquidationLevel);\r\n        const senderCurrentCredit = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.senderCurrentCredit);\r\n        const totalDeposited = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.totalPosition.deposited);\r\n        const totalCredited = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.totalPosition.credited);\r\n        const totalLiquidated = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.totalPosition.liquidated.total);\r\n        const seigniorageFee = parseFloat(this.props.poolLiquidatable.pool.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = $.convert.fromWeiNativeToken(this.props.poolLiquidatable.pool.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.poolLiquidatable.pool.seigniory}`;\r\n\r\n        let updatedBlockId = parseInt(this.props.poolLiquidatable.pool.senderPosition.updatedBlockId);\r\n        const senderTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        updatedBlockId = parseInt(this.props.poolLiquidatable.pool.totalPosition.updatedBlockId);\r\n        const totalTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        const totalLiquidity = this.formatCreditToken.fromWei(this.props.poolLiquidatable.totalLiquidity.total);\r\n        const totalLiquidatorFee = this.formatCreditToken.fromWei(this.props.poolLiquidatable.totalLiquidatorFee.total);\r\n\r\n        const { fee, count } = this.getPoolSelfTotals(this.props.creditToken, this.props.poolLiquidatable);\r\n        const netLiquidatorFee = parseFloat(totalLiquidatorFee) - fee;\r\n\r\n        return (\r\n            <div className=\"card bg-[#1e0f3c80] bg-diagonal-lines\">\r\n                <div className=\"grid grid-cols-1 gap-y-4\">\r\n                    <div className=\"grid grid-cols-3 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Deposit Token\"\r\n                            main={$.farm.getDepositTokenSymbol(this.props.poolLiquidatable.pool)}\r\n                            mainUnit={getSupportedSwapRouterName($.chainId, this.props.poolLiquidatable.pool)}\r\n                            isMainUnitOnTop={true}\r\n                            mainClassName=\"font-display\"\r\n                            mainUnitClassName=\"!opacity-25 mb-3 font-display\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Total Liquidity\"\r\n                            main={this.formatCreditToken.formatCurrency(totalLiquidity)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            info={(<><div className=\"flex justify-evenly space-x-1\"><span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(this.props.poolLiquidatable.totalLiquidity.count)}</span></div></>)}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Total Liquidator Fee\"\r\n                            main={this.formatCreditToken.formatCurrency(netLiquidatorFee)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            info={(<><div className=\"flex justify-evenly space-x-1\"><span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(parseInt(this.props.poolLiquidatable.totalLiquidatorFee.count) - count)}</span></div></>)}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-4 gap-x-2 gap-y-2 text-center text-[80%]\">\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Investor\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit={getSupportedSwapRouterName($.chainId, this.props.poolLiquidatable.pool)}\r\n                                isMainUnitOnTop={true}\r\n                                mainClassName=\"font-display\"\r\n                                mainUnitClassName=\"!opacity-25 mt-3 font-display\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Liquidity\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit={this.props.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mt-3\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Liquidator Fee\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit={this.props.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mt-3\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Action\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit=\"&nbsp;\"\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mt-3\"\r\n                            />\r\n                        </div>\r\n                        {this.getFarmLiquidatables(this.props.poolLiquidatable.pool.poolId, this.props.poolLiquidatable.investorLiquidatables)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Content generators\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getFarmLiquidatables(poolId, investorLiquidatables) {\r\n        const items = [];\r\n\r\n        investorLiquidatables.forEach((investorLiquidatable, i) => {\r\n            items.push((\r\n                <Fragment key={i}>\r\n                    <div>\r\n                        <MainText\r\n                            main={$.convert.formatAccount(investorLiquidatable.investor)}\r\n                            mainClassName=\"text-[0.875em]\"\r\n                        />\r\n                        {investorLiquidatable.isSelf &&\r\n                            <div>\r\n                                <DetailText\r\n                                    detail=\"You\"\r\n                                    detailClassName=\"font-display rounded-lg bg-red-600 px-1\"\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <MainText main={this.formatCreditToken.formatCurrency(this.formatCreditToken.fromWei(investorLiquidatable.liquidity))}\r\n                    />\r\n                    <MainText main={investorLiquidatable.isSelf\r\n                        ? (<del>{this.formatCreditToken.formatCurrency(this.formatCreditToken.fromWei(investorLiquidatable.liquidatorFee))}</del>)\r\n                        : (this.formatCreditToken.formatCurrency(this.formatCreditToken.fromWei(investorLiquidatable.liquidatorFee)))\r\n                    }\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"h-7 btn btn-red px-2\"\r\n                        disabled={this.state.isInteractionDisabled[i]}\r\n                        onClick={async () => {\r\n                            await this.execute(i, () => $.farm.liquidateAccount(poolId, investorLiquidatable.investor));\r\n                        }}\r\n                    >\r\n                        Liquidate\r\n                    </button>\r\n                </Fragment>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    getPoolSelfTotals(creditToken, pool) {\r\n        const liquidatables = pool.investorLiquidatables.filter(i => i.isSelf);\r\n        const fee = liquidatables.reduce((sum, liquidatable) => sum + $.convert.fromWei(liquidatable.liquidatorFee, creditToken.details.decimals), 0);\r\n\r\n        return { fee, count: liquidatables.length };\r\n    }\r\n\r\n    async execute(i, func) {\r\n        this.setState((prevState, props) => ({\r\n            isInteractionDisabled: { ...prevState.isInteractionDisabled, [i]: true }\r\n        }));\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        } finally {\r\n            this.setState((prevState, props) => ({\r\n                isInteractionDisabled: { ...prevState.isInteractionDisabled, [i]: false }\r\n            }));\r\n        }\r\n    }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Web3 from \"web3\";\r\n\r\nimport { fromWei } from \"../../utils/Web3Converter\";\r\nimport { formatInteger, formatCurrency } from \"../../utils/Format\";\r\n\r\nimport { PriceBox, TitleText, MainText, DetailText, InfoText } from \"../InfoBox\";\r\nimport FarmLiquidatable from \"./FarmLiquidatable\";\r\n\r\nexport default function FarmLiquidatables({\r\n    farm,\r\n    balance,\r\n    priceInStableToken,\r\n    nativeTokenPriceInStableToken,\r\n    blockTime,\r\n}) {\r\n    const [activePools, setActivePools] = useState(farm.poolLiquidatables);\r\n\r\n    const totalLiquidity = parseFloat(fromWei(farm.totalLiquidity.total, farm.creditToken.details.decimals));\r\n    const totalLiquidatorFee = parseFloat(fromWei(farm.totalLiquidatorFee.total, farm.creditToken.details.decimals));\r\n\r\n    useEffect(() => {\r\n        const pools = [...farm.poolLiquidatables];\r\n\r\n        pools.sort(function (a, b) {\r\n            return Web3.utils.toBN(b.totalLiquidity.total).cmp(Web3.utils.toBN(a.totalLiquidity.total));\r\n        });\r\n\r\n        // Pools where sender has deposits come first.\r\n        pools.sort(function (a, b) {\r\n            return Web3.utils.toBN(b.pool.senderPosition.deposited).cmp(Web3.utils.toBN(a.pool.senderPosition.deposited));\r\n        });\r\n\r\n        setActivePools(pools);\r\n    }, [farm]);\r\n\r\n    return (\r\n        <>\r\n            {activePools.length > 0\r\n                ? <>\r\n                    <div className=\"card bg-[#1e0f3c80] bg-diagonal-lines text-center\">\r\n                        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                            <PriceBox\r\n                                title=\"Credit Token\"\r\n                                main={farm.creditToken.details.symbol}\r\n                                mainUnit=\"&nbsp;\"\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"font-display\"\r\n                                mainUnitClassName=\"mb-3\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Liquidatable Pools\"\r\n                                main={formatInteger(farm.poolLiquidatables.length)}\r\n                                mainUnit=\"&nbsp;\"\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainUnitClassName=\"mb-3\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Total Liquidity\"\r\n                                main={formatCurrency(totalLiquidity, farm.creditToken.details.decimals)}\r\n                                mainUnit={farm.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Total Liquidator Fee\"\r\n                                main={formatCurrency(totalLiquidatorFee, farm.creditToken.details.decimals)}\r\n                                mainUnit={farm.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-x-5 gap-y-10\">\r\n                        {getFarmLiquidatables(activePools)}\r\n                    </div>\r\n                </>\r\n                : <div className=\"card bg-[#1e0f3c80] bg-diagonal-lines text-center\">\r\n                    <p className=\"light-box text-red-500 \">No liquidatable pools found.</p>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n\r\n    function getFarmLiquidatables(poolLiquidatables) {\r\n        const items = [];\r\n\r\n        poolLiquidatables.forEach((poolLiquidatable, i) => {\r\n            items.push((\r\n                <div key={i} className=\"max-h-full\">\r\n                    <div className=\"rounded-lg border-2 border-white/10\">\r\n                        <FarmLiquidatable\r\n                            creditToken={farm.creditToken}\r\n                            poolLiquidatable={poolLiquidatable}\r\n                            nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                            blockTime={blockTime}\r\n                            currentBlock={farm.currentBlock}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\nFarmLiquidatables.propTypes = {\r\n    liquidate: PropTypes.func\r\n};\r\n\r\nFarmLiquidatables.defaultProps = {\r\n    liquidate: async (poolId, investor) => {\r\n    }\r\n};\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function BuyCryptoDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={true}\r\n            body={(\r\n                <>\r\n                    <iframe\r\n                        src=\"https://widget.onramper.com?color=266677&apiKey=pk_test_x5M_5fdXzn1fxK04seu0JgFjGsu7CH8lOvS9xZWzuSM0\"\r\n                        height=\"595px\"\r\n                        width=\"100%\"\r\n                        title=\"Onramper widget\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\r\n                        className=\"rounded-lg\"\r\n                    >\r\n                        <a href=\"https://widget.onramper.com\" target=\"_blank\">Buy crypto</a>\r\n                    </iframe>\r\n                </>\r\n            )}\r\n            title=\"Buy crypto with credit card\"\r\n            hideSubmitButton={true}\r\n            hideCancelButton={true}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nimport Swap from \"../Swap\";\r\n\r\nexport default function SwapDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    nativeCoinBalance,\r\n    token,\r\n    nativeTokenPriceInStableToken,\r\n    swap,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={true}\r\n            body={(\r\n                <>\r\n                    <Swap\r\n                        isDarkTheme={true}\r\n                        nativeCoinBalance={nativeCoinBalance}\r\n                        token={token}\r\n                        nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                        swap={swap}\r\n                    />\r\n                </>\r\n            )}\r\n            title={`Buy-Sell ${token.details.symbol}`}\r\n            hideSubmitButton={true}\r\n            cancelButtonText=\"Close\"\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function ApproveRouterDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    submitted,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <p>The router contract needs to be approved <u>once</u>.</p>\r\n                    <p>Action will resume after approval.</p>\r\n                </>\r\n            )}\r\n            title=\"Approve the Router\"\r\n            submitButtonText=\"Approve\"\r\n            submitted={submitted}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function ApproveHarvesterDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    submitted,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <p>Harvesting of rewards is performed thru the game contract. A percentage of your pendig reward goes to a game of your choice and the rest is added to your balance.</p>\r\n                    <p>The game contract needs to be approved <u>once</u>.</p>\r\n                    <p>Action will resume after approval.</p>\r\n                </>\r\n            )}\r\n            title=\"Approve the Harvester\"\r\n            submitButtonText=\"Approve\"\r\n            submitted={submitted}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import { getOutcomeImage, getOutcomeText, getRandomizeText, getRandomInteger } from \"../GameExtensions\";\r\n\r\nexport default function OutcomeList({\r\n    outcomeCount,\r\n    defaultOutcome,\r\n    setOutcome\r\n}) {\r\n    function getOutcomeList() {\r\n        const items = [];\r\n\r\n        for (let outcome = 0; outcome < outcomeCount; ++outcome) {\r\n            const isActive = outcome === parseInt(defaultOutcome);\r\n\r\n            items.push((\r\n                <button\r\n                    key={outcome}\r\n                    type=\"button\"\r\n                    className={`group btn btn-outcome font-bold uppercase tracking-wide ${isActive ? \"active\" : \"\"} p-1`}\r\n                    onClick={() => setOutcome(outcome)}>\r\n                    {getOutcomeImage(parseInt(outcomeCount), outcome)}\r\n                    <div className={`text-[0.875em] mt-1 light-box group-active:text-violet-800 ${isActive ? \"text-violet-800\" : \"\"}`}>\r\n                        {getOutcomeText(parseInt(outcomeCount), outcome)}\r\n                    </div>\r\n                </button>\r\n            ));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-y-3\">\r\n            <div className=\"flex items-start justify-center space-x-2 h-[180px]\">\r\n                {getOutcomeList()}\r\n            </div>\r\n\r\n            <div className=\"mx-auto text-[80%]\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-randomize w-16 h-9 text-violet-50 mt-3\"\r\n                    onClick={() => setOutcome(getRandomInteger(0, parseInt(outcomeCount)))}\r\n                >\r\n                    {getRandomizeText(parseInt(outcomeCount))}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import $ from \"../core/Services\";\r\n\r\nexport default function GameList({\r\n    games,\r\n    defaultGameId,\r\n    setGameId\r\n}) {\r\n    function getGameList() {\r\n        const items = [];\r\n        let i = 0;\r\n\r\n        games.forEach((game, gameId) => {\r\n            var isActive = false;\r\n\r\n            if (i++ === 0) {\r\n                if (defaultGameId === -1 || defaultGameId > games.length) {\r\n                    isActive = true;\r\n                }\r\n            }\r\n\r\n            let minimumBet;\r\n            let unit;\r\n\r\n            if (game.isPercentage) {\r\n                minimumBet = $.convert.formatPercentage(parseFloat(game.minimumBet) / 10000);\r\n                unit = \"%\";\r\n            } else {\r\n                minimumBet = $.convert.formatCurrency($.convert.fromWei(game.minimumBet, game.tokenInfo.details.decimals), game.tokenInfo.details.decimals);\r\n                unit = game.tokenInfo.details.symbol;\r\n            }\r\n\r\n            items.push((\r\n                <button\r\n                    key={gameId}\r\n                    className={`card btn btn-violet ${isActive || gameId === defaultGameId ? \"active\" : \"\"}`}\r\n                    onClick={e => {\r\n                        e.preventDefault();\r\n                        setGameId(gameId);\r\n                    }}>\r\n                    <div className=\"grid grid-cols-1 gap-y-1 text-center\">\r\n                        <h6 className=\"card-header-title-text font-semibold\">\r\n                            {game.name}\r\n                        </h6>\r\n                        <div className=\"text-[0.5625em] opacity-80\">\r\n                            <div>\r\n                                Draws every\r\n                                <span className=\"numeric mx-1 font-bold\">{game.blockLength}</span>\r\n                                blocks\r\n                            </div>\r\n                            <div>\r\n                                Min. bet is\r\n                                <span className=\"mx-1 font-bold\">\r\n                                    <span className=\"numeric\">{minimumBet}</span> {unit}\r\n                                </span>\r\n                                {game.isPercentage ? \"of the reward\" : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-2 gap-x-2 gap-y-2 max-h-40 overflow-y-auto overflow-x-hidden section p-1\">\r\n            {getGameList()}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function PredefinedValueSelector({\r\n    predefinedValueListTitle,\r\n    userSuppliedValueTitle,\r\n    predefinedValues,\r\n    defaultValue,\r\n    isValidValue,\r\n    delay,\r\n    onInput\r\n}) {\r\n    const [input, setInput] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!input) {\r\n            setInput(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => onInput(input), delay);\r\n        return () => clearTimeout(timerId);\r\n    }, [input]);\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"flex flex-row items-center justify-start space-x-2 space-y-0\"> */}\r\n            <div className=\"flex flex-col sm:flex-row items-center justify-start sm:space-x-2 space-y-2 sm:space-y-0\">\r\n                <div className=\"flex flex-col justify-center w-full\">\r\n                    <label className=\"flex leading-6 mb-0.5\" htmlFor=\"predefinedValueList\">\r\n                        <span className=\"input-label\">\r\n                            {predefinedValueListTitle}\r\n                        </span>\r\n                    </label>\r\n                    <select\r\n                        id=\"predefinedValueList\"\r\n                        className=\"text-indigo-900 bg-indigo-900/10 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                        value={input}\r\n                        onChange={e => setInput(e.target.value)}\r\n                    >\r\n                        {predefinedValues}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label className=\"flex leading-6 mb-0.5\" htmlFor=\"userSuppliedValue\">\r\n                        <span className=\"input-label\">\r\n                            {userSuppliedValueTitle}\r\n                        </span>\r\n                    </label>\r\n                    <input\r\n                        type=\"search\"\r\n                        id=\"userSuppliedValue\"\r\n                        className={`numeric text-indigo-900 bg-indigo-900/10 border-indigo-300/50 focus:ring-indigo-300/50 ${isValidValue ? \"\" : \"bg-red-300\"}`}\r\n                        value={input ?? \"\"}\r\n                        onChange={e => setInput(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nPredefinedValueSelector.propTypes = {\r\n    predefinedValueListTitle: PropTypes.string,\r\n    userSuppliedValueTitle: PropTypes.string,\r\n    predefinedValues: PropTypes.any,\r\n    defaultValue: PropTypes.string,\r\n    delay: PropTypes.number,\r\n    onInput: PropTypes.func\r\n}\r\n\r\nPredefinedValueSelector.defaultProps = {\r\n    delay: 400,\r\n    onInput: () => {\r\n    }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"../core/Services\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\nimport RangeInput from \"./core/RangeInput\";\r\nimport OutcomeList from \"./OutcomeList\";\r\nimport GameList from \"./GameList\";\r\nimport PredefinedValueSelector from \"./core/PredefinedValueSelector\";\r\n\r\nimport { MainText } from \"../../InfoBox\";\r\nimport { StyledPopover } from \"../../StyledPopover\";\r\n\r\n//import tokens from \"../../../tokens.json\";\r\n\r\nexport default function GameBetDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    title,\r\n    submitButtonText,\r\n    submitted,\r\n    canceled,\r\n    games,\r\n    defaultGameId,\r\n    defaultOutcome,\r\n    enableGameSelection,\r\n    enableAmountEntry,\r\n    token\r\n}) {\r\n    const [tokens, setTokens] = useState();\r\n    const [gameId, setGameId] = useState(defaultGameId);\r\n    const [outcome, setOutcome] = useState(defaultOutcome);\r\n    const [selectedToken, setSelectedToken] = useState();\r\n    const [tokenPriceInMainToken, setTokenPriceInMainToken] = useState(0);\r\n    const [tokenPriceInStableToken, setTokenPriceInStableToken] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [isValidAddress, setIsValidAddress] = useState();\r\n\r\n    console.log(`gameId: ${gameId} (${typeof gameId})`);\r\n    const game = games.get(gameId);\r\n\r\n    const tooltipHarvestDescriptionText = (\r\n        <div className=\"tooltip text-[80%]\">\r\n            <p>\r\n                Harvesting rewards though UI requires a minimum bet amount from the pending reward to be placed in a game.\r\n            </p>\r\n            <p>\r\n                The rest of the pending reward is added to your balance.\r\n            </p>\r\n            <p>\r\n                If you don't want to place a bet you need to trigger a transfer event either by claiming game prizes, placing bets, farming, liquidity hunting, etc. or by performing a manual wallet to wallet transfer.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    const tooltipPlaceBetDescriptionText = (\r\n        <div className=\"tooltip text-[80%]\">\r\n            <p>\r\n                Placing a bet will automatically harvest the pending reward.\r\n            </p>\r\n            <p>\r\n                You can bet with any token available in your wallet, including liquidity provider (LP) tokens. The conversion will be held automatically.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    if (outcome > game.outcomeCount) {\r\n        setOutcome(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch($.settings.getTokenListUri(), {\r\n            headers: {\r\n                \"X-API-Key\": Configuration.getMoralisApiKey()\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(values => {\r\n                setTokens(values);\r\n            })\r\n    }, [$.account, $.chainId]);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <div className=\"grid grid-cols-1 gap-y-3\">\r\n                    {enableGameSelection &&\r\n                        <div>\r\n                            <span className=\"input-label\">\r\n                                Select a game:\r\n                            </span>\r\n                            <GameList\r\n                                games={games}\r\n                                defaultGameId={gameId}\r\n                                setGameId={setGameId}\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                    <div>\r\n                        <div>\r\n                            <span className=\"input-label\">\r\n                                Bet on an outcome:\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <OutcomeList\r\n                                outcomeCount={game.outcomeCount}\r\n                                defaultOutcome={outcome}\r\n                                setOutcome={setOutcome}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {!enableGameSelection && enableAmountEntry &&\r\n                        <div className=\"flex flex-col justify-between\">\r\n                            {tokens &&\r\n                                <PredefinedValueSelector\r\n                                    predefinedValueListTitle=\"Select the token to bet:\"\r\n                                    userSuppliedValueTitle=\"Or enter the token address:\"\r\n                                    predefinedValues={getTokenList()}\r\n                                    defaultValue={token.contractAddress}\r\n                                    isValidValue={isValidAddress}\r\n                                    delay={400}\r\n                                    onInput={async address => {\r\n                                        if (!Web3.utils.isAddress(address.toLowerCase())) {\r\n                                            setIsValidAddress(false);\r\n                                            console.log(`${address} is not a valid address.`);\r\n                                            return;\r\n                                        }\r\n\r\n                                        address = Web3.utils.toChecksumAddress(address);\r\n\r\n                                        setIsValidAddress(true);\r\n                                        setIsLoading(true);\r\n\r\n                                        try {\r\n                                            const results = await $.tokenFinder.findAll(address);\r\n\r\n                                            if (results.length == 0) {\r\n                                                return;\r\n                                            }\r\n\r\n                                            const i = getMaxReservesIndex(results);\r\n                                            const t = results[i];\r\n\r\n                                            setSelectedToken(t);\r\n\r\n                                            const tokenPriceInMainToken = await $.router.getTokenPriceInMainToken(address, t.info.details.decimals, t.isLiquidityToken);\r\n                                            setTokenPriceInMainToken(tokenPriceInMainToken);\r\n\r\n                                            const tokenPriceInStableToken = await $.router.getTokenPriceInStableToken(address, t.info.details.decimals, t.isLiquidityToken);\r\n                                            setTokenPriceInStableToken(tokenPriceInStableToken);\r\n                                        } catch (error) {\r\n                                            setSelectedToken(undefined);\r\n                                            console.error(\"Token selection error.\", error);\r\n                                        } finally {\r\n                                            setIsLoading(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                            <span className=\"text-[0.75em] font-medium text-right\">\r\n                                {isLoading\r\n                                    ? (<span className=\"animate-pulse\">Fetching...</span>)\r\n                                    : selectedToken ? `${selectedToken.info.details.name} @ ${Configuration.getSwapRouterName($.chainId, selectedToken.info.router)}` : \"-\"\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    }\r\n\r\n                    {enableAmountEntry &&\r\n                        <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                            <div className=\"flex items-center justify-between leading-6\">\r\n                                <span className=\"input-label\">\r\n                                    Amount:\r\n                                    <span className=\"ml-1\">\r\n                                        (\r\n                                        <MainText\r\n                                            main={$.convert.formatPercentage(percentage)}\r\n                                            mainUnit=\"%\"\r\n                                            mainClassName=\"text-[0.875em]\"\r\n                                            mainUnitClassName=\"ml-0.5\"\r\n                                        />\r\n                                        )\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"input-label\">\r\n                                    Balance:\r\n                                    <MainText\r\n                                        main={selectedToken ? $.convert.formatCurrency($.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals), selectedToken.info.details.decimals) : \"-\"}\r\n                                        mainUnit={selectedToken?.info.details.symbol}\r\n                                        mainClassName=\"text-[0.875em] ml-1\"\r\n                                        mainUnitClassName=\"ml-0.5\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                            <div className={`${isLoading ? \"animate-pulse\" : \"\"}`}>\r\n                                <RangeInput\r\n                                    isDisabled={isLoading}\r\n                                    min={0}\r\n                                    max={selectedToken ? $.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals) : 0}\r\n                                    decimals={selectedToken ? Math.min(4, selectedToken.info.details.decimals) : 0}\r\n                                    setValue={setAmount}\r\n                                    setPercentage={setPercentage}\r\n                                    valueClassName=\"text-indigo-900 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                                    rangeClassName=\"accent-indigo-900\"\r\n                                />\r\n                                <div className=\"grid grid-cols-2 gap-x-2 mt-3\">\r\n                                    <div className=\"justify-self-end\">\r\n                                        <MainText\r\n                                            main={$.convert.formatMainToken(amount * tokenPriceInMainToken)}\r\n                                            mainUnit={token.details.symbol}\r\n                                            mainClassName=\"text-[0.875em]\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"justify-self-start\">\r\n                                        <MainText\r\n                                            main={$.convert.formatStableToken(amount * tokenPriceInStableToken)}\r\n                                            mainUnit={$.contracts.stableToken.symbol}\r\n                                            mainClassName=\"text-[0.875em]\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )}\r\n            title={title}\r\n            info={(<StyledPopover isTooltip={true} children={enableAmountEntry ? tooltipPlaceBetDescriptionText : tooltipHarvestDescriptionText} icon=\"bi-info\" />)}\r\n            submitButtonText={submitButtonText}\r\n            isSubmitButtonDisabled={enableAmountEntry && (isLoading || amount <= 0)}\r\n            submitted={async () => {\r\n                await submitted(gameId, selectedToken, amount, outcome, game.tokenInfo);\r\n            }}\r\n            canceled={canceled}\r\n        />\r\n    );\r\n\r\n    function getMaxReservesIndex(results) {\r\n        if (results.length == 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let maxIndex;\r\n        let maxValue;\r\n\r\n        for (let i = 0; i < results.length; ++i) {\r\n            const reserve0 = $.convert.fromWei(results[i].reserveInfo.reserve0, results[i].info.details.decimals);\r\n            const reserve1 = $.convert.fromWei(results[i].reserveInfo.reserve1, results[i].info.details.decimals);\r\n\r\n            // Selected token's reserve is always returned as reserve0.\r\n            const price = reserve1 / reserve0;\r\n            const k = reserve0 * reserve1;\r\n\r\n            if (!maxValue || k > maxValue) {\r\n                maxIndex = i;\r\n                maxValue = k;\r\n            }\r\n        }\r\n\r\n        return maxIndex;\r\n    }\r\n\r\n    function getTokenList() {\r\n        const items = [\r\n            (<option key={\"\"} value=\"\">- Not in list -</option>),\r\n            (<option key={token.contractAddress} value={token.contractAddress}>{token.details.symbol}</option>)\r\n        ];\r\n\r\n        tokens.forEach(token => {\r\n            items.push((\r\n                <option key={token.address} value={token.address}>{token.symbol}</option>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    function getTokenList() {\r\n        const items = [\r\n            (<option key={\"\"} value=\"\">- Not in list -</option>),\r\n        ];\r\n\r\n        if (!tokens.map(t => t.token_address).includes(token.contractAddress)) {\r\n            items.push((<option key={token.contractAddress} value={token.contractAddress}>{token.details.symbol}</option>));\r\n        }\r\n\r\n        tokens.forEach(token => {\r\n            items.push((<option key={token.token_address} value={token.token_address}>{token.symbol}</option>));\r\n        });\r\n\r\n        return items;\r\n    }\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function ApproveFarmDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    submitted,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <p>The farm contract needs to be approved <u>once</u>.</p>\r\n                    <p>Action will resume after approval.</p>\r\n                </>\r\n            )}\r\n            title=\"Approve the Farm\"\r\n            submitButtonText=\"Approve\"\r\n            submitted={submitted}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"../core/Services\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\nimport RangeInput from \"./core/RangeInput\";\r\nimport PredefinedValueSelector from \"./core/PredefinedValueSelector\";\r\n\r\nimport { MainText } from \"../../InfoBox\";\r\nimport { StyledPopover } from \"../../StyledPopover\";\r\n\r\n//import tokens from \"../../../tokens.json\";\r\n\r\nexport default function FarmDepositDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    title,\r\n    submitButtonText,\r\n    submitted,\r\n    canceled,\r\n    pool\r\n}) {\r\n\r\n    const [tokens, setTokens] = useState();\r\n    const [selectedToken, setSelectedToken] = useState();\r\n    const [tokenPriceInDepositToken, setTokenPriceInDepositToken] = useState(0);\r\n    const [tokenPriceInStableToken, setTokenPriceInStableToken] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [isValidAddress, setIsValidAddress] = useState();\r\n\r\n    const tooltipDescriptionText = (\r\n        <div className=\"tooltip text-[80%]\">\r\n            <p>\r\n                Harvesting rewards though UI requires a minimum bet amount from the pending reward to be placed in a game.\r\n            </p>\r\n            <p>\r\n                The rest of the pending reward is added to your balance.\r\n            </p>\r\n            <p>\r\n                If you don't want to place a bet you need to trigger a transfer event either by claiming game prizes, placing bets, farming, liquidity hunting, etc. or by performing a manual wallet to wallet transfer.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetch($.settings.getTokenListUri(), {\r\n            headers: {\r\n                \"X-API-Key\": Configuration.getMoralisApiKey()\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(values => {\r\n                setTokens(values);\r\n            })\r\n    }, [$.account, $.chainId]);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <div className=\"grid grid-cols-1 gap-y-3\">\r\n                    <div className=\"flex flex-col justify-between\">\r\n                        {tokens &&\r\n                            <PredefinedValueSelector\r\n                                predefinedValueListTitle=\"Select the token to bet:\"\r\n                                userSuppliedValueTitle=\"Or enter the token address:\"\r\n                                predefinedValues={getTokenList()}\r\n                                defaultValue={pool.depositToken.token}\r\n                                isValidValue={isValidAddress}\r\n                                delay={400}\r\n                                onInput={async address => {\r\n                                    if (!Web3.utils.isAddress(address.toLowerCase())) {\r\n                                        setIsValidAddress(false);\r\n                                        console.log(`${address} is not a valid address.`);\r\n                                        return;\r\n                                    }\r\n\r\n                                    address = Web3.utils.toChecksumAddress(address);\r\n\r\n                                    setIsValidAddress(true);\r\n                                    setIsLoading(true);\r\n\r\n                                    try {\r\n                                        const results = await $.tokenFinder.findAll(address);\r\n\r\n                                        if (results.length == 0) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        const i = getMaxReservesIndex(results);\r\n                                        const t = results[i];\r\n\r\n                                        setSelectedToken(t);\r\n\r\n                                        const tokenPriceInDepositToken = await $.farm.getTokenPriceInDepositToken(t, pool);\r\n                                        setTokenPriceInDepositToken(tokenPriceInDepositToken);\r\n\r\n                                        const tokenPriceInStableToken = await $.iziSwap.getTokenPriceInStableToken(address, t.info.details.decimals, t.isLiquidityToken);\r\n                                        setTokenPriceInStableToken(tokenPriceInStableToken);\r\n                                    } catch (error) {\r\n                                        setSelectedToken(undefined);\r\n                                        console.error(\"Token selection error.\", error);\r\n                                    } finally {\r\n                                        setIsLoading(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        }\r\n                        <span className=\"text-[0.75em] font-medium text-right\">\r\n                            {isLoading\r\n                                ? (<span className=\"animate-pulse\">Fetching...</span>)\r\n                                : selectedToken ? `${getDepositTokenSymbol(selectedToken)} @ ${Configuration.getSwapRouterName($.chainId, selectedToken.info.router)}` : \"-\"\r\n                            }\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                        <div className=\"flex items-center justify-between leading-6\">\r\n                            <span className=\"input-label\">\r\n                                Amount:\r\n                                <span className=\"ml-1\">\r\n                                    (\r\n                                    <MainText\r\n                                        main={$.convert.formatPercentage(percentage)}\r\n                                        mainUnit=\"%\"\r\n                                        mainClassName=\"text-[0.875em]\"\r\n                                        mainUnitClassName=\"ml-0.5\"\r\n                                    />\r\n                                    )\r\n                                </span>\r\n                            </span>\r\n                            <span className=\"input-label\">\r\n                                Balance:\r\n                                <MainText\r\n                                    main={selectedToken ? $.convert.formatCurrency($.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals), selectedToken.info.details.decimals) : \"-\"}\r\n                                    mainUnit={selectedToken ? getDepositTokenSymbol(selectedToken) : \"-\"}\r\n                                    mainClassName=\"text-[0.875em] ml-1\"\r\n                                    mainUnitClassName=\"ml-0.5\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className={`${isLoading ? \"animate-pulse\" : \"\"}`}>\r\n                            <RangeInput\r\n                                isDisabled={isLoading}\r\n                                min={0}\r\n                                max={selectedToken ? $.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals) : 0}\r\n                                decimals={selectedToken ? Math.min(4, selectedToken.info.details.decimals) : 0}\r\n                                setValue={setAmount}\r\n                                setPercentage={setPercentage}\r\n                                valueClassName=\"text-indigo-900 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                                rangeClassName=\"accent-indigo-900\"\r\n                            />\r\n                            <div className=\"grid grid-cols-2 gap-x-2 mt-3\">\r\n                                <div className=\"justify-self-end\">\r\n                                    <MainText\r\n                                        main={$.convert.formatDepositToken(amount * tokenPriceInDepositToken, pool)}\r\n                                        mainUnit={$.farm.getDepositTokenSymbol(pool)}\r\n                                        mainClassName=\"text-[0.875em]\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"justify-self-start\">\r\n                                    <MainText\r\n                                        main={$.convert.formatStableToken(amount * tokenPriceInStableToken)}\r\n                                        mainUnit={$.contracts.stableToken.symbol}\r\n                                        mainClassName=\"text-[0.875em]\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            title={title}\r\n            info={(<StyledPopover isTooltip={true} children={tooltipDescriptionText} icon=\"bi-info\" />)}\r\n            submitButtonText={submitButtonText}\r\n            isSubmitButtonDisabled={isLoading || amount <= 0}\r\n            submitted={async () => {\r\n                const depositTokenAmountInWei = $.convert.toWei(amount * tokenPriceInDepositToken, pool.depositToken.details.decimals);\r\n                await submitted(selectedToken, amount, depositTokenAmountInWei);\r\n            }}\r\n            canceled={canceled}\r\n        />\r\n    );\r\n\r\n    function getMaxReservesIndex(results) {\r\n        if (results.length == 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let maxIndex;\r\n        let maxValue;\r\n\r\n        for (let i = 0; i < results.length; ++i) {\r\n            const reserve0 = $.convert.fromWei(results[i].reserveInfo.reserve0, results[i].info.details.decimals);\r\n            const reserve1 = $.convert.fromWei(results[i].reserveInfo.reserve1, results[i].info.details.decimals);\r\n\r\n            // Selected token's reserve is always returned as reserve0.\r\n            const price = reserve1 / reserve0;\r\n            const k = reserve0 * reserve1;\r\n\r\n            if (!maxValue || k > maxValue) {\r\n                maxIndex = i;\r\n                maxValue = k;\r\n            }\r\n        }\r\n\r\n        return maxIndex;\r\n    }\r\n\r\n    function getTokenList() {\r\n        const items = [\r\n            (<option key={\"\"} value=\"\">- Not in list -</option>),\r\n        ];\r\n\r\n        if (!tokens.map(t => t.token_address).includes(pool.depositToken.token)) {\r\n            items.push((<option key={pool.depositToken.token} value={pool.depositToken.token}>{$.farm.getDepositTokenSymbol(pool)}</option>));\r\n        }\r\n\r\n        tokens.forEach(token => {\r\n            items.push((<option key={token.token_address} value={token.token_address}>{token.symbol}</option>));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    function getDepositTokenSymbol(token) {\r\n        return token.isLiquidityToken ? `${token.token0Details.symbol}/${token.token1Details.symbol}` : token.info.details.symbol;\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport $ from \"../core/Services\";\r\n\r\nimport { MainText } from \"../../InfoBox\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\nimport RangeInput from \"./core/RangeInput\";\r\n\r\nexport default function AmountSelectionDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    title,\r\n    submitButtonText,\r\n    submitted,\r\n    canceled,\r\n    balance,\r\n    priceInStableToken,\r\n    decimals\r\n}) {\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <div className=\"flex items-center justify-between input-label\">\r\n                        <span>\r\n                            Amount: (<span className=\"numeric\">{$.convert.formatPercentage(percentage)}%</span>)\r\n                        </span>\r\n                        <span>\r\n                            Balance: <span className=\"numeric\">{$.convert.formatCurrency(balance, decimals)}</span>\r\n                        </span>\r\n                    </div>\r\n                    <RangeInput\r\n                        min={0}\r\n                        max={balance}\r\n                        decimals={decimals}\r\n                        setValue={setAmount}\r\n                        setPercentage={setPercentage}\r\n                        valueClassName=\"text-indigo-900 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                        rangeClassName=\"accent-indigo-900\"\r\n                    />\r\n                    <div className=\"mt-3 text-center\">\r\n                        <MainText\r\n                            main={priceInStableToken ? $.convert.formatMainToken(amount * priceInStableToken) : \"-\"}\r\n                            mainUnit={$.contracts.stableToken.symbol}\r\n                            mainClassName=\"text-[0.875em]\" />\r\n                    </div>\r\n                </>\r\n            )}\r\n            title={title}\r\n            submitButtonText={submitButtonText}\r\n            submitted={() => submitted(amount)}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\n\r\nimport { WalletContext } from \"../../contexts/WalletContext\";\r\n\r\nimport { createSignerContract } from \"./core/Contracts\";\r\nimport $ from \"./core/Services\";\r\n\r\nimport IERC20 from \"./abi/IERC20.json\";\r\nimport IUniswapV2Pair from \"./abi/IUniswapV2Pair.json\";\r\n\r\nimport Token from \"./Token\";\r\nimport Swap from \"./Swap\";\r\nimport Transfer from \"./Transfer\";\r\nimport TokenCalculators from \"./TokenCalculators\";\r\nimport Game from \"./Game\";\r\nimport FarmPools from \"./FarmPools\";\r\nimport FarmLiquidatables from \"./FarmLiquidatables\";\r\n\r\nimport BuyCryptoDialog from \"./dialogs/BuyCryptoDialog\";\r\nimport SwapDialog from \"./dialogs/SwapDialog\";\r\nimport ApproveRouterDialog from \"./dialogs/ApproveRouterDialog\";\r\nimport ApproveHarvesterDialog from \"./dialogs/ApproveHarvesterDialog\";\r\nimport GameBetDialog from \"./dialogs/GameBetDialog\";\r\nimport ApproveFarmDialog from \"./dialogs/ApproveFarmDialog\";\r\nimport FarmDepositDialog from \"./dialogs/FarmDepositDialog\";\r\nimport AmountSelectionDialog from \"./dialogs/AmountSelectionDialog\";\r\n\r\nimport { ShowComponentType } from \"./Enums\";\r\n\r\nexport default class Main extends Component {\r\n    static propTypes = {\r\n        interval: PropTypes.number\r\n    }\r\n\r\n    static defaultProps = {\r\n        interval: undefined /* will force avg. block time calculation */,\r\n        showComponent: ShowComponentType.Token\r\n    };\r\n\r\n    static contextType = WalletContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            blockTime: undefined,\r\n            tokenPriceInStableToken: undefined,\r\n            tokenPriceInNativeToken: undefined,\r\n            nativeTokenPriceInStableToken: undefined,\r\n            token: undefined,\r\n            games: undefined,\r\n            farm: undefined,\r\n\r\n            showBuyCryptoDialog: false,\r\n            showSwapDialog: false,\r\n            showRouterApproveDialog: {\r\n                show: false,\r\n                callback: null\r\n            },\r\n            showGameApproveDialog: {\r\n                show: false,\r\n                callback: null\r\n            },\r\n            showGameHarvestDialog: {\r\n                show: false,\r\n                balance: 0,\r\n                callback: null\r\n            },\r\n            showGameCompoundDialog: {\r\n                show: false,\r\n                gameId: -1,\r\n                balance: 0,\r\n                callback: null\r\n            },\r\n            showGameBetDialog: {\r\n                show: false,\r\n                gameId: -1,\r\n                balance: 0,\r\n                callback: null\r\n            },\r\n            showFarmApproveDialog: {\r\n                show: false,\r\n                callback: null\r\n            },\r\n            showFarmDepositDialog: {\r\n                show: false,\r\n                symbol: null,\r\n                balance: 0,\r\n                depositTokenPriceInStableToken: 0,\r\n                callback: null\r\n            },\r\n            showFarmWithdrawDialog: {\r\n                show: false,\r\n                symbol: null,\r\n                balance: 0,\r\n                creditTokenPriceInStableToken: 0,\r\n                callback: null\r\n            },\r\n\r\n            showToken: (props.showComponent & ShowComponentType.Token) === ShowComponentType.Token,\r\n            showGames: (props.showComponent & ShowComponentType.Games) === ShowComponentType.Games,\r\n            showFarms: (props.showComponent & ShowComponentType.Farms) === ShowComponentType.Farms,\r\n            showLiquidatables: (props.showComponent & ShowComponentType.Liquidatables) === ShowComponentType.Liquidatables,\r\n        }\r\n\r\n        this.blockLength = 10;\r\n\r\n        this.onTick = this.onTick.bind(this);\r\n\r\n        this.showComponent = this.showComponent.bind(this);\r\n\r\n        this.swap = this.swap.bind(this);\r\n        this.harvestPendingReward = this.harvestPendingReward.bind(this);\r\n        this.gameBet = this.gameBet.bind(this);\r\n        this.gameCompound = this.gameCompound.bind(this);\r\n        this.farmDeposit = this.farmDeposit.bind(this);\r\n        this.farmWithdraw = this.farmWithdraw.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n\r\n        if (this.props.showComponent != prevProps.showComponent) {\r\n            this.showComponent(this.props.showComponent);\r\n        }\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (this.context.chainId /*&& this.context.account #to make the reader work with disconnected account, at least to get the price*/) {\r\n                if (this.context.reader) {\r\n                    $.init(this.context);\r\n\r\n                    if (!this.timerId) {\r\n                        const blockTime = this.props.interval ?? (await $.block.getAverageBlockTime(this.blockLength) * 1000);\r\n                        this.startTimer(blockTime);\r\n\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                if (this.context.signer) {\r\n                    $.init(this.context);\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    startTimer(blockTime) {\r\n        this.timerId = setInterval(async () => await this.onTick(), blockTime);\r\n        console.log(`Started timer: ${this.timerId}; Interval: ${blockTime} ms`);\r\n    }\r\n\r\n    stopTimer() {\r\n        const timerId = this.timerId;\r\n\r\n        if (timerId) {\r\n            clearInterval(timerId);\r\n            this.timerId = undefined;\r\n\r\n            console.log(`Stopped timer: ${timerId}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHomePage = !this.state.showGames && !this.state.showFarms && !this.state.showLiquidatables;\r\n\r\n        return (\r\n            <main className=\"mt-3 grid grid-cols-1 gap-y-10 mx-auto\">\r\n                {(this.state.showToken && this.state.token)\r\n                    ? <Fragment key={\"token\"}>\r\n                        <Token\r\n                            showCompact={true}\r\n                            showHeader={isHomePage}\r\n                            showHarvestButton={isHomePage || this.state.showGames}\r\n                            token={this.state.token}\r\n                            priceInNativeToken={this.state.tokenPriceInNativeToken}\r\n                            priceInStableToken={this.state.tokenPriceInStableToken}\r\n                            harvestPendingReward={this.harvestPendingReward}\r\n                            blockTime={this.state.blockTime}\r\n                        />\r\n                    </Fragment>\r\n                    : this.state.showToken && <Spinner title=\"Loading token snapshot\" />\r\n                }\r\n\r\n                {!isHomePage &&\r\n                    <div className=\"flex items-center justify-between gap-x-5\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className={`min-w-fit w-fit h-9 px-3 ${this.state.showToken ? \"-my-5\" : \"\"} font-semibold btn btn-indigo text-[80%]`}\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    showBuyCryptoDialog: true\r\n                                });\r\n                            }}\r\n                        >\r\n                            Buy Crypto <i className=\"bi bi-credit-card\" />\r\n                        </button>\r\n\r\n                        {this.state.token &&\r\n                            <button\r\n                                type=\"button\"\r\n                                className={`min-w-fit w-fit h-9 px-3 ${this.state.showToken ? \"-my-5\" : \"\"} font-semibold btn btn-rose text-[80%]`}\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        showSwapDialog: true\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Buy {$.contracts.token.symbol}\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {(this.state.showToken && isHomePage) && this.state.token && this.state.tokenPriceInNativeToken && this.state.tokenPriceInStableToken &&\r\n                    <>\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-5 gap-y-10\">\r\n                            <div className={`card bg-weeb-card1/20 bg-diagonal-lines`}>\r\n                                <Swap\r\n                                    nativeCoinBalance={this.context.balance}\r\n                                    token={this.state.token}\r\n                                    nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                                    swap={async (amount, minReceived, recipient, isBuy) => {\r\n                                        try {\r\n                                            await this.swap(amount, minReceived, recipient, isBuy);\r\n                                        } catch (error) {\r\n                                            alert(JSON.stringify(error));\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className={`card bg-weeb-card1/20 bg-diagonal-lines`}>\r\n                                <Transfer\r\n                                    balance={$.convert.fromWeiMainToken(this.state.token.senderFreeBalance)}\r\n                                    transfer={async (recipient, amount) => {\r\n                                        try {\r\n                                            await $.token.transfer(recipient, amount);\r\n                                        } catch (error) {\r\n                                            alert(JSON.stringify(error));\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-1 gap-y-5\">\r\n                            <div className=\"flex items-center justify-center group-title opacity-75 light-box h-9 px-2\">\r\n                                <span>Calculators</span>\r\n                            </div>\r\n                            <TokenCalculators\r\n                                token={this.state.token}\r\n                                priceInNativeToken={this.state.tokenPriceInNativeToken}\r\n                                priceInStableToken={this.state.tokenPriceInStableToken}\r\n                                blockTime={this.state.blockTime}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                }\r\n                {((this.state.showGames && this.state.showToken) && this.state.token && this.state.games)\r\n                    ? <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-x-5 gap-y-10\">\r\n                        {this.getGameCards()}\r\n                    </div>\r\n                    : (this.state.showGames && this.state.showToken) && <Spinner type=\"cloud\" />\r\n                }\r\n                {(this.state.showFarms && this.state.token && this.state.farm)\r\n                    ? <FarmPools\r\n                        farm={this.state.farm}\r\n                        nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                        deposit={this.farmDeposit}\r\n                        withdraw={this.farmWithdraw}\r\n                        blockTime={this.state.blockTime}\r\n                    />\r\n                    : this.state.showFarms && <Spinner type=\"cloud\" />\r\n                }\r\n                {(this.state.showLiquidatables && this.state.token && this.state.farmLiquidatables)\r\n                    ? <Fragment key={\"farmLiquidatables\"}>\r\n                        <FarmLiquidatables\r\n                            farm={this.state.farmLiquidatables}\r\n                            nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                            blockTime={this.state.blockTime}\r\n                            buyWeeb={this.farmBuyWeebInternal}\r\n                        />\r\n                    </Fragment>\r\n                    : this.state.showLiquidatables && <Spinner type=\"cloud\" />\r\n                }\r\n                {this.state.showBuyCryptoDialog &&\r\n                    <BuyCryptoDialog\r\n                        isOpen={this.state.showBuyCryptoDialog}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showBuyCryptoDialog: false\r\n                            });\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showBuyCryptoDialog: false\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showSwapDialog &&\r\n                    <SwapDialog\r\n                        isOpen={this.state.showSwapDialog}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showSwapDialog: false\r\n                            });\r\n                        }}\r\n                        nativeCoinBalance={this.context.balance}\r\n                        token={this.state.token}\r\n                        nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                        swap={async (amount, minReceived, recipient, isBuy) => {\r\n                            try {\r\n                                await this.swap(amount, minReceived, recipient, isBuy);\r\n                            } catch (error) {\r\n                                alert(JSON.stringify(error));\r\n                            }\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showSwapDialog: false\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showRouterApproveDialog.show &&\r\n                    <ApproveRouterDialog\r\n                        isOpen={this.state.showRouterApproveDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showRouterApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        submitted={async () => {\r\n                            const callback = this.state.showRouterApproveDialog.callback;\r\n                            this.setState({\r\n                                showRouterApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback();\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showRouterApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showGameApproveDialog.show &&\r\n                    <ApproveHarvesterDialog\r\n                        isOpen={this.state.showGameApproveDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        submitted={async () => {\r\n                            const callback = this.state.showGameApproveDialog.callback;\r\n                            this.setState({\r\n                                showGameApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback();\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showGameHarvestDialog.show &&\r\n                    <GameBetDialog\r\n                        isOpen={this.state.showGameHarvestDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameHarvestDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title=\"Harvest Pending Reward\"\r\n                        submitButtonText=\"Harvest\"\r\n                        submitted={async (gameId, selectedToken, amount, outcome, tokenInfo) => {\r\n                            const callback = this.state.showGameHarvestDialog.callback;\r\n                            this.setState({\r\n                                showGameHarvestDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(gameId, outcome);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameHarvestDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        games={this.state.games}\r\n                        defaultGameId={\"0\"}\r\n                        defaultOutcome={\"0\"}\r\n                        balance={this.state.showGameHarvestDialog.balance}\r\n                        enableGameSelection={true}\r\n                        enableAmountEntry={false}\r\n                        token={this.state.token}\r\n                    />\r\n                }\r\n                {this.state.showGameCompoundDialog.show &&\r\n                    <GameBetDialog\r\n                        isOpen={this.state.showGameCompoundDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameCompoundDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title=\"Compound / Bet the Prize\"\r\n                        submitButtonText=\"Bet\"\r\n                        submitted={async (gameId, selectedToken, amount, outcome, tokenInfo) => {\r\n                            const callback = this.state.showGameCompoundDialog.callback;\r\n                            this.setState({\r\n                                showGameCompoundDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(gameId, outcome);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameCompoundDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        games={this.state.games}\r\n                        defaultGameId={this.state.showGameCompoundDialog.gameId}\r\n                        defaultOutcome={0}\r\n                        balance={this.state.showGameCompoundDialog.balance}\r\n                        enableGameSelection={false}\r\n                        enableAmountEntry={false}\r\n                        token={this.state.token}\r\n                    />\r\n                }\r\n                {this.state.showGameBetDialog.show &&\r\n                    <GameBetDialog\r\n                        isOpen={this.state.showGameBetDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameBetDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title=\"Place a Bet\"\r\n                        submitButtonText=\"Bet\"\r\n                        submitted={async (gameId, selectedToken, amount, outcome, tokenInfo) => {\r\n                            const callback = this.state.showGameBetDialog.callback;\r\n                            this.setState({\r\n                                showGameBetDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(gameId, selectedToken, amount, outcome, tokenInfo);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameBetDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        games={this.state.games}\r\n                        defaultGameId={this.state.showGameBetDialog.gameId}\r\n                        defaultOutcome={0}\r\n                        balance={this.state.showGameBetDialog.balance}\r\n                        enableGameSelection={false}\r\n                        enableAmountEntry={true}\r\n                        token={this.state.token}\r\n                    />\r\n                }\r\n                {this.state.showFarmApproveDialog.show &&\r\n                    <ApproveFarmDialog\r\n                        isOpen={this.state.showFarmApproveDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showFarmApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        submitted={async () => {\r\n                            const callback = this.state.showFarmApproveDialog.callback;\r\n                            this.setState({\r\n                                showFarmApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback();\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showFarmApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showFarmDepositDialog.show &&\r\n                    <FarmDepositDialog\r\n                        isOpen={this.state.showFarmDepositDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showFarmDepositDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title={`Deposit (${this.state.showFarmDepositDialog.symbol})`}\r\n                        submitButtonText=\"Deposit\"\r\n                        submitted={async (selectedToken, selectedTokenAmount, depositTokenAmountInWei) => {\r\n                            const callback = this.state.showFarmDepositDialog.callback;\r\n                            this.setState({\r\n                                showFarmDepositDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(selectedToken, selectedTokenAmount, depositTokenAmountInWei);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showFarmDepositDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        pool={this.state.showFarmDepositDialog.pool}\r\n\r\n                    />\r\n                }\r\n                {this.state.showFarmWithdrawDialog.show &&\r\n                    <AmountSelectionDialog\r\n                        isOpen={this.state.showFarmWithdrawDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showFarmWithdrawDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title={`Withdraw (${this.state.showFarmWithdrawDialog.symbol})`}\r\n                        submitButtonText=\"Withdraw\"\r\n                        submitted={async (amount) => {\r\n                            const callback = this.state.showFarmWithdrawDialog.callback;\r\n                            this.setState({\r\n                                showFarmWithdrawDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(amount);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showFarmWithdrawDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        balance={this.state.showFarmWithdrawDialog.balance}\r\n                        priceInStableToken={this.state.showFarmWithdrawDialog.creditTokenPriceInStableToken}\r\n                        decimals={4}\r\n                    />\r\n                }\r\n            </main>\r\n        );\r\n    }\r\n\r\n    async onTick() {\r\n        try {\r\n            const [\r\n                blockTime,\r\n                tokenPriceInStableToken,\r\n                nativeTokenPriceInStableToken,\r\n                reserves,\r\n                token,\r\n                games,\r\n                farm,\r\n                farmLiquidatables\r\n            ] = await Promise.all([\r\n                $.block.getAverageBlockTime(this.blockLength),\r\n                $.router.getMainTokenPriceInStableToken(),\r\n                $.router.getNativeTokenPriceInStableToken(),\r\n                $.pair.getMainTokenReserves(),\r\n                $.token.getTokenSnapshot(),\r\n                this.state.showToken ? $.game.getSnapshots(1) : Promise.resolve(undefined),\r\n                this.state.showFarms ? $.farm.getSnapshot(1) : Promise.resolve(undefined),\r\n                this.state.showLiquidatables ? $.farm.getLiquidatablesSnapshot(255/*All*/) : Promise.resolve(undefined)\r\n            ]);\r\n\r\n            let map;\r\n\r\n            if (this.state.showToken) {\r\n                map = new Map();\r\n\r\n                for (let i = 0; i < games.length; ++i) {\r\n                    map.set(games[i].gameId, games[i]);\r\n                    // if (games[i].isEnabled === true && equals(games[i].tokenInfo.token, $.contracts.token.address)) {\r\n                    //     map.set(i, games[i]);\r\n                    // }\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                blockTime,\r\n                tokenPriceInStableToken,\r\n                tokenPriceInNativeToken: reserves.nativeTokenReserve / reserves.tokenReserve,\r\n                nativeTokenPriceInStableToken,\r\n                token: {\r\n                    ...token,\r\n                    contractAddress: $.contracts.token.address,\r\n                    tokenReserve: reserves.tokenReserve,\r\n                    nativeTokenReserve: reserves.nativeTokenReserve,\r\n                    ...$.pair.getMainTokenInitialReserves()\r\n                },\r\n                games: map,\r\n                farm: this.state.showFarms ? farm : undefined,\r\n                farmLiquidatables: this.state.showLiquidatables ? farmLiquidatables : undefined\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    showComponent(componentType) {\r\n        this.setState({\r\n            showToken: (componentType & ShowComponentType.Token) === ShowComponentType.Token,\r\n            showGames: (componentType & ShowComponentType.Games) === ShowComponentType.Games,\r\n            showFarms: (componentType & ShowComponentType.Farms) === ShowComponentType.Farms,\r\n            showLiquidatables: (componentType & ShowComponentType.Liquidatables) === ShowComponentType.Liquidatables\r\n        });\r\n    }\r\n\r\n    // Content generators\r\n    getGameCards() {\r\n        const balance = $.convert.fromWeiNativeToken(this.state.token.senderFreeBalance);\r\n        const items = [];\r\n\r\n        this.state.games.forEach(game => {\r\n            items.push((\r\n                <div key={game.gameId} className=\"max-h-full\">\r\n                    <Game\r\n                        game={game}\r\n                        balance={balance}\r\n                        priceInStableToken={this.state.tokenPriceInStableToken}\r\n                        bet={() => this.gameBet(game.gameId)}\r\n                        compound={() => this.gameCompound(game.gameId)}\r\n                        claim={() => $.game.claim(game.gameId)}\r\n                        senderPoolSnapshots={(offset, count) => $.game.getSenderPoolSnapshots(game.gameId, offset, count)}\r\n                        blockTime={this.state.blockTime}\r\n                    />\r\n                </div>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    // Actions\r\n    async swap(amount, minReceived, recipient, isBuy) {\r\n        if (isBuy) {\r\n            await $.router.swapNativeTokenForMainToken(amount, minReceived, recipient);\r\n        } else {\r\n            if (await $.token.isAllowanceSatisfied($.readers.router.options.address, $.convert.toWeiMainToken(amount))) {\r\n                await $.router.swapMainTokenForNativeToken(amount, minReceived, recipient);\r\n\r\n                return;\r\n            }\r\n\r\n            const callback = async () => {\r\n                if (!(await $.token.isAllowanceSatisfied($.readers.router.options.address, $.convert.toWeiMainToken(amount)))) {\r\n                    await $.token.approveRouter();\r\n                }\r\n\r\n                await $.router.swapMainTokenForNativeToken(amount, minReceived, recipient);\r\n            };\r\n\r\n            this.setState({\r\n                showRouterApproveDialog: {\r\n                    show: true,\r\n                    callback\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async harvestPendingReward() {\r\n        if (this.state.token.isDirectlyHarvestable) {\r\n            await $.token.harvestPendingReward();\r\n        } else {\r\n            if (!this.state.games || this.state.games.size === 0) {\r\n                console.log(\"No game found.\");\r\n                return;\r\n            }\r\n\r\n            const callback = async (gameId, outcome) => {\r\n                if (!(await $.game.isAllowanceSatisfied(this.state.token.senderPendingReward))) {\r\n                    this.setState({\r\n                        showGameApproveDialog: {\r\n                            show: true,\r\n                            callback: async () => {\r\n                                await $.token.approveGame();\r\n                                await $.game.harvestPendingReward(gameId, outcome);\r\n\r\n                                this.showComponent(ShowComponentType.Token | ShowComponentType.Games);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    await $.game.harvestPendingReward(gameId, outcome);\r\n\r\n                    this.showComponent(ShowComponentType.Token | ShowComponentType.Games);\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                showGameHarvestDialog: {\r\n                    show: true,\r\n                    balance: $.convert.fromWeiMainToken(this.state.token.senderFreeBalance),\r\n                    callback\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async gameBet(selectedGameId) {\r\n        const callback = async (gameId, sourceToken, sourceAmount, outcome, gameTokenInfo) => {\r\n            if (!(await $.game.isAllowanceSatisfied(this.state.token.senderPendingReward))) {\r\n                this.setState({\r\n                    showGameApproveDialog: {\r\n                        show: true,\r\n                        callback: async () => {\r\n                            await $.token.approveGame();\r\n                            await $.game.bet(gameId, sourceToken, sourceAmount, outcome, gameTokenInfo);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                await $.game.bet(gameId, sourceToken, sourceAmount, outcome, gameTokenInfo);\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            showGameBetDialog: {\r\n                show: true,\r\n                gameId: selectedGameId,\r\n                balance: $.convert.fromWeiMainToken(this.state.token.senderFreeBalance),\r\n                callback\r\n            }\r\n        });\r\n    }\r\n\r\n    async gameCompound(selectedGameId) {\r\n        const callback = async (gameId, outcome) => {\r\n            if (!(await $.game.isAllowanceSatisfied(this.state.token.senderPendingReward))) {\r\n                this.setState({\r\n                    showGameApproveDialog: {\r\n                        show: true,\r\n                        callback: async () => {\r\n                            await $.token.approveGame();\r\n                            await $.game.compound(gameId, outcome);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                await $.game.compound(gameId, outcome);\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            showGameCompoundDialog: {\r\n                show: true,\r\n                gameId: selectedGameId,\r\n                balance: $.convert.fromWeiMainToken(this.state.token.senderFreeBalance),\r\n                callback\r\n            }\r\n        });\r\n    }\r\n\r\n    async farmDeposit(selectedPoolId, depositTokenPriceInStableToken) {\r\n        const pool = this.state.farm.pools[selectedPoolId];\r\n\r\n        const callback = async (selectedToken, selectedTokenAmount, depositTokenAmountInWei) => {\r\n            if (!(await $.farm.isAllowanceSatisfied(pool, depositTokenAmountInWei))) {\r\n                this.setState({\r\n                    showFarmApproveDialog: {\r\n                        show: true,\r\n                        callback: async () => {\r\n                            const signer = createSignerContract($.signer, pool.isLiquidityToken ? IUniswapV2Pair : IERC20, pool.depositToken.token, { from: $.account });\r\n\r\n                            await $.farm.approveFarm(signer);\r\n                            await $.farm.deposit(selectedPoolId, selectedToken, selectedTokenAmount, pool);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                await $.farm.deposit(selectedPoolId, selectedToken, selectedTokenAmount, pool);\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            showFarmDepositDialog: {\r\n                show: true,\r\n                symbol: $.farm.getDepositTokenSymbol(pool),\r\n                balance: $.convert.fromWei(pool.senderBalance, pool.depositToken.details.decimals),\r\n                depositTokenPriceInStableToken,\r\n                pool,\r\n                callback\r\n            }\r\n        });\r\n    }\r\n\r\n    async farmWithdraw(selectedPoolId, creditTokenPriceInStableToken) {\r\n        const pool = this.state.farm.pools[selectedPoolId];\r\n\r\n        const callback = async (amount) => {\r\n            const amountInWei = $.convert.toWei(amount, this.state.farm.creditToken.details.decimals);\r\n            await $.farm.withdraw(selectedPoolId, amountInWei);\r\n        };\r\n\r\n        this.setState({\r\n            showFarmWithdrawDialog: {\r\n                show: true,\r\n                symbol: $.farm.getDepositTokenSymbol(pool),\r\n                balance: $.convert.fromWei(pool.senderPosition.credited, this.state.farm.creditToken.details.decimals),\r\n                creditTokenPriceInStableToken,\r\n                callback\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Routes as BrowserRoutes, Route } from \"react-router-dom\";\r\n\r\nimport Main from \"./dapp/Main\";\r\nimport { ShowComponentType } from \"./dapp/Enums\";\r\n\r\n// export function Token() {\r\n//     return (<Main showComponent={ShowComponentType.Token} />);\r\n// }\r\n\r\n// export function Games() {\r\n//     return (<Main showComponent={ShowComponentType.Token | ShowComponentType.Games} />);\r\n// }\r\n\r\n// export function Farms() {\r\n//     return (<Main showComponent={ShowComponentType.Token | ShowComponentType.Farms} />);\r\n// }\r\n\r\n// export function Liquidatables() {\r\n//     return (<Main showComponent={ShowComponentType.Liquidatables} />);\r\n// }\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRoutes>\r\n            <Route path=\"/\" element={<Main showComponent={ShowComponentType.Token} />} />\r\n            <Route path=\"Games\" element={<Main showComponent={ShowComponentType.Token | ShowComponentType.Games} />} />\r\n            <Route path=\"Farms\" element={<Main showComponent={ShowComponentType.Token | ShowComponentType.Farms} />} />\r\n            <Route path=\"Liquidatables\" element={<Main showComponent={ShowComponentType.Liquidatables} />} />\r\n        </BrowserRoutes>\r\n    )\r\n}\r\n","export default function Footer() {\r\n    return (\r\n        <footer className=\"pt-12 pb-6\">\r\n            <div className=\"flex flex-row items-center justify-center space-x-10 text-[28px]\">\r\n                <a href=\"https://twitter.com/WeebFi\" target=\"_blank\">\r\n                    <i className=\"bi bi-twitter\"></i>\r\n                </a>\r\n                <a href=\"https://t.me/WeebFi\" target=\"_blank\">\r\n                    <i className=\"bi bi-telegram\"></i>\r\n                </a>\r\n                {/* <i class=\"bi bi-github\"></i>\r\n                <i class=\"bi bi-discord\"></i> */}\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport WalletProvider from \"./contexts/WalletContext\";\nimport Navbar from \"./components/Navbar\";\nimport Routes from \"./components/Routes\";\nimport Footer from \"./components/Footer\";\n\nimport { createClamps } from \"./utils/Utils\";\n\nfunction App() {\n  return (\n    // <pre>\n    //   {createClamps()}\n    // </pre>\n    <BrowserRouter>\n      <div className=\"lg:container mx-auto p-2 h-screen\">\n        <div className=\"bubble-set\">\n          <div className=\"bubble-lg\"></div>\n          <div className=\"bubble-md\"></div>\n          <div className=\"bubble-sm\"></div>\n        </div>\n        <WalletProvider>\n          <div className=\"flex flex-col justify-between h-full\">\n            <div className=\"lg:text-[18px]\">\n              <Navbar />\n              <Routes />\n            </div>\n            <Footer />\n          </div>\n        </WalletProvider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap-icons/font/bootstrap-icons.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}