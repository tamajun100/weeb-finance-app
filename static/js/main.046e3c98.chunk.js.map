{"version":3,"sources":["utils/Web3Converter.js","Configuration.js","contexts/WalletContext.js","utils/Format.js","components/dapp/dialogs/core/ModalDialog.js","components/InfoBox.js","components/dapp/dialogs/WalletDialog.js","components/dapp/dialogs/ConnectDialog.js","components/Wallet.js","components/Links.js","components/Navbar.js","Spinner.js","components/dapp/core/Contracts.js","utils/Utils.js","components/dapp/core/Services.js","utils/InterestExtensions.js","components/StyledPopover.js","components/dapp/Enums.js","components/dapp/Token.js","utils/PriceExtensions.js","components/dapp/dialogs/core/RangeInput.js","components/dapp/dialogs/core/DelayedInput.js","components/dapp/Swap.js","components/dapp/Transfer.js","components/dapp/InflowOutflowCalculator.js","components/dapp/TargetPriceCalculator.js","components/dapp/RewardCalculator.js","components/dapp/TokenCalculators.js","components/dapp/GameExtensions.js","components/dapp/Game.js","components/dapp/FarmPoolExtensions.js","components/dapp/FarmPool.js","components/dapp/FarmPools.js","components/dapp/FarmLiquidatable.js","components/dapp/FarmLiquidatables.js","components/dapp/dialogs/BuyCryptoDialog.js","components/dapp/dialogs/SwapDialog.js","components/dapp/dialogs/ApproveRouterDialog.js","components/dapp/dialogs/ApproveHarvesterDialog.js","components/dapp/dialogs/OutcomeList.js","components/dapp/dialogs/GameList.js","components/dapp/dialogs/core/PredefinedValueSelector.js","components/dapp/dialogs/GameBetDialog.js","components/dapp/dialogs/ApproveFarmDialog.js","components/dapp/dialogs/FarmDepositDialog.js","components/dapp/dialogs/AmountSelectionDialog.js","components/dapp/Main.js","components/dapp/Test.js","components/Routes.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["BN","require","numberToBN","zero","negative1","getValueOfUnit","decimals","pow","numberToString","arg","match","Error","String","toString","toTwos","dividedToIntegerBy","toPrecision","module","exports","fromWei","weiInput","optionsInput","wei","negative","lt","base","baseLength","options","mul","fraction","mod","length","pad","whole","div","commify","replace","value","toWei","etherInput","ether","substring","comps","split","add","Configuration","appsettings","projectName","defaultChainId","parseFloat","percentageYieldInvestmentInStablecoin","slippageTolerance","moralisApiKey","chainId","chains","getChain","nativeCoin","contracts","getContracts","nativeToken","stableToken","swapRouters","defaultSwapRouter","address","getSwapRouters","name","swapFee","map","Map","Object","entries","key","parseInt","getChains","rpcUri","getRpcUris","blockExplorerLink","getBlockExplorerLinks","initialLiquidity","WalletContext","React","createContext","WalletProvider","props","state","self","balance","setBalance","b","setState","disconnect","bind","isInjectedProviderInstalled","getProvider","initializeProvider","initializeWalletConnectProvider","handleChainChanged","handleAccountsChanged","handleChainChangedInternal","handleDisconnect","addEthereumChain","switchOrAddEthereumChain","a","isMobileDevice","test","navigator","userAgent","this","initializeInjectedProvider","getDefaultChainId","signer","givenProvider","unsubscribeProvider","Provider","children","account","undefined","window","ethereum","web3","currentProvider","provider","createWeb3","subscribeProvider","request","method","hexChainId","accounts","error","console","log","WalletConnectProvider","rpc","qrcode","connector","on","err","payload","uri","params","enable","walletMeta","code","message","removeListener","reader","getRpcUri","isSupportedChain","updateReader","Web3","utils","hexToNumber","connected","reason","source","close","then","catch","chainName","nativeCurrencyName","nativeCurrencySymbol","nativeCurrencyDecimals","rpcUrls","blockExplorerUrls","iconUrls","isHex","numberToHex","p","nativeCurrency","symbol","isHexStrict","eth","extend","methods","call","outputFormatter","Component","formatAccount","formatNumber","number","maxDecimals","minDecimals","result","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","format","formatInteger","formatPercentage","assert","formatNumberScaled","Math","min","formatCurrency","currencyDecimals","ModalDialog","style","size","isVerticallyCentered","isScrollable","fullscreen","isOpen","setIsOpen","disableBackgroundCancel","contentStyle","header","body","footer","title","hideTitle","info","hideCloseButton","description","submitButtonText","hideSubmitButton","isSubmitButtonDisabled","cancelButtonText","hideCancelButton","submitted","canceled","className","open","onClose","Overlay","Title","type","onClick","Description","disabled","TitleText","titleClassName","MainText","main","mainClassName","mainUnit","mainUnitClassName","isUnitOnTop","DetailText","detail","detailClassName","detailUnit","detailUnitClassName","InfoText","infoClassName","InfoBox","containerClassName","lineHeight","PriceBox","mainRaw","isMainUnitOnTop","defaultProps","WalletDialog","context","useState","qrCode","setQrCode","useEffect","QRCode","toDataURL","color","dark","light","url","chain","getNativeCoin","src","clipboard","writeText","ConnectDialog","href","target","Wallet","showWalletDialog","showConnectDialog","onTick","initialize","stopTimer","isInitializing","timerId","startTimer","setInterval","interval","clearInterval","getBalance","Links","to","activeclassname","Navbar","isNavbarCollapsed","setIsNavbarCollapsed","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","index","indexOf","parts","delimiter","i","getRoot","location","contextType","Spinner","cx","cy","r","role","createReaderContract","abi","Contract","createSignerContract","MAX_UINT256","contains","str1","str2","RegExp","sleep","ms","Promise","resolve","setTimeout","promisify","inner","reject","res","waitMined","txHash","cb","getTransactionReceipt","receipt","init","readers","from","pair","IUniswapV2Pair","liquidityToken","router","IUniswapV2Router02","token","WeebToken","game","WeebGame","farm","WeebFarm","tokenFinder","TokenFinder","iziSwap","IziSwap","createReaders","signers","createSigners","settings","slippageToleranceKey","getSlippageTolerance","localStorage","getItem","setSlippageTolerance","setItem","getTokenListUri","toHex","convert","formatDateTime","date","Date","toISOString","formatTimespan","timespan","h","m","s","hh","mm","ss","fromWeiNativeCoin","fromWeiNativeToken","fromWeiStableToken","fromWeiMainToken","trimToDecimals","toFixed","count","substr","toWeiNativeCoin","toWeiNativeToken","toWeiStableToken","toWeiMainToken","pool","depositToken","details","_format","formatToken","block","getBlock","blockId","getAverageBlockTime","blockF","now","blockI","blockTime","timestamp","getTokenReserves","tokenAddress","isTokenFirst","toBN","cmp","getReserves","reserves","tokenReserve","reserve0","nativeTokenReserve","reserve1","getMainTokenReserves","getMainTokenInitialReserves","getInitialLiquidity","initialTokenReserve","initialNativeTokenReserve","quote","sourceRouter","sourceToken","isSourceLiquidityToken","sourceTokenAmount","targetRouter","targetToken","isTargetLiquidityToken","swap","deadline","amountOutMin","send","getTokenPriceInStableToken","isLiquidityToken","depositRouter","getDefaultSwapRouter","creditRouter","amount","getTokenPriceInMainToken","getAmountsOut","amounts","getMainTokenPriceInStableToken","getNativeTokenPriceInStableToken","getMainTokenAmountFromNativeCoin","nativeCoinAmountIn","getNativeCoinAmountFromMainToken","mainTokenAmountIn","swapNativeTokenForMainToken","tokenAmountOutMin","recipient","swapExactETHForTokensSupportingFeeOnTransferTokens","swapMainTokenForNativeToken","amountNativeTokenOutMin","swapExactTokensForETHSupportingFeeOnTransferTokens","balanceOf","IERC20","transfer","getAllowance","owner","spender","allowance","getTokenSnapshot","senderTokenSnapshot","harvestPendingReward","approveRouter","approve","approveGame","isAllowed","minAmount","eq","isAllowanceSatisfied","getSnapshots","isEnabled","senderGameSnapshots","getSenderBetPoolCount","gameId","senderBetPoolCount","getSenderPoolSnapshots","offset","senderPoolSnapshots","getSenderBetPools","senderBetPools","betMainToken","outcome","bet","sourceAmount","gameTokenInfo","sourceAmountInWei","amountOut","amountMin","compound","claim","getDepositTokenSymbol","token0Details","token1Details","conversionRateOf","deposit","creditToken","approveFarm","getSnapshot","senderFarmSnapshot","getLiquidatablesSnapshot","senderFarmLiquidatablesSnapshot","REMOVE_deposit","poolId","withdraw","rebalance","liquidate","liquidateSenderUnchecked","liquidateAccount","investor","getTokenPriceInDepositToken","findAll","DAYS_IN_MONTH","DAYS_IN_YEAR","getDurationPercentageYield","rewardPerBlock","totalStaked","investment","duration","getRewardPerDay","_getRewardPerDay","getRewardPerDuration","StyledPopover","isTooltip","icon","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","styles","attributes","as","Button","ref","Panel","popper","ShowComponentType","freeze","All","Token","Games","Farms","Liquidatables","isDetailed","showCompact","showHeader","isInteractionDisabled","toggleDetailedVisibility","execute","nativeTokenPriceInStableToken","priceInStableToken","priceInNativeToken","swapRouterName","getSwapRouterName","$","tokenExplorerUri","getBlockExplorerLink","contractAddress","senderBalance","senderLockedBalance","senderFreeBalance","senderPendingReward","maximumSupply","initialSupply","totalSupply","senderBalanceShare","totalLockedSupply","senderStakeShare","supplyInContracts","supplyInNonrewardables","totalRewarded","totalTransacted","total","seigniorageFee","rate","seigniorageFeeCollected","collected","seignioryExplorerUri","seigniory","reducedEmissionHolderLimit","isRegularEmission","holders","baseRewardPerBlock","maximumRewardPerBlock","currentRewardPerBlock","transferBurnRate","salesBaseBurnRate","salesMaximumBurnRate","currentSalesBurnRate","rebatableBurnRate","rebateMaximizingShare","rebateShareStepsize","regulationInterval","regulationTimestamp","priceAverage","rewardMultiplier","burnMultiplier","senderRebateRate","senderTransferBurnRate","senderSalesBurnRate","senderTotalRebated","senderTotalBurnt","maxRewardPerD","maxRewardPerW","maxRewardPerM","maxRewardPerY","currentRewardPerD","currentRewardPerW","currentRewardPerM","currentRewardPerY","senderMaxRewardPerD","senderMaxRewardPerW","senderMaxRewardPerM","senderMaxRewardPerY","senderCurrentRewardPerD","senderCurrentRewardPerW","senderCurrentRewardPerM","senderCurrentRewardPerY","pendingPoolReward","rewardLastDistributedBlock","blocksFromRewardLastDistributed","currentBlock","senderTotalHarvested","totalRebated","totalBurnt","totalHarvested","valueInStableToken","getPercentageYieldInvestmentInStablecoin","cdpy","cwpy","cmpy","capy","tooltipTotalLockedSupplyText","tooltipRewardMaximizingHoldersText","tooltipSenderTotalRebatedText","tooltipSeigniorageFeeText","popoverSenderBalanceContent","formatMainToken","formatStableToken","popoverSenderTransferBurnRateContent","popoverSenderSalesBurnRateContent","popoverCurrentRewardPerBlockContent","borderBottom","lastHarvest","rel","formatNativeToken","isSenderNonrewardable","isDirectHarvestingEnabled","isSenderDirectHarvester","showHarvestButton","autoFocus","getActivity","isSenderNonburnable","isSenderSeignory","transfers","values","push","holder","func","getAmountOut","amount0In","RangeInput","isDisabled","max","percentages","valueClassName","rangeClassName","buttonClassName","setValue","setPercentage","setValueInternal","x","getStep","isNaN","updateValues","n","mx","mn","onValueChanged","e","v","step","onInput","list","items","percentage","setPercentageFormatted","sizeCount","getSelectablePercentages","DelayedInput","delay","id","defaultValue","placeholder","input","setInput","clearTimeout","autoComplete","onChange","Swap","isDarkTheme","nativeCoinBalance","Mode","Buy","Sell","showSlippageTolerance","setShowSlippageTolerance","setIsInteractionDisabled","mode","setMode","setAmount","setRecipient","maxReceived","setMaxReceived","minReceived","setMinReceived","maxPriceImpact","setMaxPriceImpact","minPriceImpact","setMinPriceImpact","tokenBalance","tokenPriceInNativeToken","getSwapRouterSwapFee","finalTokenPriceInNativeToken","Group","checked","Label","formatNativeCoin","htmlFor","isAddress","toLowerCase","Transfer","InflowOutflowCalculator","tokenPriceInStableToken","None","Inflow","Outflow","targetPrice","setTargetPrice","assetAmountRequired","setAssetAmountRequired","factor","quoteAssetAmountRequired","reserveQuoteAsset","sqrt","getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf","baseAssetAmountRequired","reserveBaseAsset","getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf","TargetPriceCalculator","assetAmount","setAssetAmount","outflowBaseAssetAmount","inflowQuoteAssetAmount","RewardCalculator","maxRewardPerBlock","isMaximizedEmission","targetBalance","setTargetBalance","currentRewards","setCurrentRewards","maxRewards","setMaxRewards","TokenCalculators","fromWeiToken","isInflationRegulated","card","getOutcomeText","outcomeCount","getOutcomeImage","width","height","getRandomizeText","Game","showLastBetPool","showSenderLastBetPool","isPoolTotalsVisibile","showYourBetHistory","isLoading","tokenInfo","toggleLastBetPoolVisibility","toggleSenderLastBetPoolVisibility","togglePoolTotalsVisibility","toggleYourBetHistoryVisibility","loadSenderBetPools","minimumBet","isPercentage","unclaimedBalance","senderUnclaimedPrizeBN","senderUnclaimedPrize","winningBet","prize","isPrizeClaimable","currentBetPoolWinningPrize","currentBetPool","statement","senderPrize","currentBetPoolPot","allAggregatedBets","blocksToDraw","currentPoolId","blockLength","timeToDraw","totalPlacedBets","totalPosition","placedBets","totalClaimedBets","claimedBets","totalClaimedPrizes","claimedPrizes","senderAggregatedBets","senderLosingBets","senderPnL","isWinner","popoverGameContent","isCurrentBetPoolSenderUnderWin","isSenderUnderWin","getBetInfo","lastBetPool","senderLastBetPool","getBetPool","betPool","blocksFromDraw","lastBetPoolPot","lastBetPoolWinningPrize","isUnderWin","isWinnerText","winningStatement","allWinningBets","allLosingBets","senderWinningBets","winningBets","losingBets","allBets","bets","sum","payouts","getPayoutOf","getOutcomeNames","getBetCounts","getBetAmounts","getPayouts","senderBets","colSpan","getPopoverWinningStatementAllBetsDetail","getAllBets","getPopoverWinningStatementSenderBetsDetail","getSenderBets","show","loadSenderBetPoolsInternal","remaining","pools","slice","getSupportedSwapRouterName","supportedSwapRouters","FarmPool","formatDepositToken","formatCreditToken","popoverFarmPoolRef","createRef","tooltipSeigniorageFeeRef","depositTokenPriceInStableToken","creditTokenPriceInStableToken","creditMultiplier","depositFeeRate","depositFee","creditLiquidationRate","liquidatorFeeRate","liquidatorFee","senderDeposited","senderPosition","deposited","senderCredited","credited","senderLiquidated","liquidated","senderCreditLiquidationLevel","creditLiquidationLevel","senderCurrentCredit","requiresRebalancing","totalDeposited","totalCredited","totalLiquidated","updatedBlockId","senderTimeFromUpdate","totalTimeFromUpdate","popoverFarmPoolContent","investorCount","infoText","fontSize","FarmPools","SortBy","CreditMultiplier","DepositFee","CreditLiquidationRate","LiquidatorFee","Credited","SortDirection","Ascending","Descending","TokenType","Single","Liquidity","activePools","setActivePools","filter","setFilter","sortBy","setSortBy","sortDirection","setSortDirection","tokenType","setTokenType","totalLiquidityProvided","totalCreditSupplied","reduce","found","supportedSwapRouterName","depositTokenSymbol","sort","y","onSortByChanged","onSortDirectionChanged","onTokenTypeChanged","forEach","getFarmPools","FarmLiquidatable","poolLiquidatable","totalLiquidity","totalLiquidatorFee","getPoolSelfTotals","fee","netLiquidatorFee","getFarmLiquidatables","investorLiquidatables","investorLiquidatable","isSelf","liquidity","liquidatables","liquidatable","prevState","FarmLiquidatables","poolLiquidatables","BuyCryptoDialog","frameBorder","allow","SwapDialog","ApproveRouterDialog","ApproveHarvesterDialog","OutcomeList","defaultOutcome","setOutcome","isActive","getOutcomeList","floor","random","GameList","games","defaultGameId","setGameId","unit","preventDefault","getGameList","PredefinedValueSelector","predefinedValueListTitle","userSuppliedValueTitle","predefinedValues","isValidValue","GameBetDialog","enableGameSelection","enableAmountEntry","tokens","setTokens","selectedToken","setSelectedToken","tokenPriceInMainToken","setTokenPriceInMainToken","setTokenPriceInStableToken","setIsLoading","isValidAddress","setIsValidAddress","get","tooltipHarvestDescriptionText","tooltipPlaceBetDescriptionText","fetch","headers","getMoralisApiKey","response","json","t","token_address","includes","getTokenList","toChecksumAddress","results","getMaxReservesIndex","maxIndex","maxValue","reserveInfo","k","ApproveFarmDialog","FarmDepositDialog","tokenPriceInDepositToken","setTokenPriceInDepositToken","tooltipDescriptionText","depositTokenAmountInWei","AmountSelectionDialog","Main","showBuyCryptoDialog","showSwapDialog","showRouterApproveDialog","callback","showGameApproveDialog","showGameHarvestDialog","showGameCompoundDialog","showGameBetDialog","showFarmApproveDialog","showFarmDepositDialog","showFarmWithdrawDialog","showToken","showComponent","showGames","showFarms","showLiquidatables","gameBet","gameCompound","farmDeposit","farmWithdraw","prevProps","isHomePage","isBuy","alert","JSON","stringify","getGameCards","farmLiquidatables","buyWeeb","farmBuyWeebInternal","selectedTokenAmount","all","set","componentType","isDirectlyHarvestable","selectedGameId","selectedPoolId","amountInWei","Test","executing","rpcUrl","ta","ts","td","ra","rx","Routes","path","element","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ymgCAEA,IAAIA,EAAKC,EAAQ,IACbC,EAAaD,EAAQ,KAErBE,EAAO,IAAIH,EAAG,GACdI,EAAY,IAAIJ,GAAI,GAUxB,SAASK,EAAeC,GACpB,OAAO,IAAIN,EAAG,IAAIO,IAAI,IAAIP,EAAGM,IAGjC,SAASE,EAAeC,GACpB,GAAmB,kBAARA,EAAkB,CACzB,IAAKA,EAAIC,MAAM,eACX,MAAM,IAAIC,MAAM,4DAA+DF,EAAM,gDAEzF,OAAOA,EACJ,GAAmB,kBAARA,EACd,OAAOG,OAAOH,GACX,GAAmB,kBAARA,GAAoBA,EAAII,WAAaJ,EAAIK,QAAUL,EAAIM,oBACrE,OAAIN,EAAIO,YACGJ,OAAOH,EAAIO,eAGXP,EAAII,SAAS,IAG5B,MAAM,IAAIF,MAAM,4DAA+DF,EAAM,iBAAoBA,EAAM,KAwFnHQ,EAAOC,QAAU,CACbV,eAAgBA,EAChBH,eAAgBA,EAChBc,QAxFJ,SAAiBC,EAAUd,EAAUe,GACjC,IAAIC,EAAMpB,EAAWkB,GACjBG,EAAWD,EAAIE,GAAGrB,GAClBsB,EAAOpB,EAAeC,GACtBoB,EAAapB,EACbqB,EAAUN,GAAgB,GAE1BE,IACAD,EAAMA,EAAIM,IAAIxB,IAKlB,IAFA,IAAIyB,EAAWP,EAAIQ,IAAIL,GAAMZ,SAAS,IAE/BgB,EAASE,OAASL,GACrBG,EAAW,IAAMA,EAGhBF,EAAQK,MACTH,EAAWA,EAASnB,MAAM,wBAAwB,IAGtD,IAAIuB,EAAQX,EAAIY,IAAIT,GAAMZ,SAAS,IAE/Bc,EAAQQ,UACRF,EAAQA,EAAMG,QAAQ,wBAAyB,MAGnD,IAAIC,EAAaJ,GAAqB,KAAZJ,EAAkB,GAAK,IAAMA,GAMvD,OAJIN,IACAc,EAAQ,IAAMA,GAGXA,GAwDPC,MArDJ,SAAeC,EAAYjC,GACvB,IAAIkC,EAAQhC,EAAe+B,GACvBd,EAAOpB,EAAeC,GACtBoB,EAAapB,EAGbiB,EAAqC,MAA1BiB,EAAMC,UAAU,EAAG,GAKlC,GAJIlB,IACAiB,EAAQA,EAAMC,UAAU,IAGd,MAAVD,EACA,MAAM,IAAI7B,MAAM,wCAA0C4B,EAAa,0BAI3E,IAAIG,EAAQF,EAAMG,MAAM,KACxB,GAAID,EAAMX,OAAS,EACf,MAAM,IAAIpB,MAAM,wCAA0C4B,EAAa,qCAG3E,IAAIN,EAAQS,EAAM,GACdb,EAAWa,EAAM,GAQrB,GANKT,IACDA,EAAQ,KAEPJ,IACDA,EAAW,KAEXA,EAASE,OAASL,EAClB,MAAM,IAAIf,MAAM,wCAA0C4B,EAAa,oCAG3E,KAAOV,EAASE,OAASL,GACrBG,GAAY,IAGhBI,EAAQ,IAAIjC,EAAGiC,GACfJ,EAAW,IAAI7B,EAAG6B,GAClB,IAAIP,EAAMW,EAAML,IAAIH,GAAMmB,IAAIf,GAM9B,OAJIN,IACAD,EAAMA,EAAIM,IAAIxB,IAGX,IAAIJ,EAAGsB,EAAIT,SAAS,IAAK,O,6MCvHfgC,E,wFAyBjB,c,0BAUA,c,4BAkBA,c,mCAmDA,e,6BAvGA,WACI,OAAOC,EAAYC,c,+BAGvB,WACI,OAAOD,EAAYE,iB,sDAGvB,WACI,OAAOC,WAAWH,EAAYI,yC,kCAGlC,WACI,OAAOD,WAAWH,EAAYK,qB,8BAGlC,WACI,OAAOL,EAAYM,gB,sBAGvB,SAAgBC,GACZ,OAAOP,EAAYQ,OAAOD,K,2BAK9B,SAAqBA,GACjB,OAAOR,EAAcU,SAASF,GAASG,a,0BAG3C,SAAoBH,GAChB,OAAOP,EAAYQ,OAAOD,GAASI,Y,4BAKvC,SAAsBJ,GAClB,OAAOR,EAAca,aAAaL,GAASM,c,4BAG/C,SAAsBN,GAClB,OAAOR,EAAca,aAAaL,GAASO,c,4BAG/C,SAAsBP,GAClB,OAAOR,EAAca,aAAaL,GAASQ,c,kCAG/C,SAA4BR,GACxB,OAAOR,EAAca,aAAaL,GAASS,oB,+BAQ/C,SAAyBT,EAASU,GAAU,IAAD,EACvC,iBAAOlB,EAAcmB,eAAeX,GAASU,GAASE,YAAtD,QAA8D,mB,kCAGlE,SAA4BZ,EAASU,GACjC,OAAOd,WAAWJ,EAAcmB,eAAeX,GAASU,GAASG,W,uBAGrE,WAGI,IAFA,IAAMC,EAAM,IAAIC,IAEhB,MAA2BC,OAAOC,QAAQxB,EAAYQ,QAAtD,eAA+D,CAA1D,0BAAOiB,EAAP,KAAYlC,EAAZ,KACD8B,EAAIK,SAASD,IAAQlC,EAAM4B,KAG/B,OAAOE,I,8BAGX,SAAwBd,GACpB,QAAOR,EAAc4B,YAAYpB,K,wBAGrC,WAGI,IAFA,IAAMc,EAAM,IAAIC,IAEhB,MAA2BC,OAAOC,QAAQxB,EAAYQ,QAAtD,eAA+D,CAA1D,0BAAOiB,EAAP,KAAYlC,EAAZ,KACD8B,EAAIK,SAASD,IAAQlC,EAAMqC,OAG/B,OAAOP,I,uBAGX,SAAiBd,GACb,OAAOR,EAAc8B,aAAatB,K,mCAGtC,WAGI,IAFA,IAAMc,EAAM,IAAIC,IAEhB,MAA2BC,OAAOC,QAAQxB,EAAYQ,QAAtD,eAA+D,CAA1D,0BAAOiB,EAAP,KAAYlC,EAAZ,KACD8B,EAAIK,SAASD,IAAQlC,EAAMuC,kBAG/B,OAAOT,I,kCAKX,SAA4Bd,GACxB,OAAOR,EAAcgC,wBAAwBxB,K,iCAGjD,SAA2BA,GACvB,OAAOR,EAAcU,SAASF,GAASyB,qB,YC3GlCC,EAAgBC,IAAMC,gBAEdC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,KAAK,eAELC,QAAS,EACTC,WAAY,SAAAC,GACR,EAAKC,SAAS,CAAEH,QAASE,MAIjC,EAAKE,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,4BAA8B,EAAKA,4BAA4BD,KAAjC,gBACnC,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKI,gCAAkC,EAAKA,gCAAgCJ,KAArC,gBAEvC,EAAKK,mBAAqB,EAAKA,mBAAmBL,KAAxB,gBAC1B,EAAKM,sBAAwB,EAAKA,sBAAsBN,KAA3B,gBAC7B,EAAKO,2BAA6B,EAAKA,2BAA2BP,KAAhC,gBAClC,EAAKQ,iBAAmB,EAAKA,iBAAiBR,KAAtB,gBAExB,EAAKS,iBAAmB,EAAKA,iBAAiBT,KAAtB,gBACxB,EAAKU,yBAA2B,EAAKA,yBAAyBV,KAA9B,gBAxBjB,E,4FA2BnB,4BAAAW,EAAA,yDACUC,EAAiB,wEAAwEC,KAAKC,UAAUC,WAC9GC,KAAKlB,SAAS,CAAEc,oBAEZI,KAAKf,8BAJb,gCAKce,KAAKC,6BALnB,OAOQD,KAAKlB,SAAS,CACVG,6BAA6B,IARzC,8BAWQe,KAAKlB,SAAS,CACVG,6BAA6B,IAIjCe,KAAKT,2BAA2BrD,EAAcgE,qBAhBtD,UAiBcF,KAAKZ,kCAjBnB,iD,wFAqBA,WACQY,KAAKvB,MAAM0B,QAAUH,KAAKvB,MAAM0B,OAAOC,eACvCJ,KAAKK,oBAAoBL,KAAKvB,MAAM0B,OAAOC,iB,oBAInD,WACI,OACI,cAAChC,EAAckC,SAAf,CAAwB5E,MAAOsE,KAAKvB,MAApC,SACKuB,KAAKxB,MAAM+B,a,wBAKxB,WACIP,KAAKR,iBAAiB,IAAK,8BAE3BQ,KAAKlB,SAAS,CACV0B,aAASC,EACT9B,aAAS8B,M,yCAIjB,WACI,MAAkC,qBAApBC,OAAOC,UAAyD,qBAAhBD,OAAOE,O,yBAGzE,WACI,GAA+B,qBAApBF,OAAOC,SACd,OAAOD,OAAOC,SAGlB,GAA2B,qBAAhBD,OAAOE,KACd,OAAOF,OAAOE,KAAKC,gBAGvB,KAAM,wB,uEAGV,WAAyBC,GAAzB,mBAAAnB,EAAA,6DACUQ,EAAS5B,EAAewC,WAAWD,GAEzCd,KAAKlB,SAAS,CACVgC,SAAUA,EACVX,WAGJH,KAAKgB,kBAAkBF,GAR3B,SAU6BA,EAASG,QAAQ,CAAEC,OAAQ,gBAVxD,cAUUC,EAVV,OAWInB,KAAKX,mBAAmB8B,GAX5B,SAcyBL,EAASG,QAAQ,CAAEC,OAAQ,iBAdpD,UAgB4B,KAFpBE,EAdR,QAgBiBhG,OAhBjB,4CAmBkB0F,EAASG,QAAQ,CAAEC,OAAQ,wBAnB7C,2DAqBYlB,KAAKlB,SAAS,CAAEuC,MAAK,OACrBC,QAAQD,MAAR,MAtBZ,gCAyBQrB,KAAKV,sBAAsB8B,GAzBnC,2D,sIA6BA,4BAAAzB,EAAA,6DACI2B,QAAQC,IAAI,mCAENT,EAAWd,KAAKd,cAH1B,SAIUc,KAAKb,mBAAmB2B,GAJlC,gD,0IAOA,8BAAAnB,EAAA,6DACI2B,QAAQC,IAAI,yCAENT,EAAW,IAAIU,IAAsB,CACvCC,IAAKvF,EAAc8B,aACnB0D,QAAQ,KAGHC,UAAUC,GAAG,eAAe,SAACC,EAAKC,GACvC,IAAMC,EAAMD,EAAQE,OAAO,GAC3BV,QAAQC,IAAR,iCAAsCQ,OAV9C,kBAe+BjB,EAASmB,SAfxC,cAecb,EAfd,OAiBQE,QAAQC,IAAIH,GACZE,QAAQC,IAAIT,EAASoB,WAAW5E,MAlBxC,UAoBc0C,KAAKb,mBAAmB2B,GApBtC,0DAsBQQ,QAAQC,IAAR,UAAe,KAAMY,KAArB,aAA8B,KAAMC,UAtB5C,0D,qFA0BA,SAAkBtB,GACTA,EAASc,IAKdd,EAASc,GAAG,eAAgB5B,KAAKX,oBACjCyB,EAASc,GAAG,kBAAmB5B,KAAKV,uBACpCwB,EAASc,GAAG,aAAc5B,KAAKR,mBAN3B8B,QAAQC,IAAI,sC,iCASpB,SAAoBT,GACXA,EAASc,IAKdd,EAASuB,eAAe,eAAgBrC,KAAKX,oBAC7CyB,EAASuB,eAAe,kBAAmBrC,KAAKV,uBAChDwB,EAASuB,eAAe,aAAcrC,KAAKR,mBANvC8B,QAAQC,IAAI,sC,0BASpB,SAAa7E,GACTsD,KAAKlB,SAAS,CACVwD,OAAQ/D,EAAewC,WAAW7E,EAAcqG,UAAU7F,Q,wCAIlE,SAA2BA,GACvBsD,KAAKlB,SAAS,CACVuC,WAAOZ,EACP/D,YAGCR,EAAcsG,iBAAiB9F,GAOpCsD,KAAKyC,aAAa/F,GANdsD,KAAKlB,SAAS,CACVuC,MAAM,sBAAD,OAAwB3E,O,gCAQzC,SAAmByE,GACf,IAAMzE,EAAUgG,IAAKC,MAAMC,YAAYzB,GACvCG,QAAQC,IAAR,wBAA6B7E,IAC7BsD,KAAKT,2BAA2B7C,K,mCAGpC,SAAsB0E,GAClBE,QAAQC,IAAR,2BAAgCH,EAAShG,SAEjB,IAApBgG,EAAShG,QACT4E,KAAKlB,SAAS,CACVuC,WAAOZ,EACPoC,WAAW,EACXrC,aAASC,IAGba,QAAQC,IAAI,gCAEZvB,KAAKlB,SAAS,CACVuC,WAAOZ,EACPoC,WAAW,EACXrC,QAASY,EAAS,O,8BAK9B,SAAiBe,EAAMW,GAAS,IAAD,OAC3BxB,QAAQC,IAAI,CAAEwB,OAAQ,sBAAuBZ,OAAMW,WAE/C9C,KAAKvB,MAAM0B,QAAUH,KAAKvB,MAAM0B,OAAOU,gBACnCb,KAAKvB,MAAM0B,OAAOU,2BAA2BW,KAC7CxB,KAAKlB,SAAS,CACVqB,YAAQM,IAEZT,KAAKV,sBAAsB,KAEvBU,KAAKvB,MAAM0B,OAAOU,gBAAgBgC,WAAa7C,KAAKvB,MAAM0B,OAAOU,gBAAgBmC,MACjFhD,KAAKvB,MAAM0B,OAAOU,gBAAgBmC,QAC7BC,MAAK,WACF,EAAKnE,SAAS,CACVqB,YAAQM,IAEZ,EAAKnB,sBAAsB,OAE9B4D,OAAM,SAAA7B,GACHC,QAAQC,IAAI,wBACZD,QAAQC,IAAIF,OAGpBrB,KAAKlB,SAAS,CACVqB,YAAQM,IAEZT,KAAKV,sBAAsB,MAInCU,KAAKlB,SAAS,CACVqB,YAAQM,IAEZT,KAAKV,sBAAsB,O,qEAInC,WAAuB5C,EAASyG,EAAWC,EAAoBC,EAAsBC,EAAwBC,EAASC,EAAmBC,GAAzI,eAAA9D,EAAA,yDACSK,KAAKvB,MAAMqC,SADpB,uBAEQQ,QAAQC,IAAI,qBAFpB,iCAMSmB,IAAKC,MAAMe,MAAMhH,KAClBA,EAAUgG,IAAKC,MAAMgB,YAAYjH,IAG/BkH,EAAI,CACNlH,QAASA,EACTyG,UAAWA,EACXU,eAAgB,CACZvG,KAAM8F,EACNU,OAAQT,EACR1J,SAAU2J,GAEdC,QAASA,EACTC,kBAAmBA,EACnBC,SAAUA,GApBlB,kBAwBWzD,KAAKvB,MAAMqC,SAASG,QAAQ,CAAEC,OAAQ,0BAA2Bc,OAAQ,CAAC4B,MAxBrF,gD,kJA2BA,WAA+BlH,EAASyG,EAAWC,EAAoBC,EAAsBC,EAAwBC,EAASC,EAAmBC,GAAjJ,SAAA9D,EAAA,yDACSK,KAAKvB,MAAMqC,SADpB,uBAEQQ,QAAQC,IAAI,qBAFpB,iCAMSmB,IAAKC,MAAMoB,YAAYrH,KACxBA,EAAUgG,IAAKC,MAAMgB,YAAYjH,IAGrC4E,QAAQC,IAAR,8BAAmC7E,IAVvC,kBAacsD,KAAKvB,MAAMqC,SAASG,QAAQ,CAC9BC,OAAQ,6BACRc,OAAQ,CAAC,CAAEtF,QAASA,MAfhC,4DAkBiC,OAArB,KAAYyF,OAAyD,QAAtB,KAAYA,KAlBvE,wBAmBYb,QAAQC,IAAR,8BAAmC7E,EAAnC,qBAnBZ,oBAsBsBsD,KAAKP,iBAAiB/C,EAASyG,EAAWC,EAAoBC,EAAsBC,EAAwBC,EAASC,EAAmBC,GAtB9J,2DAwBgBzD,KAAKlB,SAAS,CAAEuC,MAAO,KAASe,UAChCd,QAAQD,MAAR,MAzBhB,gCA4BYrB,KAAKlB,SAAS,CAAEuC,MAAO,KAAYe,UACnCd,QAAQD,MAAR,MA7BZ,kE,+FAkCA,SAAkBP,GACd,IAAMF,EAAO,IAAI8B,IAAK5B,GAYtB,OAVAF,EAAKoD,IAAIC,OAAO,CACZC,QAAS,CACL,CACI5G,KAAM,UACN6G,KAAM,cACNC,gBAAiBxD,EAAK+B,MAAMC,gBAKjChC,M,GA3U6ByD,a,QCRrC,SAASC,EAAc5I,GAC1B,MAAM,GAAN,OAAUA,EAAMI,UAAU,EAAG,GAA7B,cAAqCJ,EAAMI,UAAUJ,EAAMN,OAAS,IA+CxE,SAASmJ,EAAaC,GAA2C,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAH,EACnDC,EAAS,IAAIC,KAAKC,aAAa,GAAI,CACrCC,sBAAuBL,EACvBM,sBAAuBL,IACxBM,OAAOR,GAEV,OAAOG,EAGJ,SAASM,EAAcT,GAC1B,OAAOD,EAAaC,EAAQ,GAGzB,SAASU,EAAiBV,GAA2C,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAH,EAEpE,OADApD,QAAQ6D,OAAyB,kBAAXX,EAAqB,wCACpCY,EAA4B,IAATZ,EAAcC,EAAaC,GAGlD,SAASU,EAAmBZ,GAA2C,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAH,EAGtE,OAFApD,QAAQ6D,OAAyB,kBAAXX,EAAqB,wCAE5B,IAAXA,EACM,GAAN,OAAUA,GAEVA,GAAU,IACHD,EAAaC,EAAQa,KAAKC,IAAI,EAAGb,GAAc,GAGtDD,GAAU,IACHD,EAAaC,EAAQa,KAAKC,IAAI,EAAGb,GAAc,GAGtDD,GAAU,IACHD,EAAaC,EAAQa,KAAKC,IAAI,EAAGb,GAAc,GAGnDF,EAAaC,EAAQC,EAAaC,GAGtC,SAASa,EAAef,EAAQgB,GAAqD,IAAnCf,EAAkC,uDAApB,EAAGC,EAAiB,uDAAH,EACpF,OAAOU,EAAmBZ,EAAQa,KAAKC,IAAIE,EAAkBf,GAAcY,KAAKC,IAAIE,EAAkBd,I,YCpFrFe,E,kDAqDjB,WAAYjH,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTiH,MAAO,MAJI,E,qDAQnB,WACI,MAAiE1F,KAAKxB,MAA9DmH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,qBAAsBC,EAApC,EAAoCA,aAAcC,EAAlD,EAAkDA,WAE9CJ,EAAQ,YAERC,IACAD,GAAK,WAAQC,KAGY,IAAzBC,IACAF,GAAS,2BAGQ,IAAjBG,IACAH,GAAS,4BAGTI,IACAJ,GAAK,WAAQI,IAGjB9F,KAAKlB,SAAS,CAAE4G,Y,oBAGpB,WACI,MAqBI1F,KAAKxB,MApBLuH,EADJ,EACIA,OACAC,EAFJ,EAEIA,UACAC,EAHJ,EAGIA,wBACAC,EAJJ,EAIIA,aACAC,EALJ,EAKIA,OACAC,EANJ,EAMIA,KACAC,EAPJ,EAOIA,OACAC,EARJ,EAQIA,MACAC,EATJ,EASIA,UACAC,EAVJ,EAUIA,KACAC,EAXJ,EAWIA,gBACAC,EAZJ,EAYIA,YACAC,EAbJ,EAaIA,iBACAC,EAdJ,EAcIA,iBACAC,EAfJ,EAeIA,uBACAC,EAhBJ,EAgBIA,iBACAC,EAjBJ,EAiBIA,iBACAC,EAlBJ,EAkBIA,UACAC,EAnBJ,EAmBIA,SACAtC,EApBJ,EAoBIA,OAGJ,OACI,cAAC,IAAD,CACIuC,UAAU,qCACVC,KAAMpB,EACNqB,QAAS,WACAnB,GACDD,GAAU,IALtB,SASI,sBAAKkB,UAAU,4DAAf,UACI,cAAC,IAAOG,QAAR,CAAgBH,UAAU,8BAE1B,sBAAKA,UAAS,wBAAmBhB,EAAnB,mDAAd,WACMC,IAAWI,IAAcE,IACvB,qBAAKS,UAAU,gDAAf,SACKf,EACK,CAAEA,UACF,sBAAKe,UAAU,oCAAf,WACIX,GACE,cAAC,IAAOe,MAAR,CAAsBJ,UAAU,GAAhC,SACKZ,GADa,KAItB,sBAAKY,UAAU,YAAf,UACKV,GACG,wBAAgBe,KAAK,SAASL,UAAU,oDAAoD,aAAW,OAAvG,SACKV,GADO,MAIdC,GACE,wBAAgBc,KAAK,SAASL,UAAU,oDAAoD,kBAAgB,QAAQ,aAAW,QAAQM,QAAO,sBAAE,sBAAA7H,EAAA,sEACtIsH,IADsI,OAGxItC,GACAA,GAAO,GAJiI,2CAAhJ,SAOI,mBAAGuC,UAAU,aAPL,aAgBnCR,GACG,cAAC,IAAOe,YAAR,CAAoBP,UAAU,OAA9B,SACKR,IAIT,qBAAKQ,UAAU,kBAAf,SACKd,KAGHC,IAAWO,IAAqBG,IAC9B,qBAAKG,UAAU,oBAAf,SACKb,EACK,CAAEA,UACF,sBAAKa,UAAU,oEAAf,WACIN,GACE,wBAAgBW,KAAK,SAASL,UAAU,0BAA0BM,QAAO,sBAAE,sBAAA7H,EAAA,+EAE7DqH,IAF6D,OAGnE1F,QAAQC,IAAI,wBAERoD,GACAA,GAAO,GANwD,gDASnErD,QAAQD,MAAM,oBAAd,MAEIsD,GACAA,EAAO,CAAEtD,MAAK,OAZiD,yDAexEqG,SAAUb,EAfb,SAgBKF,GAhBO,MAmBdI,GACE,wBAAgBQ,KAAK,SAASL,UAAU,yBAAyB,kBAAgB,QAAQ,aAAW,SAASM,QAAO,sBAAE,sBAAA7H,EAAA,sEAC5GsH,IAD4G,OAG9GtC,GACAA,GAAO,GAJuG,2CAAtH,SAOKmC,GAPO,sB,GAhMfzC,aCFlC,SAASsD,EAAT,GAGH,IAFArB,EAED,EAFCA,MACAsB,EACD,EADCA,eAEA,OACI,mCACI,sBAAMV,UAAS,oGAAwFU,QAAxF,IAAwFA,IAAkB,IAAzH,SACKtB,MASV,SAASuB,EAAT,GAMH,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,cACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,kBAGA,OADD,EADCC,YAIQ,qCACKF,GACG,sBAAMd,UAAS,+DAAmDe,QAAnD,IAAmDA,IAAqB,IAAvF,SACKD,IAGRF,GACG,sBAAMZ,UAAS,sCAA0Ba,QAA1B,IAA0BA,IAAiB,IAA1D,SACKD,OAMb,qCACKA,GACG,sBAAMZ,UAAS,sCAA0Ba,QAA1B,IAA0BA,IAAiB,IAA1D,SACKD,IAGRE,GACG,sBAAMd,UAAS,yDAA6Ce,QAA7C,IAA6CA,IAAqB,IAAjF,SACKD,OAWlB,SAASG,EAAT,GAKH,IAJAC,EAID,EAJCA,OACAC,EAGD,EAHCA,gBACAC,EAED,EAFCA,WACAC,EACD,EADCA,oBAEA,OACI,qCACKH,GACG,sBAAMlB,UAAS,kDAAsCmB,QAAtC,IAAsCA,IAAmB,IAAxE,SACKD,IAGRE,GACG,sBAAMpB,UAAS,0DAA8CqB,QAA9C,IAA8CA,IAAuB,IAApF,SACKD,OAUd,SAASE,EAAT,GAGH,IAFAhC,EAED,EAFCA,KACAiC,EACD,EADCA,cAEA,OACI,mCACKjC,GACG,qBAAKU,UAAS,4CAAgCuB,QAAhC,IAAgCA,IAAiB,IAA/D,SACKjC,MAWrB,SAASkC,EAAT,GAQI,IAPAC,EAOD,EAPCA,mBACAC,EAMD,EANCA,WACAtC,EAKD,EALCA,MACAsB,EAID,EAJCA,eACAE,EAGD,EAHCA,KACAM,EAED,EAFCA,OACA5B,EACD,EADCA,KAEA,OACI,sBAAKU,UAAS,4DAAgD0B,QAAhD,IAAgDA,IAAc,GAA9D,mBAAoED,QAApE,IAAoEA,IAAsB,IAAxG,UACI,cAAChB,EAAD,CAAWrB,MAAOA,EAAOsB,eAAgBA,IACxCE,GAAQ,mCAAGA,IACXM,GAAU,mCAAGA,IACb5B,GAAQ,mCAAGA,OAQjB,SAASqC,EAAT,GAiBH,IAhBAF,EAgBD,EAhBCA,mBACAC,EAeD,EAfCA,WACAtC,EAcD,EAdCA,MACAsB,EAaD,EAbCA,eACAkB,EAYD,EAZCA,QACAhB,EAWD,EAXCA,KACAC,EAUD,EAVCA,cACAC,EASD,EATCA,SACAC,EAQD,EARCA,kBACAc,EAOD,EAPCA,gBACAX,EAMD,EANCA,OACAC,EAKD,EALCA,gBACAC,EAID,EAJCA,WACAC,EAGD,EAHCA,oBACA/B,EAED,EAFCA,KACAiC,EACD,EADCA,cAEA,OAAO,cAACC,EAAD,CACHC,mBAAoBA,EACpBC,WAAYA,EACZtC,MAAOA,EACPsB,eAAgBA,EAChBE,KAAMgB,EACA,mCAAGA,KACFhB,GAAQE,IACX,qBAAKd,UAAU,OAAf,SACI,cAACW,EAAD,CACIC,KAAMA,EACNC,cAAeA,EACfC,SAAUA,EACVC,kBAAmBA,EACnBC,YAAaa,MAGzBX,QAASA,GAAUE,IACf,qBAAKpB,UAAU,OAAf,SACI,cAACiB,EAAD,CACIC,OAAQA,EACRC,gBAAiBA,EACjBC,WAAYA,EACZC,oBAAqBA,MAIjC/B,KACI,cAACgC,EAAD,CAAUhC,KAAMA,EAAMiC,cAAeA,MDxK5BhD,EA4BVuD,aAAe,CAClB/C,yBAAyB,EACzBL,sBAAsB,EACtBC,cAAc,EACdC,WAAY,KACZI,aAAc,gGACdH,QAAQ,EACRC,UAAW,SAAAtK,KAGX6K,WAAW,EACXE,iBAAiB,EACjBE,iBAAkB,KAClBC,kBAAkB,EAClBC,wBAAwB,EACxBC,iBAAkB,SAClBC,kBAAkB,EAClBC,UAAU,WAAD,4BAAE,sBAAArH,EAAA,0FAAF,kDAAC,GAEVsH,SAAS,WAAD,4BAAE,sBAAAtH,EAAA,0FAAF,kDAAC,GAETgF,OAAO,WAAD,4BAAE,WAAMjJ,GAAN,SAAAiE,EAAA,0FAAF,mDAAC,ICtCfgI,EAAUqB,aAAe,GAyCzBnB,EAASmB,aAAe,CACpBd,aAAa,GAyBjBC,EAAWa,aAAe,GAkB1BR,EAASQ,aAAe,CACpBP,cAAe,cAsBnBC,EAAQM,aAAe,GAsDvBH,EAASG,aAAe,CACpBJ,WAAY,eACZH,cAAe,aACfM,iBAAiB,G,sBCzKN,SAASE,EAAT,GAAiE,IAAzClD,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAWkD,EAAqB,EAArBA,QAASjC,EAAY,EAAZA,SAC/D,EAA4BkC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACDJ,EAAQ1I,QAKb+I,IAAOC,UAAUN,EAAQ1I,QAAS,CAC9BiJ,MAAO,CACHC,KAAM,UACNC,MAAO,WAGV1G,MAAK,SAAA2G,GACFP,EAAUO,GACVtI,QAAQC,IAAIqI,MAEf1G,OAAM,SAAArB,GACHP,QAAQD,MAAMQ,MAflBwH,OAAU5I,KAiBf,CAACyI,EAAQ1I,UAEZ,IAAMqJ,EAAQ3N,EAAcU,SAASsM,EAAQxM,SACvCG,EAAaX,EAAc4N,cAAcZ,EAAQxM,SAEvD,OACI,cAAC,EAAD,CACIqJ,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,qBAAKc,UAAU,+EAAf,SACKgC,EAAQ1I,SACL,qCACI,cAACqI,EAAD,CACIF,mBAAmB,aACnBrC,MAAM,oBACNwB,KAAMoB,EAAQ1I,QACduH,cAAc,sBAElB,qBAAKb,UAAU,qBAAqB6C,IAAKX,IACzC,yBACI7B,KAAK,SACLL,UAAU,+EACVM,QAAO,sBAAE,sBAAA7H,EAAA,+EAEKG,UAAUkK,UAAUC,UAAUf,EAAQ1I,SAF3C,OAGDc,QAAQC,IAAI,iCAHX,+CAKDD,QAAQD,MAAM,sCAAd,MALC,wDAHb,UAYI,mBAAG6F,UAAU,yBAZjB,UAcA,wBACIK,KAAK,SACLL,UAAU,2EACVM,QAAS,WACL0B,EAAQxK,KAAKK,aACbiH,GAAU,IALlB,wBAUA,cAAC6C,EAAD,CACIvC,MAAM,WACNwB,KAAMoB,EAAQxM,QACdqL,cAAc,UACdK,OAAQyB,EAAMvM,KACd+K,gBAAgB,iBAEpB,cAACQ,EAAD,CACIvC,MAAM,UACNwB,KAAMvC,EAAe2D,EAAQvK,QAAS9B,EAAWlD,UACjDqO,SAAUnL,EAAWiH,OACrBsE,OAAO,cAqB3B9B,MAAM,cACNM,kBAAkB,EAClBE,iBAAiB,QACjBG,SAAUA,ICxGP,SAASiD,EAAT,GAAkE,IAAzCnE,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAWkD,EAAqB,EAArBA,QAASjC,EAAY,EAAZA,SAClD/K,EAAcU,SAASsM,EAAQxM,SAC1BR,EAAc4N,cAAcZ,EAAQxM,SAEvD,OACI,cAAC,EAAD,CACIqJ,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,sBAAKc,UAAU,+EAAf,UACKgC,EAAQxK,KAAKO,8BAEV,wBACIsI,KAAK,SACLL,UAAU,uDACVM,QAAO,sBAAE,sBAAA7H,EAAA,sDACLuJ,EAAQxK,KAAKuB,6BACb+F,GAAU,GAFL,2CAHb,mCAUE,sBAAKkB,UAAU,0CAAf,UACE,4BACI,8DAEJ,oBAAGiD,KAAK,gCAAgCC,OAAO,SAA/C,8BAAyE,mBAAGlD,UAAU,mCAG9F,wBACIK,KAAK,SACLL,UAAU,wDACVM,QAAS,WACL0B,EAAQxK,KAAKU,kCACb4G,GAAU,IALlB,4CAYRM,MAAM,oBACNM,kBAAkB,EAClBE,iBAAiB,QACjBG,SAAUA,I,ICzCDoD,E,kDAWjB,WAAY7L,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTE,aAAS8B,EACT6J,kBAAkB,EAClBC,mBAAmB,GAGvB,EAAKC,OAAS,EAAKA,OAAOxL,KAAZ,gBACd,EAAKU,yBAA2B,EAAKA,yBAAyBV,KAA9B,gBAVjB,E,qDAanB,WACQgB,KAAKyK,cACLnJ,QAAQC,IAAI,qC,kCAIpB,WACIvB,KAAK0K,c,gCAGT,WACQ1K,KAAKyK,cACLnJ,QAAQC,IAAI,sC,wBAIpB,WACI,GAAIvB,KAAK2K,eACL,OAAO,EAGX3K,KAAK2K,gBAAiB,EAEtB,IACI,QAAK3K,KAAKkJ,QAAQxM,UAENR,EAAcsG,iBAAiBxC,KAAKkJ,QAAQxM,YAKpDsD,KAAKkJ,QAAQ1I,UAAWR,KAAKkJ,QAAQ5G,QAChCtC,KAAK4K,WACN5K,KAAK6K,cACE,IAPX7K,KAAKN,4BACE,IALf,QAiBIM,KAAK2K,gBAAiB,K,wBAI9B,WAAc,IAAD,OACT3K,KAAK4K,QAAUE,YAAW,sBACtB,sBAAAnL,EAAA,sEAAkB,EAAK6K,SAAvB,mFACAxK,KAAKxB,MAAMuM,UAEfzJ,QAAQC,IAAR,yBAA8BvB,KAAK4K,Y,uBAGvC,WACI,IAAMA,EAAU5K,KAAK4K,QAEjBA,IACAI,cAAcJ,GACd5K,KAAK4K,aAAUnK,EAEfa,QAAQC,IAAR,yBAA8BqJ,O,oBAItC,WAAU,IAAD,OACL,GAAK5K,KAAKkJ,QAAQrG,WAAc7C,KAAKkJ,QAAQ7H,MAoCtC,IAAIrB,KAAKkJ,QAAQ7H,MACpB,OACI,cAAC,WAAD,UACI,qBAAK6F,UAAU,oBAAf,SACI,qBAAKA,UAAU,6CAAf,SACI,sBAAMA,UAAU,eAAhB,UACkC,QAA7BlH,KAAKkJ,QAAQ7H,MAAMc,KACd,2BACAnC,KAAKkJ,QAAQ7H,aANpB,GAcnB,IAAKrB,KAAKkJ,QAAQxM,UAAYR,EAAcsG,iBAAiBxC,KAAKkJ,QAAQxM,SACtE,OACI,cAAC,WAAD,UACI,sBAAMwK,UAAU,eAAhB,iCADW,GAMvB,IAAMrK,EAAaX,EAAc4N,cAAc9J,KAAKkJ,QAAQxM,SACtDmN,EAAQ3N,EAAcU,SAASoD,KAAKkJ,QAAQxM,SAElD,OACI,eAAC,WAAD,WACI,sBAAKwK,UAAU,8BAAf,UACI,qBAAKA,UAAU,oEAAf,SACI,+BAAO2C,EAAMvM,SAEjB,qBAAK4J,UAAU,oEAAf,SACI,gCACI,sBAAMA,UAAU,UAAhB,SACKlH,KAAKvB,MAAME,QACN4G,EAAevF,KAAKvB,MAAME,QAAS9B,EAAWlD,UAC9C,MAGV,sBAAMuN,UAAU,6BAAhB,SACKrK,EAAWiH,cAIvB9D,KAAKkJ,QAAQ1I,SACV,qBAAK0G,UAAU,uEAAf,SACI,sBACIA,UAAU,UACVM,QAAO,sBAAE,sBAAA7H,EAAA,sDACL,EAAKb,SAAS,CACVwL,kBAAkB,IAFjB,2CAFb,SAQKhG,EAActE,KAAKkJ,QAAQ1I,gBAM3CR,KAAKvB,MAAM6L,kBACR,cAACrB,EAAD,CACIlD,OAAQ/F,KAAKvB,MAAM6L,iBACnBtE,UAAW,WACP,EAAKlH,SAAS,CACVwL,kBAAkB,KAG1BpB,QAASlJ,KAAKkJ,QACdjC,SAAU,WACN,EAAKnI,SAAS,CACVwL,kBAAkB,SA7CvB,GA/DnB,OACI,eAAC,WAAD,WACI,qBAAKpD,UAAU,oBAAf,SACI,qBAAKA,UAAU,6CAAf,SACI,sBACIA,UAAU,iBACVM,QAAS,WACL,EAAK1I,SAAS,CACVyL,mBAAmB,KAJ/B,mCAaPvK,KAAKvB,MAAM8L,mBACR,cAACL,EAAD,CACInE,OAAQ/F,KAAKvB,MAAM8L,kBACnBvE,UAAW,WACP,EAAKlH,SAAS,CACVyL,mBAAmB,KAG3BrB,QAASlJ,KAAKkJ,QACdjC,SAAU,WACN,EAAKnI,SAAS,CACVyL,mBAAmB,SA3BxB,K,2DAqH3B,gCAAA5K,EAAA,2DACQK,KAAKkJ,QAAQxM,SAAWR,EAAcsG,iBAAiBxC,KAAKkJ,QAAQxM,UAAYsD,KAAKkJ,QAAQ1I,SADrG,gCAE6BR,KAAKkJ,QAAQ5G,OAAO0B,IAAIiH,WAAWjL,KAAKkJ,QAAQ1I,SAF7E,OAEcmE,EAFd,OAGc9H,EAAaX,EAAc4N,cAAc9J,KAAKkJ,QAAQxM,SACtDiC,EAAUrC,WAAW9B,kBAAQmK,EAAQ9H,EAAWlD,WAEtDqG,KAAKkJ,QAAQtK,WAAWD,GACxBqB,KAAKlB,SAAS,CAAEH,YAPxB,gD,mIAWA,sCAAAgB,EAAA,6DACUjD,EAAUR,EAAcgE,oBACxB2J,EAAQ3N,EAAcU,SAASF,GAC/ByG,EAAY0G,EAAMvM,UACGmD,EACrB4C,EAAuBwG,EAAMhN,WAAWiH,OACxCR,EAAyBuG,EAAMhN,WAAWlD,SAC1C4J,EAAU,CAACrH,EAAcqG,UAAU7F,SACf+D,OACTA,EATrB,UAWUT,KAAKkJ,QAAQxK,KAAKgB,yBACpBhD,EACAyG,EATuB1C,UAWvB4C,EACAC,EACAC,EATsB9C,UACTA,WATrB,iD,2DA1NgC4D,aCXrB,SAAS6G,IACtB,OACE,qCACE,cAAC,IAAD,CAAShE,UAAU,WAAWiE,GAAG,IAAIC,gBAAgB,SAArD,kBACA,cAAC,IAAD,CAASlE,UAAU,WAAWiE,GAAG,SAASC,gBAAgB,SAA1D,mBACA,cAAC,IAAD,CAASlE,UAAU,WAAWiE,GAAG,SAASC,gBAAgB,SAA1D,mBACA,cAAC,IAAD,CAASlE,UAAU,WAAWiE,GAAG,YAAYC,gBAAgB,SAA7D,yBCFS,SAASC,IACpB,MAAkDlC,oBAAS,GAA3D,mBAAOmC,EAAP,KAA0BC,EAA1B,KAgCA,OACI,gCACI,sBAAKrE,UAAU,6CAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,eAAC,IAAD,CAAMA,UAAU,uCAAuCiE,GAAG,IAA1D,UAII,qBAAKjE,UAAU,6GACf,qBAAKA,UAAU,oGAEnB,sBAAKA,UAAU,8BAAf,UACI,cAACgE,EAAD,IACA,cAAC,IAAD,CAAShE,UAAU,wBAAwBiE,GAAG,QAAQC,gBAAgB,SAAtE,wBAIR,sBAAKlE,UAAU,0CAAf,UACI,cAAC,EAAD,IACA,wBAAQK,KAAK,SAASL,UAAS,yDAAoDoE,EAC7E,mGACA,iDAEF9D,QArDpB,WACI+D,GAAsBD,IAgDV,SAKI,qBAAKE,MAAM,6BAA6BtE,UAAS,6BAAgCuE,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAxH,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,qCAMrF,sBAAK7E,UAAS,oBAAeoE,EACvB,SACA,gEAFN,UAKI,qBAAKpE,UAAU,0BAAf,SACI,cAACgE,EAAD,MAEJ,sBAAKhE,UAAU,0CAAf,UAcI,cAAC,IAAD,CAASA,UAAU,mCAAmCiE,GAAG,QAAQC,gBAAgB,SAAjF,kBAEA,oBAAGlE,UAAU,sBAAsBiD,KAjFnD,SAAiBpI,GACb,IAAMiK,EAAQjK,EAAIkK,QAAQ,MAE1B,IAAc,GAAVD,EAAJ,CAIA,IAAIrH,EAAS5C,EAAIjG,UAAU,EAAGkQ,EAAQ,GAEhCE,EADQnK,EAAIjG,UAAUkQ,EAAQ,GAChBhQ,MAAM,KAE1B,GAAIkQ,EAAM9Q,OAAS,EACf,OAAO2G,EAKX,IAFA,IAAIoK,EAAY,GAEPC,EAAIF,EAAM9Q,OAAS,EAAGgR,EAAIF,EAAM9Q,OAAQgR,IAC7CzH,GAAUwH,EACVxH,GAAUuH,EAAME,GAChBD,EAAY,IAGhB,OAAOxH,GA0D8C0H,CAAQ3L,OAAO4L,SAASnC,MAAjE,UACI,mBAAGjD,UAAU,+BADjB,uBFjFCmD,EAKVrB,aAAe,CAClB+B,SAAU,KANGV,EASVkC,YAAcnO,E,mBGpBV,SAASoO,EAAT,GAAmC,IAAhBlG,EAAe,EAAfA,MAAOiB,EAAQ,EAARA,KACrC,OACI,sBAAKL,UAAU,4CAAf,UACKZ,GACG,sBAAMY,UAAU,OAAhB,SAAwBZ,IAElB,YAATiB,GACG,sBAAKL,UAAU,+BAA+BsE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAArG,UACI,wBAAQxE,UAAU,aAAauF,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKhB,OAAO,eAAeG,YAAY,MACxF,sBAAM5E,UAAU,aAAauE,KAAK,eAAeM,EAAE,uHAGjD,UAATxE,GACG,qBAAKL,UAAU,yBAAf,SACI,mBAAGA,UAAU,4CAGrB,qBAAK0F,KAAK,SAAV,SACKtG,GACG,sBAAMY,UAAU,SAAhB,SAA0BZ,SAW9CkG,EAAQxD,aAAe,CACnBzB,KAAM,W,qECzBH,SAASsF,GAAqBvK,EAAQwK,EAAK1P,EAASpC,GACvD,OAAO,IAAIsH,EAAO0B,IAAI+I,SAASD,EAAK1P,EAASpC,GAG1C,SAASgS,GAAqB7M,EAAQ2M,EAAK1P,EAASpC,GACvD,OAAO,IAAImF,EAAO6D,IAAI+I,SAASD,EAAK1P,EAASpC,G,sBCbpCiS,GAAc,iFAKpB,SAASC,GAASC,EAAMC,GAC3B,OAAQ,IAAIC,OAAOD,EAAM,KAAMvN,KAAKsN,GAGjC,SAASG,GAAMC,GAClB,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAG/C,SAASI,GAAUC,GACtB,OAAO,IAAIJ,SAAQ,SAACC,EAASI,GAAV,OACfD,GAAM,SAAC/L,EAAKiM,GACJjM,EACAgM,EAAOhM,GAEP4L,EAAQK,SAMjB,SAAeC,GAAtB,qC,8CAAO,WAAyBnN,EAAMoN,GAA/B,6BAAArO,EAAA,sDAAuCoL,EAAvC,+BAAkD,IAAlD,uBAEuB4C,IAAU,SAAAM,GAAE,OAAIrN,EAAKoD,IAAIkK,sBAAsBF,EAAQC,MAF9E,UAIgB,OAFTE,EAFP,yCAKWb,GAAMvC,GALjB,wDAQYoD,GARZ,mE,yBCLQ,kBAAsB,IAAD,EAC1BzP,EAAO,CACT0P,KAAM,SAAClF,GACEA,EAAQxM,SAAYR,EAAcsG,iBAAiB0G,EAAQxM,UAKhEgC,EAAKhC,QAAUwM,EAAQxM,QACvBgC,EAAK8B,QAAU0I,EAAQ1I,QAEvB9B,EAAK7B,WAAaX,EAAc4N,cAAcZ,EAAQxM,SACtDgC,EAAK5B,UAAYZ,EAAca,aAAamM,EAAQxM,SAEhDwM,EAAQ5G,SACR5D,EAAK4D,OAAS4G,EAAQ5G,OACtB5D,EAAK2P,QFpBd,SAAuB/L,EAAQ9B,EAAS1D,GAC3C,IAAM9B,EAAU,CACZsT,KAAI,OAAE9N,QAAF,IAAEA,IAAW,8CAGrB,MAAO,CACH+N,KAAM1B,GAAqBvK,EAAQkM,EAAgB1R,EAAU2R,eAAgBzT,GAC7E0T,OAAQ7B,GAAqBvK,EAAQqM,EAAoB7R,EAAUK,kBAAmBnC,GACtF4T,MAAO/B,GAAqBvK,EAAQuM,GAAW/R,EAAU8R,MAAMxR,QAASpC,GACxE8T,KAAMjC,GAAqBvK,EAAQyM,GAAUjS,EAAUgS,KAAM9T,GAC7DgU,KAAMnC,GAAqBvK,EAAQ2M,GAAUnS,EAAUkS,KAAMhU,GAC7DkU,YAAarC,GAAqBvK,EAAQ6M,EAAarS,EAAUoS,YAAalU,GAC9EoU,QAASvC,GAAqBvK,EAAQ+M,EAASvS,EAAUsS,QAASpU,IEQ3CsU,CAAcpG,EAAQ5G,OAAQ4G,EAAQ1I,QAAS9B,EAAK5B,YAGnEoM,EAAQ/I,SACRzB,EAAKyB,OAAS+I,EAAQ/I,OACtBzB,EAAK6Q,QFTd,SAAuBpP,EAAQK,EAAS1D,GAC3C,IAAM9B,EAAU,CACZsT,KAAM9N,GAGV,MAAO,CACHkO,OAAQ1B,GAAqB7M,EAAQwO,EAAoB7R,EAAUK,kBAAmBnC,GACtF4T,MAAO5B,GAAqB7M,EAAQ0O,GAAW/R,EAAU8R,MAAMxR,QAASpC,GACxE8T,KAAM9B,GAAqB7M,EAAQ4O,GAAUjS,EAAUgS,KAAM9T,GAC7DgU,KAAMhC,GAAqB7M,EAAQ8O,GAAUnS,EAAUkS,KAAMhU,GAC7DoU,QAASpC,GAAqB7M,EAAQkP,EAASvS,EAAUsS,QAASpU,IED3CwU,CAActG,EAAQ/I,OAAQ+I,EAAQ1I,QAAS9B,EAAK5B,aAjBnEwE,QAAQC,IAAI,0DAoBpBkO,SAAU,CACNC,qBAAsB,oBACtBC,qBAAsB,wBAAMrT,WAAU,UAACoE,OAAOkP,aAAaC,QAAQnR,EAAK+Q,SAASC,6BAA3C,QAAoExT,EAAcyT,yBACxHG,qBAAsB,SAACpU,GACfA,GACAgF,OAAOkP,aAAaG,QAAQrR,EAAK+Q,SAASC,qBAAsBhU,IAGxEsU,gBAAiB,WACb,IAAMtT,EAAUgG,IAAKC,MAAMsN,MAAsB,OAAhBvR,EAAKhC,QAAmB,EAAIgC,EAAKhC,SAClE,MAAM,wCAAN,OAA+CgC,EAAK8B,QAApD,wBAA2E9D,KAGnFwT,SAAO,GACH5L,cAAe,SAAA5I,GAAK,OAAI4I,EAAc5I,IACtCyU,eAAgB,SAAAzU,GAAK,OXvD1B,SAAwB0U,GAC3B,IAAMlE,EAAQ,IAAImE,KAAKD,GAAME,cAActU,MAAM,KACjD,MAAM,GAAN,OAAUkQ,EAAM,GAAhB,YAAsBA,EAAM,IWqDKiE,CAAezU,IACxC6U,eAAgB,SAAA7U,GAAK,OX1C1B,SAAwB8U,GAC3B,IAAMC,EAAI5S,SAAS2S,EAAW,MACxB7D,EAAI6D,EAAW,KACfE,EAAI7S,SAAS8O,EAAI,IACjBgE,EAAI9S,SAAS8O,EAAI,IAEjBiE,EAAKH,EAAI,GAAJ,WAAaA,GAAb,UAAsBA,GAC3BI,EAAKH,EAAI,GAAJ,WAAaA,GAAb,UAAsBA,GAC3BI,EAAKH,EAAI,GAAJ,WAAaA,GAAb,UAAsBA,GAEjC,MAAM,GAAN,OAAUC,EAAV,YAAgBC,EAAhB,YAAsBC,GWgCWP,CAAe7U,IACxCuJ,cAAe,SAAAvJ,GAAK,OAAIuJ,EAAcvJ,IACtCwJ,iBAAkB,SAACxJ,GAAD,IAAQ+I,EAAR,uDAAsB,EAAGC,EAAzB,uDAAuC,EAAvC,OAA6CQ,EAAiBxJ,EAAO+I,EAAaC,IACpGU,mBAAoB,SAAC1J,GAAD,IAAQ+I,EAAR,uDAAsB,EAAGC,EAAzB,uDAAuC,EAAvC,OAA6CU,EAAmB1J,EAAO+I,EAAaC,IACxGlK,QAAS,SAACkB,EAAO/B,GAAR,OAAqB2C,WAAW9B,kBAAQkB,EAAO/B,KACxDoX,kBAAmB,SAAArV,GAAK,OAAIgD,EAAKwR,QAAQ1V,QAAQkB,EAAOgD,EAAK7B,WAAWlD,WACxEqX,mBAAoB,SAAAtV,GAAK,OAAIgD,EAAKwR,QAAQ1V,QAAQkB,EAAOgD,EAAK5B,UAAUE,YAAYrD,WACpFsX,mBAAoB,SAAAvV,GAAK,OAAIgD,EAAKwR,QAAQ1V,QAAQkB,EAAOgD,EAAK5B,UAAUG,YAAYtD,WACpFuX,iBAAkB,SAAAxV,GAAK,OAAIgD,EAAKwR,QAAQ1V,QAAQkB,EAAOgD,EAAK5B,UAAU8R,MAAMjV,WAC5EwX,eAAgB,SAACzV,EAAO/B,GACpB,GAAqB,kBAAV+B,EACP,OAAOY,WAAWZ,EAAM0V,QAAQzX,IAGpC,IAAMqS,EAAQtQ,EAAMuQ,QAAQ,KAE5B,IAAc,GAAVD,EAAa,CACb,IAAMqF,EAAQ3V,EAAMN,QAAU4Q,EAAQ,GAAKrS,EAEvC0X,EAAQ,IACR3V,EAAQA,EAAM4V,OAAO,EAAG5V,EAAMN,OAASiW,IAI/C,OAAO3V,GAEXC,MAAO,SAACD,EAAO/B,GAAR,OAAqBgC,gBAAM+C,EAAKwR,QAAQiB,eAAezV,EAAO/B,GAAWA,IAChF4X,gBAAiB,SAAA7V,GAAK,OAAIgD,EAAKwR,QAAQvU,MAAMD,EAAOgD,EAAK7B,WAAWlD,WACpE6X,iBAAkB,SAAA9V,GAAK,OAAIgD,EAAKwR,QAAQvU,MAAMD,EAAOgD,EAAK5B,UAAUE,YAAYrD,WAChF8X,iBAAkB,SAAA/V,GAAK,OAAIgD,EAAKwR,QAAQvU,MAAMD,EAAOgD,EAAK5B,UAAUG,YAAYtD,WAChF+X,eAAgB,SAAAhW,GAAK,OAAIgD,EAAKwR,QAAQvU,MAAMD,EAAOgD,EAAK5B,UAAU8R,MAAMjV,WACxE4L,eAAgB,SAAC7J,EAAO8J,GAAR,OAA6BD,EAAe7J,EAAO8J,KAlChE,iCAmCa,SAAC9J,EAAO8J,EAAkBf,EAAaC,GAAvC,OAAuDa,EAAe7J,EAAO8J,EAAkBf,EAAaC,MAnCzH,mCAoCe,SAAAhJ,GAAK,OAAIgD,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK7B,WAAWlD,aApC3E,mCAqCe,SAAC+B,EAAO+I,EAAaC,GAArB,OAAqChG,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK7B,WAAWlD,SAAU8K,EAAaC,MArC9H,oCAsCgB,SAAAhJ,GAAK,OAAIgD,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK5B,UAAUE,YAAYrD,aAtCvF,oCAuCgB,SAAC+B,EAAO+I,EAAaC,GAArB,OAAqChG,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK5B,UAAUE,YAAYrD,SAAU8K,EAAaC,MAvC1I,oCAwCgB,SAAAhJ,GAAK,OAAIgD,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK5B,UAAUG,YAAYtD,aAxCvF,oCAyCgB,SAAC+B,EAAO+I,EAAaC,GAArB,OAAqChG,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK5B,UAAUG,YAAYtD,SAAU8K,EAAaC,MAzC1I,kCA0Cc,SAAAhJ,GAAK,OAAIgD,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK5B,UAAU8R,MAAMjV,aA1C/E,kCA2Cc,SAAC+B,EAAO+I,EAAaC,GAArB,OAAqChG,EAAKwR,QAAQ3K,eAAe7J,EAAOgD,EAAK5B,UAAU8R,MAAMjV,SAAU8K,EAAaC,MA3ClI,qCA4CiB,SAAChJ,EAAOiW,GAAR,OAAiBjT,EAAKwR,QAAQ3K,eAAe7J,EAAOiW,EAAKC,aAAaC,QAAQlY,aA5C/F,qCA6CiB,SAAC+B,EAAOiW,EAAMlN,EAAaC,GAA3B,OAA2ChG,EAAKwR,QAAQ3K,eAAe7J,EAAOiW,EAAKC,aAAaC,QAAQlY,SAAU8K,EAAaC,MA7ChJ,GA+CPM,OAAQ,SAAArL,GACJ,IAAMmY,EAAU,CACZtX,QAAS,SAACkB,GAAD,OAAWgD,EAAKwR,QAAQ1V,QAAQkB,EAAO/B,IAChD4L,eAAgB,SAAC7J,GAAD,IAAQ+I,EAAR,uDAAsB,EAAGC,EAAzB,uDAAuC,EAAvC,OAA6ChG,EAAKwR,QAAQ3K,eAAe7J,EAAO/B,EAAU8K,EAAaC,IACvHqN,YAAa,SAACrW,GAAD,IAAQ+I,EAAR,uDAAsB,EAAGC,EAAzB,uDAAuC,EAAvC,OAA6CoN,EAAQvM,eAAe7J,EAAO+I,EAAaC,KAGzG,OAAOoN,GAEXE,MAAO,CACHC,SAAU,SAACC,GAAD,OAAavE,IAAU,SAAAM,GAAE,OAAIvP,EAAK4D,OAAO0B,IAAIiO,SAASC,EAASjE,OACzEkE,oBAAoB,WAAD,4BAAE,WAAMd,GAAN,qBAAA1R,EAAA,sEACIjB,EAAKsT,MAAMC,SAAS,UADxB,cACXG,EADW,OAEXC,EAAMhC,KAAKgC,MAAQ,IAFR,SAGI3T,EAAKsT,MAAMC,SAASG,EAAO5N,OAAS6M,GAHxC,cAGXiB,EAHW,OAIXC,GAAaH,EAAOI,UAAYF,EAAOE,WAAanB,EAC1D/P,QAAQC,IAAR,sBAA2BgR,EAA3B,kBAA8CH,EAAOI,UAArD,iBAAuEF,EAAOE,UAA9E,cAA6FJ,EAAOI,UAAYF,EAAOE,UAAvH,oBAA4IH,EAAMD,EAAOI,UAAzJ,QALiB,kBAOVD,GAPU,4CAAF,mDAAC,IAUxBhE,KAAM,CACFkE,iBAAiB,WAAD,4BAAE,WAAOC,EAAc/Y,GAArB,iBAAAgG,EAAA,6DAERgT,GAA2G,IAA5FjQ,IAAKC,MAAMiQ,KAAKF,GAAcG,IAAInQ,IAAKC,MAAMiQ,KAAKlU,EAAK5B,UAAUE,YAAYI,UAFpF,SAGSuQ,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQE,KAAKrK,QAAQ4O,cAAc3O,KAAK8J,MAHtE,cAGR8E,EAHQ,yBAKPJ,EACD,CACEK,aAActU,EAAKwR,QAAQ1V,QAAQuY,EAASE,SAAUtZ,GACtDuZ,mBAAoBxU,EAAKwR,QAAQ1V,QAAQuY,EAASI,SAAUzU,EAAK5B,UAAUE,YAAYrD,WAEzF,CACEqZ,aAActU,EAAKwR,QAAQ1V,QAAQuY,EAASI,SAAUxZ,GACtDuZ,mBAAoBxU,EAAKwR,QAAQ1V,QAAQuY,EAASE,SAAUvU,EAAK5B,UAAUE,YAAYrD,YAZjF,2CAAF,qDAAC,GAejByZ,qBAAsB,kBAAM1U,EAAK6P,KAAKkE,iBAAiB/T,EAAK5B,UAAU8R,MAAMxR,QAASsB,EAAK5B,UAAU8R,MAAMjV,WAC1G0Z,4BAA6B,WACzB,IAAMlV,EAAmBjC,EAAcoX,oBAAoB5U,EAAKhC,SAEhE,MAAO,CACH6W,oBAAqB7U,EAAKwR,QAAQgB,iBAAiB/S,EAAiB6U,cACpEQ,0BAA2B9U,EAAKwR,QAAQc,mBAAmB7S,EAAiB+U,uBAIxF9D,QAAS,CACLqE,MAAO,SAACC,EAAcC,EAAaC,EAAwBC,EAAmBC,EAAcC,EAAaC,GAAlG,OAA6HrG,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQe,QAAQlL,QAAQuP,MAAMC,EAAcC,EAAaC,EAAwBC,EAAmBC,EAAcC,EAAaC,GAAwB7P,KAAK8J,OACrTgG,KAAK,WAAD,4BAAE,WAAOP,EAAcC,EAAaC,EAAwBC,EAAmBC,EAAcC,EAAaC,EAAwB7I,EAAI+I,EAAUC,GAA9I,SAAAxU,EAAA,kEAA+JoO,GAA/J,KAAyKrP,EAAK4D,OAA9K,SAA4LqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQH,QAAQlL,QAAQ+P,KAAKP,EAAcC,EAAaC,EAAwBC,EAAmBC,EAAcC,EAAaC,EAAwB7I,EAAI+I,EAAUC,GAAcC,KAAKnG,MAAxY,4GAAF,qEAAC,GACLoG,2BAA2B,WAAD,4BAAE,WACxBzC,EACAjY,EACA2a,GAHwB,mBAAA3U,EAAA,6DAKlB4U,EAAgBrY,EAAcsY,qBAAqB9V,EAAKhC,SACxD+X,EAAeF,EANG,SAOH7V,EAAK0Q,QAAQqE,MAAMc,EAAe3C,EAAc0C,EAAkB5V,EAAKwR,QAAQvU,MAAM,EAAGhC,GAAW8a,EAAc/V,EAAK5B,UAAUG,YAAYG,SAAS,GAPlJ,cAOlBsX,EAPkB,yBASjBhW,EAAKwR,QAAQe,mBAAmByD,IATf,2CAAF,uDAAC,GAW3BC,yBAAyB,WAAD,4BAAE,WACtB/C,EACAjY,EACA2a,GAHsB,mBAAA3U,EAAA,6DAKhB4U,EAAgBrY,EAAcsY,qBAAqB9V,EAAKhC,SACxD+X,EAAeF,EANC,SAOD7V,EAAK0Q,QAAQqE,MAAMc,EAAe3C,EAAc0C,EAAkB5V,EAAKwR,QAAQvU,MAAM,EAAGhC,GAAW8a,EAAc/V,EAAK5B,UAAU8R,MAAMxR,SAAS,GAP9I,cAOhBsX,EAPgB,yBASfhW,EAAKwR,QAAQgB,iBAAiBwD,IATf,2CAAF,uDAAC,IAY7BhG,OAAQ,CACJ2F,2BAA2B,WAAD,4BAAE,WAAO3B,EAAc/Y,GAArB,eAAAgG,EAAA,sEACFgO,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQK,OAAOxK,QAAQ0Q,cAAclW,EAAKwR,QAAQvU,MAAM,EAAGhC,GAAW,CAC7G+Y,EACAhU,EAAK5B,UAAUE,YAAYI,QAC3BsB,EAAK5B,UAAUG,YAAYG,UAC5B+G,KAAK8J,MALgB,cAClB4G,EADkB,yBAOjBnW,EAAKwR,QAAQe,mBAAmB4D,EAAQA,EAAQzZ,OAAS,KAPxC,2CAAF,qDAAC,GAS3B0Z,+BAAgC,WAC5B,OAAOpW,EAAKgQ,OAAO2F,2BAA2B3V,EAAK5B,UAAU8R,MAAMxR,QAASsB,EAAK5B,UAAU8R,MAAMjV,WAErGob,iCAAiC,WAAD,4BAAE,4BAAApV,EAAA,sEACRgO,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQK,OAAOxK,QAAQ0Q,cAAclW,EAAKwR,QAAQvU,MAAM,EAAG+C,EAAK5B,UAAUE,YAAYrD,UAAW,CACxI+E,EAAK5B,UAAUE,YAAYI,QAC3BsB,EAAK5B,UAAUG,YAAYG,UAC5B+G,KAAK8J,MAJsB,cACxB4G,EADwB,yBAMvBnW,EAAKwR,QAAQe,mBAAmB4D,EAAQA,EAAQzZ,OAAS,KANlC,2CAAF,kDAAC,GAQjCuZ,yBAAyB,WAAD,4BAAE,WAAOjC,EAAc/Y,GAArB,eAAAgG,EAAA,sEACAgO,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQK,OAAOxK,QAAQ0Q,cAAclW,EAAKwR,QAAQvU,MAAM,EAAGhC,GAAW,CAC7G+Y,EACAhU,EAAK5B,UAAUE,YAAYI,QAC3BsB,EAAK5B,UAAU8R,MAAMxR,UACtB+G,KAAK8J,MALc,cAChB4G,EADgB,yBAOfnW,EAAKwR,QAAQgB,iBAAiB2D,EAAQA,EAAQzZ,OAAS,KAPxC,2CAAF,qDAAC,GASzB4Z,iCAAiC,WAAD,4BAAE,WAAOC,GAAP,eAAAtV,EAAA,sEACRgO,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQK,OAAOxK,QAAQ0Q,cAAclW,EAAKwR,QAAQqB,gBAAgB0D,GAAqB,CAC9HvW,EAAK5B,UAAUE,YAAYI,QAC3BsB,EAAK5B,UAAU8R,MAAMxR,UACtB+G,KAAK8J,MAJsB,cACxB4G,EADwB,yBAMvBnW,EAAKwR,QAAQgB,iBAAiB2D,EAAQA,EAAQzZ,OAAS,KANhC,2CAAF,mDAAC,GAQjC8Z,iCAAiC,WAAD,4BAAE,WAAOC,GAAP,eAAAxV,EAAA,sEACRgO,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQK,OAAOxK,QAAQ0Q,cAAclW,EAAKwR,QAAQwB,eAAeyD,GAAoB,CAC5HzW,EAAK5B,UAAU8R,MAAMxR,QACrBsB,EAAK5B,UAAUE,YAAYI,UAC5B+G,KAAK8J,MAJsB,cACxB4G,EADwB,yBAMvBnW,EAAKwR,QAAQa,kBAAkB8D,EAAQA,EAAQzZ,OAAS,KANjC,2CAAF,mDAAC,GAQjCga,4BAA4B,WAAD,4BAAE,WAAOH,EAAoBI,EAAmBC,GAA9C,SAAA3V,EAAA,kEAClBoO,GADkB,KACRrP,EAAK4D,OADG,SAEfqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQb,OAAOxK,QAAQqR,mDAC9C7W,EAAKwR,QAAQwB,eAAe2D,GAC5B,CAAC3W,EAAK5B,UAAUE,YAAYI,QAASsB,EAAK5B,UAAU8R,MAAMxR,SAC1DkY,GAAwB5W,EAAK8B,QAC7B3C,SAAUwS,KAAKgC,MAAQ,IAAQ,OACjC+B,KAAK,CAAE1Y,MAAOgD,EAAKwR,QAAQqB,gBAAgB0D,IAAuBhH,MAP/C,4GAAF,uDAAC,GAS5BuH,4BAA4B,WAAD,4BAAE,WAAOL,EAAmBM,EAAyBH,GAAnD,SAAA3V,EAAA,kEAClBoO,GADkB,KACRrP,EAAK4D,OADG,SAEfqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQb,OAAOxK,QAAQwR,mDAC9ChX,EAAKwR,QAAQwB,eAAeyD,GAC5BzW,EAAKwR,QAAQqB,gBAAgBkE,GAC7B,CAAC/W,EAAK5B,UAAU8R,MAAMxR,QAASsB,EAAK5B,UAAUE,YAAYI,SAC1DkY,GAAwB5W,EAAK8B,QAC7B3C,SAAUwS,KAAKgC,MAAQ,IAAQ,OACjC+B,KAAKnG,MARc,4GAAF,uDAAC,IAWhCW,MAAO,CACH+G,UAAU,WAAD,4BAAE,WAAOjD,GAAP,eAAA/S,EAAA,6DACD2C,EAASuK,GAAqBnO,EAAK4D,OAAQsT,GAAQlD,EAAc,CAAEpE,KAAM5P,EAAK8B,UAD7E,kBAEAmN,IAAU,SAAAM,GAAE,OAAI3L,EAAO4B,QAAQyR,UAAUjX,EAAK8B,SAAS2D,KAAK8J,OAF5D,2CAAF,mDAAC,GAIV4H,SAAS,WAAD,4BAAE,WAAOP,EAAWZ,GAAlB,SAAA/U,EAAA,kEAA6BoO,GAA7B,KAAuCrP,EAAK4D,OAA5C,SAA0DqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQX,MAAM1K,QAAQ2R,SAASP,EAAWZ,GAAQN,KAAKnG,MAAtI,4GAAF,qDAAC,GACT6H,aAAc,SAACC,EAAOC,GAAR,OAAoBrI,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQO,MAAM1K,QAAQ+R,UAAUF,EAAOC,GAAS7R,KAAK8J,OAC5GiI,iBAAkB,kBAAMvI,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQO,MAAM1K,QAAQiS,sBAAsBhS,KAAK8J,OAC9FmI,qBAAqB,WAAD,4BAAE,sBAAAzW,EAAA,kEAAYoO,GAAZ,KAAsBrP,EAAK4D,OAA3B,SAAyCqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQO,MAAM1K,QAAQkS,uBAAuBhC,KAAKnG,MAAhH,4GAAF,kDAAC,GACrBoI,cAAc,WAAD,4BAAE,sBAAA1W,EAAA,kEAAYoO,GAAZ,KAAsBrP,EAAK4D,OAA3B,SAAyCqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQX,MAAM1K,QAAQoS,QAAQ5X,EAAK2P,QAAQK,OAAO1T,QAAQoC,QAAS6P,IAAamH,KAAKnG,MAAnJ,4GAAF,kDAAC,GACdsI,YAAY,WAAD,4BAAE,sBAAA5W,EAAA,kEAAYoO,GAAZ,KAAsBrP,EAAK4D,OAA3B,SAAyCqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQX,MAAM1K,QAAQoS,QAAQ5X,EAAK2P,QAAQS,KAAK9T,QAAQoC,QAAS6P,IAAamH,KAAKnG,MAAjJ,4GAAF,kDAAC,GACZuI,UAAU,WAAD,4BAAE,WAAOC,EAAWR,GAAlB,SAAAtW,EAAA,gFAAgCsW,EAAUS,GAAGhU,IAAKC,MAAMiQ,KAAK,KAAcqD,EAAUpD,IAAInQ,IAAKC,MAAMiQ,KAAK6D,KAAe,GAAxH,2CAAF,qDAAC,GACVE,qBAAqB,WAAD,4BAAE,WAAOX,EAASS,GAAhB,eAAA9W,EAAA,6DAClB2B,QAAQC,IAAR,qBAA0BkV,IADR,KAEA/T,IAAKC,MAFL,SAEsBjE,EAAKkQ,MAAMkH,aAAapX,EAAK8B,QAASwV,GAF5D,0BAEZC,EAFY,KAEWrD,KAFX,kCAGXlU,EAAKkQ,MAAM4H,UAAUC,EAAWR,IAHrB,2CAAF,qDAAC,IAMzBnH,KAAM,CACFgH,aAAc,kBAAMpX,EAAKkQ,MAAMkH,aAAapX,EAAK8B,QAAS9B,EAAK2P,QAAQS,KAAK9T,QAAQoC,UACpFwZ,aAAc,SAACC,GAAD,OAAelJ,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQS,KAAK5K,QAAQ4S,oBAAoBD,GAAW1S,KAAK8J,OAC3G8I,sBAAuB,SAACC,GAAD,OAAYrJ,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQS,KAAK5K,QAAQ+S,mBAAmBD,GAAQ7S,KAAK8J,OAC7GiJ,uBAAwB,SAACF,EAAQG,EAAQ9F,GAAjB,OAA2B1D,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQS,KAAK5K,QAAQkT,oBAAoBJ,EAAQG,EAAQ9F,GAAOlN,KAAK8J,OAC7IoJ,kBAAmB,SAACL,GAAD,OAAYrJ,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQS,KAAK5K,QAAQoT,eAAeN,GAAQ7S,KAAK8J,OACrGsJ,aAAa,WAAD,4BAAE,WAAOP,EAAQtC,EAAQ8C,GAAvB,SAAA7X,EAAA,6DACV2B,QAAQC,IAAI,YADF,KAEHwM,GAFG,KAEOrP,EAAK4D,OAFZ,SAE0BqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQT,KAAK5K,QAAQuT,IAAIT,EAAQtC,EAAQ8C,GAASpD,KAAKnG,MAFtG,4GAAF,uDAAC,GAIbwJ,IAAI,WAAD,4BAAE,WAAOT,EAAQrD,EAAa+D,EAAcF,EAASG,GAAnD,qBAAAhY,EAAA,6DACKiY,EAAoBlZ,EAAKwR,QAAQvU,MAAM+b,EAAc/D,EAAYnN,KAAKqL,QAAQlY,UADnF,KAEiB+E,EAAKwR,QAFtB,SAE4CxR,EAAK0Q,QAAQqE,MAAME,EAAYnN,KAAKkI,OAAQiF,EAAYnN,KAAKoI,MAAO+E,EAAYW,iBAAkBsD,EAAmBD,EAAcjJ,OAAQiJ,EAAc/I,OAAO,GAF5M,+BAEoN+I,EAAc9F,QAAQlY,SAArOke,EAFL,KAE8Brd,QAF9B,qBAGKsd,EAAYD,EAAYnZ,EAAK+Q,SAASE,uBAAyB,IAC/DwE,EAAe0D,EAAYC,EAJhC,KAMM/J,GANN,KAMgBrP,EAAK4D,OANrB,UAMmCqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQT,KAAK5K,QAAQuT,IAAIT,EAAQrD,EAAYnN,KAAKkI,OAAQiF,EAAYnN,KAAKoI,MAAO+E,EAAYW,iBAAkB5V,EAAKwR,QAAQvU,MAAMkc,EAAWF,EAAc9F,QAAQlY,UAAW+E,EAAKwR,QAAQvU,MAAMwY,EAAcwD,EAAc9F,QAAQlY,UAAW6d,GAASpD,KAAKnG,MANvT,8GAAF,2DAAC,GAQJ8J,SAAS,WAAD,4BAAE,WAAOf,EAAQQ,GAAf,SAAA7X,EAAA,kEAA2BoO,GAA3B,KAAqCrP,EAAK4D,OAA1C,SAAwDqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQT,KAAK5K,QAAQ6T,SAASf,EAAQQ,GAASpD,KAAKnG,MAAjI,4GAAF,qDAAC,GACT+J,MAAM,WAAD,4BAAE,WAAOhB,GAAP,SAAArX,EAAA,kEAAkBoO,GAAlB,KAA4BrP,EAAK4D,OAAjC,SAA+CqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQT,KAAK5K,QAAQ8T,MAAMhB,GAAQ5C,KAAKnG,MAA5G,4GAAF,mDAAC,GACNmI,qBAAsB,SAACY,EAAQQ,GAAT,OAAqB9Y,EAAKoQ,KAAKyI,aAAaP,EAAQ,EAAGQ,IAC7Eb,qBAAqB,WAAD,4BAAE,WAAOF,GAAP,eAAA9W,EAAA,kEACA+C,IAAKC,MADL,SACsBjE,EAAKoQ,KAAKgH,eADhC,0BACZG,EADY,KACWrD,KADX,kCAEXlU,EAAKkQ,MAAM4H,UAAUC,EAAWR,IAFrB,2CAAF,mDAAC,IAKzBjH,KAAM,CACFiJ,sBAAuB,SAACtG,GAAD,OAAUA,EAAK2C,iBAAL,UAA2B3C,EAAKuG,cAAcpU,OAA9C,YAAwD6N,EAAKwG,cAAcrU,QAAW6N,EAAKC,aAAaC,QAAQ/N,QACjJsU,iBAAkB,SAAC7D,EAAe3C,EAAc0C,EAAkB+D,EAAS5D,EAAc6D,GAAvE,OAAuF3K,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQW,KAAK9K,QAAQkU,iBAAiB7D,EAAe3C,EAAc0C,EAAkB+D,EAAS5D,EAAc6D,GAAanU,KAAK8J,OAC5P6H,aAAc,SAACxT,GAAD,OAAYqL,IAAU,SAAAM,GAAE,OAAI3L,EAAO4B,QAAQ+R,UAAUvX,EAAK8B,QAAS9B,EAAK2P,QAAQW,KAAKhU,QAAQoC,SAAS+G,KAAK8J,OACzHsK,YAAY,WAAD,4BAAE,WAAOpY,GAAP,SAAAR,EAAA,kEAAkBoO,GAAlB,KAA4BrP,EAAK4D,OAAjC,SAA+CqL,IAAU,SAAAM,GAAE,OAAI9N,EAAO+D,QAAQoS,QAAQ5X,EAAK2P,QAAQW,KAAKhU,QAAQoC,QAAS6P,IAAamH,KAAKnG,MAA3I,4GAAF,mDAAC,GACZuK,YAAa,SAAC3B,GAAD,OAAelJ,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQW,KAAK9K,QAAQuU,mBAAmB5B,GAAW1S,KAAK8J,OACzGyK,yBAA0B,SAAC7B,GAAD,OAAelJ,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQW,KAAK9K,QAAQyU,gCAAgC9B,GAAW1S,KAAK8J,OACnI2K,eAAe,WAAD,4BAAE,WAAOC,EAAQnE,GAAf,SAAA/U,EAAA,kEAA0BoO,GAA1B,KAAoCrP,EAAK4D,OAAzC,SAAuDqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQP,KAAK9K,QAAQmU,QAAQQ,EAAQnE,EAAQhW,EAAK+Q,SAASE,wBAAwByE,KAAKnG,MAApK,4GAAF,qDAAC,GACfoK,QAAQ,WAAD,4BAAE,WAAOQ,EAAQlF,EAAa+D,EAAc/F,GAA1C,qBAAAhS,EAAA,6DACCiY,EAAoBlZ,EAAKwR,QAAQvU,MAAM+b,EAAc/D,EAAYnN,KAAKqL,QAAQlY,UAD/E,KAEa+E,EAAKwR,QAFlB,SAEwCxR,EAAK0Q,QAAQqE,MAAME,EAAYnN,KAAKkI,OAAQiF,EAAYnN,KAAKoI,MAAO+E,EAAYW,iBAAkBsD,EAAmBjG,EAAKC,aAAalD,OAAQiD,EAAKC,aAAahD,MAAO+C,EAAK2C,kBAFrN,+BAEwO3C,EAAKC,aAAaC,QAAQlY,SAAjQke,EAFD,KAE0Brd,QAF1B,qBAGCsd,EAAYD,EAAYnZ,EAAK+Q,SAASE,uBAAyB,IAC/DwE,EAAe0D,EAAYC,EAJ5B,KAME/J,GANF,KAMYrP,EAAK4D,OANjB,UAM+BqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQP,KAAK9K,QAAQmU,QAAQQ,EAAQlF,EAAYnN,KAAKkI,OAAQiF,EAAYnN,KAAKoI,MAAO+E,EAAYW,iBAAkB5V,EAAKwR,QAAQvU,MAAMkc,EAAWlG,EAAKC,aAAaC,QAAQlY,UAAW+E,EAAKwR,QAAQvU,MAAMwY,EAAcxC,EAAKC,aAAaC,QAAQlY,WAAWya,KAAKnG,MANtT,8GAAF,yDAAC,GAQR6K,SAAS,WAAD,4BAAE,WAAOD,EAAQnE,GAAf,SAAA/U,EAAA,kEAA0BoO,GAA1B,KAAoCrP,EAAK4D,OAAzC,SAAuDqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQP,KAAK9K,QAAQ4U,SAASD,EAAQnE,GAAQN,KAAKnG,MAA/H,4GAAF,qDAAC,GACT8K,UAAU,WAAD,4BAAE,WAAOF,GAAP,SAAAlZ,EAAA,kEAAkBoO,GAAlB,KAA4BrP,EAAK4D,OAAjC,SAA+CqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQP,KAAK9K,QAAQ6U,UAAUF,GAAQzE,KAAKnG,MAAhH,4GAAF,mDAAC,GACV+K,UAAU,WAAD,4BAAE,WAAOH,GAAP,SAAAlZ,EAAA,kEAAkBoO,GAAlB,KAA4BrP,EAAK4D,OAAjC,SAA+CqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQP,KAAK9K,QAAQ+U,yBAAyBJ,EAAQna,EAAK+Q,SAASE,wBAAwByE,KAAKnG,MAArK,4GAAF,mDAAC,GACViL,iBAAiB,WAAD,4BAAE,WAAOL,EAAQM,GAAf,SAAAxZ,EAAA,kEAA4BoO,GAA5B,KAAsCrP,EAAK4D,OAA3C,SAAyDqL,IAAU,SAAAM,GAAE,OAAIvP,EAAK6Q,QAAQP,KAAK9K,QAAQgV,iBAAiBL,EAAQM,EAAUza,EAAK+Q,SAASE,wBAAwByE,KAAKnG,MAAjL,4GAAF,qDAAC,GACjB0I,qBAAqB,WAAD,4BAAE,WAAOhF,EAAM8E,GAAb,iBAAA9W,EAAA,6DACZ2C,EAASuK,GAAqBnO,EAAK4D,OAAQqP,EAAK2C,iBAAmB9F,EAAiBoH,GAAQjE,EAAKC,aAAahD,MAAO,CAAEN,KAAM5P,EAAK8B,UADtH,KAEAkC,IAAKC,MAFL,SAEsBjE,EAAKsQ,KAAK8G,aAAaxT,GAF7C,0BAEZ2T,EAFY,KAEWrD,KAFX,kCAGXlU,EAAKkQ,MAAM4H,UAAUC,EAAWR,IAHrB,2CAAF,qDAAC,GAKrBmD,4BAA4B,WAAD,4BAAE,WAAOxK,EAAO+C,GAAd,eAAAhS,EAAA,sEACJjB,EAAK0Q,QAAQqE,MAAM7E,EAAMpI,KAAKkI,OAAQE,EAAMpI,KAAKoI,MAAOA,EAAM0F,iBAAkB5V,EAAKwR,QAAQvU,MAAM,EAAGiT,EAAMpI,KAAKqL,QAAQlY,UAAWgY,EAAKC,aAAalD,OAAQiD,EAAKC,aAAahD,MAAO+C,EAAK2C,kBADxL,cACnBI,EADmB,yBAGlBhW,EAAKwR,QAAQ1V,QAAQka,EAAQ/C,EAAKC,aAAaC,QAAQlY,WAHrC,2CAAF,qDAAC,IAMhCuV,YAAa,CACTmK,QAAS,SAAC3G,GAAD,OAAkB/E,IAAU,SAAAM,GAAE,OAAIvP,EAAK2P,QAAQa,YAAYhL,QAAQmV,QAAQ3G,GAAcvO,KAAK8J,SAI/G,OAAOvP,EA/SI,GCjBF4a,GAAgB,QAChBC,GAAe,IAsBrB,SAASC,GAA2BC,EAAgBlH,EAAWmH,EAAaC,EAAYC,GAE3F,OADYC,GAAgBJ,EAAgBlH,EAAWmH,EAAcC,EAAYA,GACnEC,EAAYD,EAGvB,SAASE,GAAgBJ,EAAgBlH,EAAWmH,EAAa/a,GACpE,OAAOmb,GAAiBL,EAAgBlH,GAAa5T,EAAU+a,EAG5D,SAASK,GAAqBN,EAAgBlH,EAAWqH,GAC5D,OAAOE,GAAiBL,EAAgBlH,GAAaqH,EAGzD,SAASE,GAAiBL,EAAgBlH,GACtC,OAAO,MAAekH,EAAiBlH,E,cCpCpC,SAASyH,GAAT,GAAuD,IAA9BC,EAA6B,EAA7BA,UAAW1Z,EAAkB,EAAlBA,SAAU2Z,EAAQ,EAARA,KACjD,EAAgD/Q,qBAAhD,mBAAOgR,EAAP,KAAyBC,EAAzB,KACA,EAA0CjR,qBAA1C,mBAAOkR,EAAP,KAAsBC,EAAtB,KAEA,EAA+BC,aAAUJ,EAAkBE,GAAnDG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAEhB,OACI,eAAC,IAAD,CAASC,GAAG,OAAZ,UACI,cAAC,IAAQC,OAAT,CAAgBD,GAAG,IAAIE,IAAKR,EAAqBlT,UAAS,aAAQ+S,EAAS,OAAGC,QAAH,IAAGA,IAAQ,qBAAX,OAAkCA,QAAlC,IAAkCA,IAAQ,gBAA3D,yCAG1D,cAAC,IAAD,UACI,cAAC,IAAQW,MAAT,yBAAeD,IAAKN,EAAkB5U,MAAO8U,EAAOM,QAAYL,EAAWK,QAA3E,IAAmF5T,UAAU,sDAA7F,SACK3G,UCjBd,IAAMwa,GAAoBrd,OAAOsd,OAAO,CAC3CC,IAAK,IACLC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,cAAe,ICuBEH,G,kDAoBjB,WAAY1c,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT6c,aAAc9c,EAAM+c,aAAe/c,EAAMgd,YACzCC,uBAAuB,GAG3B,EAAKC,yBAA2B,EAAKA,yBAAyB1c,KAA9B,gBAChC,EAAK2c,QAAU,EAAKA,QAAQ3c,KAAb,gBATA,E,0CAYnB,WAAU,IAAD,OACCqT,EAAMhC,KAAKgC,MAAQ,IACnBuJ,EAAgC5b,KAAKxB,MAAMqd,mBAAqB7b,KAAKxB,MAAMsd,mBAC3EC,EAAiB7f,EAAc8f,kBAAkBC,GAAEvf,QAASR,EAAcsY,qBAAqByH,GAAEvf,UACjGwf,EAAgB,UAAMhgB,EAAcigB,qBAAqBF,GAAEvf,SAA3C,kBAA6DsD,KAAKxB,MAAMoQ,MAAMwN,iBAC9FC,EAAgBJ,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMyN,eAC5DC,EAAsBL,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM0N,qBAClEC,EAAoBN,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM2N,mBAChEC,EAAsBP,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM4N,qBAClEC,EAAgBR,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM6N,eAC5DC,EAAgBT,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM8N,eAC5DC,EAAcV,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM+N,aAC1DC,EAAqC,IAAhBD,EAAoB,EAAIN,EAAgBM,EAC7DE,EAAoBZ,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMiO,mBAChEnD,EAAcuC,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM8K,aAC1DoD,EAAmC,IAAhBpD,EAAoB,EAAI2C,EAAgB3C,EAC3DqD,EAAoBd,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMmO,mBAChEC,EAAyBf,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMoO,wBACrEC,EAAgBhB,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMqO,eAC5DC,EAAkBjB,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMsO,gBAAgBC,OAC9EC,EAAiB9gB,WAAW0D,KAAKxB,MAAMoQ,MAAMwO,eAAeC,MAAQ,IACpEC,EAA0BrB,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMwO,eAAeG,UAAUJ,OAC/FK,EAAoB,UAAMthB,EAAcigB,qBAAqBF,GAAEvf,SAA3C,oBAA+DsD,KAAKxB,MAAMoQ,MAAM6O,WACpGC,EAA6B7f,SAASmC,KAAKxB,MAAMoQ,MAAM8O,4BACvDC,EAAmD,GAA9BD,GAAmC7f,SAASmC,KAAKxB,MAAMoQ,MAAMgP,SAAWF,EAC7FG,EAAqB5B,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMiP,oBACjEC,EAAwB7B,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMkP,uBACpEC,EAAwB9B,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMmP,uBACpEC,EAAmB1hB,WAAW0D,KAAKxB,MAAMoQ,MAAMoP,kBAAoB,IACnEC,EAAoB3hB,WAAW0D,KAAKxB,MAAMoQ,MAAMqP,mBAAqB,IACrEC,EAAuB5hB,WAAW0D,KAAKxB,MAAMoQ,MAAMsP,sBAAwB,IAC3EC,EAAuB7hB,WAAW0D,KAAKxB,MAAMoQ,MAAMuP,sBAAwB,IAC3EC,EAAoB9hB,WAAW0D,KAAKxB,MAAMoQ,MAAMwP,mBAAqB,IACrEC,EAAwB/hB,WAAW0D,KAAKxB,MAAMoQ,MAAMyP,uBAAyB,IAC7EC,EAAsBhiB,WAAW0D,KAAKxB,MAAMoQ,MAAM0P,qBAAuB,IACzEC,EAAqB1gB,SAASmC,KAAKxB,MAAMoQ,MAAM2P,oBAC/CC,EAAsB3gB,SAASmC,KAAKxB,MAAMoQ,MAAM4P,qBAEhDC,EAAexC,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM6P,cAC3DC,EAAmBpiB,WAAW0D,KAAKxB,MAAMoQ,MAAM8P,kBAAoB,IACnEC,EAAiBriB,WAAW0D,KAAKxB,MAAMoQ,MAAM+P,gBAAkB,IAC/DC,EAAmBtiB,WAAW0D,KAAKxB,MAAMoQ,MAAMgQ,kBAAoB,IACnEC,EAAyBb,EAAoBA,EAAmBI,EAAoBQ,EACpFE,EAAsBX,EAAwBA,EAAuBC,EAAoBQ,EACzFG,EAAqB9C,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMmQ,mBAAmB5B,OACpF6B,EAAmB/C,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMoQ,iBAAiB7B,OAEhF8B,EAAgBlF,GAAqB+D,EAAuB9d,KAAKxB,MAAM+T,UAAW,GAClF2M,EH1Gc,EG0GED,EAChBE,EAAgBF,EAAgB3F,GAChC8F,EAAgBH,EAAgB1F,GAChC8F,GAAoBtF,GAAqBgE,EAAuB/d,KAAKxB,MAAM+T,UAAW,GACtF+M,GH9Gc,EG8GMD,GACpBE,GAAoBF,GAAoB/F,GACxCkG,GAAoBH,GAAoB9F,GAExCkG,GAAsB5F,GAAgBiE,EAAuB9d,KAAKxB,MAAM+T,UAAWmH,EAAa2C,GAChGqD,GHnHc,EGmHQD,GACtBE,GAAsBF,GAAsBnG,GAC5CsG,GAAsBH,GAAsBlG,GAC5CsG,GAA0BhG,GAAgBkE,EAAuB/d,KAAKxB,MAAM+T,UAAWmH,EAAa2C,GACpGyD,GHvHc,EGuHYD,GAC1BE,GAA0BF,GAA0BvG,GACpD0G,GAA0BH,GAA0BtG,GAEpD0G,GAAoBhE,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMqR,mBAChEC,GAA6BriB,SAASmC,KAAKxB,MAAMoQ,MAAMsR,4BACvDC,GAAkCD,GAA6B,EAAKriB,SAASmC,KAAKxB,MAAMoQ,MAAMwR,cAAgBF,GAA8B,EAG5IG,IAFkErgB,KAAKxB,MAAM+T,UAEtD0J,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAMyR,qBAAqBlD,QACxFmD,GAAerE,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM0R,aAAanD,OACxEoD,GAAatE,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM2R,WAAWpD,OACpEqD,GAAiBvE,GAAE/L,QAAQgB,iBAAiBlR,KAAKxB,MAAMoQ,MAAM4R,eAAerD,OAE5EsD,GAAqBvkB,EAAcwkB,2CAA6C1gB,KAAKxB,MAAMqd,mBAE3F8E,GAAOnH,GAA2BuE,EAAuB/d,KAAKxB,MAAM+T,UAAWmH,EAAa+G,GAAoB,GAChHG,GAAOpH,GAA2BuE,EAAuB/d,KAAKxB,MAAM+T,UAAWmH,EAAa+G,GHxI9E,GGyIdI,GAAOrH,GAA2BuE,EAAuB/d,KAAKxB,MAAM+T,UAAWmH,EAAa+G,GAAoBnH,IAChHwH,GAAOtH,GAA2BuE,EAAuB/d,KAAKxB,MAAM+T,UAAWmH,EAAa+G,GAAoBlH,IAEhHwH,GAAgC,sBAAM7Z,UAAU,qBAAhB,oHAGhC8Z,GAAsC,sBAAM9Z,UAAU,qBAAhB,oHAGtC+Z,GAAiC,sBAAM/Z,UAAU,qBAAhB,wEAGjCga,GAA6B,sBAAMha,UAAU,qBAAhB,gEAK7Bia,GACF,sBAAKja,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB9E,GAChCtU,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB/E,EAAsBtc,KAAKxB,MAAMqd,oBACrEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,eACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB7E,GAChCvU,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB9E,EAAoBvc,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiE,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,gBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB0X,GACjC5U,SAAS,IACTD,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,cACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB4X,GACjC9U,SAAS,IACTD,cAAc,YAMpBuZ,GACF,sBAAKpa,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,4BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBkZ,GACjCpW,SAAS,IACTI,OAAQ6T,GAAE/L,QAAQhL,iBAAiB8Y,EAAmBI,GACtD9V,WAAW,eAEf,cAACO,EAAD,CACIvC,MAAM,0BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBmZ,GACjCrW,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBoZ,GACjCtW,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,0BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB0Z,GACjC5W,SAAS,IACTI,OAAQ6T,GAAE/L,QAAQhL,iBAAiB8Y,EAAmBI,EAAoBQ,GAC1EtW,WAAW,gBAMjBiZ,GACF,sBAAKra,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,4BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBkZ,GACjCpW,SAAS,IACTI,OAAQ6T,GAAE/L,QAAQhL,iBAAiBiZ,EAAuBC,GAC1D9V,WAAW,gBAEf,cAACO,EAAD,CACIvC,MAAM,0BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBmZ,GACjCrW,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBoZ,GACjCtW,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,0BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB0Z,GACjC5W,SAAS,IACTI,OAAQ6T,GAAE/L,QAAQhL,iBAAiBiZ,EAAuBC,EAAoBQ,GAC9EtW,WAAW,iBA+EjBkZ,IApEYvF,GAAE/L,QAAQkR,gBAAgBnC,GACtBjf,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkBpC,EAAgBjf,KAAKxB,MAAMqd,oBACnDI,GAAEnf,UAAUG,YAAY6G,OAK9BmY,GAAE/L,QAAQkR,gBAAgBlC,GACtBlf,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkBnC,EAAgBlf,KAAKxB,MAAMqd,oBACnDI,GAAEnf,UAAUG,YAAY6G,OAK9BmY,GAAE/L,QAAQkR,gBAAgBjC,GACtBnf,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkBlC,EAAgBnf,KAAKxB,MAAMqd,oBACnDI,GAAEnf,UAAUG,YAAY6G,OAK9BmY,GAAE/L,QAAQkR,gBAAgBhC,GACtBpf,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkBjC,EAAgBpf,KAAKxB,MAAMqd,oBACnDI,GAAEnf,UAAUG,YAAY6G,OAG1B,sBAAiB9D,KAAKxB,MAAMijB,cAKhCxF,GAAE/L,QAAQkR,gBAAgB3B,IACtBzf,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkB5B,GAAsBzf,KAAKxB,MAAMqd,oBACzDI,GAAEnf,UAAUG,YAAY6G,OAK9BmY,GAAE/L,QAAQkR,gBAAgB1B,IACtB1f,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkB3B,GAAsB1f,KAAKxB,MAAMqd,oBACzDI,GAAEnf,UAAUG,YAAY6G,OAK9BmY,GAAE/L,QAAQkR,gBAAgBzB,IACtB3f,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkB1B,GAAsB3f,KAAKxB,MAAMqd,oBACzDI,GAAEnf,UAAUG,YAAY6G,OAK9BmY,GAAE/L,QAAQkR,gBAAgBxB,IACtB5f,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAC3BmY,GAAE/L,QAAQmR,kBAAkBzB,GAAsB5f,KAAKxB,MAAMqd,oBACzDI,GAAEnf,UAAUG,YAAY6G,OAO5C,sBAAKoD,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,uCAAuD,cAAC8S,GAAD,CAAeC,WAAW,EAAM1Z,SAAUygB,QAC3GlZ,KAAMmU,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMoQ,MAAM8O,8BAEnD,cAAC7U,EAAD,CACIvC,MAAM,kBACNwB,KAAMmU,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMoQ,MAAMgP,SAC/CxV,OAAS,sBAAMlB,UAAU,eAAhB,SAAgCyW,EAAoB,0BAA4B,4BACzFtV,gBAAgB,2BAGpB,sBAAMnB,UAAU,8CAAhB,mCACA,cAAC2B,EAAD,CACIvC,MAAM,UACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB/B,IAChCrX,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBhC,GAAoBrf,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,WACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB9B,IAChCtX,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB/B,GAAoBtf,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,YACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB7B,IAChCvX,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB9B,GAAoBvf,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,WACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB5B,IAChCxX,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB7B,GAAoBxf,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAGxC,sBAAMoD,UAAU,8CAAhB,iCACA,cAAC2B,EAAD,CACIvC,MAAM,UACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBvB,IAChC7X,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBxB,GAA0B7f,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,WACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBtB,IAChC9X,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBvB,GAA0B9f,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,YACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBrB,IAChC/X,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBtB,GAA0B/f,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,WACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBpB,IAChChY,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBrB,GAA0BhgB,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,aAK1C4d,GAA4E,IAA9D7jB,SAASmC,KAAKxB,MAAMoQ,MAAMyR,qBAAqB7N,WAAmB,IAAMyJ,GAAE/L,QAAQK,eAAe8B,EAAMxU,SAASmC,KAAKxB,MAAMoQ,MAAMyR,qBAAqB7N,YAE1K,OACI,sBAAKtL,UAAU,2BAAf,UACI,sBAAKA,UAAS,0CAAd,UACKlH,KAAKxB,MAAMgd,YACR,mCACI,sBAAKtU,UAAU,qCAAf,UACI,sBAAKA,UAAU,oCAAf,UACI,uBAAMA,UAAU,mDAAmDM,QAASxH,KAAK0b,yBAAjF,UACI,mBAAGxU,UAAS,aAASlH,KAAKvB,MAAM6c,WAAa,qBAAuB,sBAAxD,WACXtb,KAAKxB,MAAMoQ,MAAMiD,QAAQvU,QAE9B,sBAAK4J,UAAU,qDAAf,UACI,mBAAGA,UAAU,sCAAsCM,QAAO,sBAAE,sBAAA7H,EAAA,+EAE9CG,UAAUkK,UAAUC,UAAU,EAAKzL,MAAMoQ,MAAMwN,iBAFD,OAGpD9a,QAAQD,MAAM,sCAHsC,+CAKpDC,QAAQD,MAAM,8CAAd,MALoD,0DAQ5D,mBAAG8I,KAAM+R,EAAkByF,IAAI,aAAavX,OAAO,SAASlD,UAAU,2BAAtE,SAAkGlH,KAAKxB,MAAMoQ,MAAMwN,wBAI3H,sBAAKlV,UAAU,0DAAf,UACI,sBAAMA,UAAU,aAAhB,SAA8B6U,IAC9B,uBAAM7U,UAAU,qBAAhB,UACI,mBAAGA,UAAU,mBACZ+U,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMoQ,MAAMwR,oBAIlD,qBAAKlZ,UAAS,sBAAiBlH,KAAKxB,MAAMijB,aAA5B,oBAK1B,sBAAKva,UAAU,kDAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,QACNwB,KAAMmU,GAAE/L,QAAQmR,kBAAkBrhB,KAAKxB,MAAMqd,oBAC7C7T,SAAUiU,GAAEnf,UAAUG,YAAY6G,OAClCsE,OAAQ6T,GAAE/L,QAAQ0R,kBAAkB,EAAI5hB,KAAKxB,MAAMsd,oBACnDxT,WAAU,UAAKtI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAA9B,YAAwCmY,GAAEnf,UAAUE,YAAY8G,UAE9E,cAAC+E,EAAD,CACIvC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,qBAAqC,cAAC8S,GAAD,CAAezZ,SAAU4gB,QACxErZ,KAAMmU,GAAE/L,QAAQkR,gBAAgB/E,GAChCrU,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQkR,gBAAgB/E,EAAgBrc,KAAKxB,MAAMqd,oBAC7DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB5E,EAAqB,EAAG,GACxDxU,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQpI,KAAKxB,MAAMoQ,MAAMiT,sBAAwB,gBAAkB5F,GAAE/L,QAAQmR,kBAAkB7E,EAAsBxc,KAAKxB,MAAMqd,mBAAoB,EAAG,GACvJvT,WAAYtI,KAAKxB,MAAMoQ,MAAMiT,sBAAwB,KAAO5F,GAAEnf,UAAUG,YAAY6G,OACpFiE,cAAc,OACdM,gBAAe,UAAKrI,KAAKxB,MAAMoQ,MAAMiT,sBAAwB,yBAA2B,MAE5F,cAAChZ,EAAD,CACIF,mBAAmB,iBACnBrC,MACI,oDAEKtG,KAAKxB,MAAMoQ,MAAMkT,0BACX,mBAAG5a,UAAU,+CACd,KACLlH,KAAKxB,MAAMoQ,MAAMmT,wBACX,mBAAG7a,UAAU,6CACd,QAGdY,KAAM9H,KAAKxB,MAAMwjB,mBAAqBN,GACtClb,MAAOxG,KAAKxB,MAAMwjB,mBAAqBN,GACvCtZ,OACI,mCACKpI,KAAKxB,MAAMwjB,mBACR,qBAAK9a,UAAU,iCAAf,SACI,wBACI+a,WAAW,EACX1a,KAAK,SACLL,UAAU,2BACVQ,SAAU1H,KAAKvB,MAAMgd,uBAAiD,IAAxBe,EAC9ChV,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKgc,SAAQ,kBAAM,EAAKnd,MAAM4X,0BAD/B,2CALb,oCAehBrO,cAAe/H,KAAKxB,MAAMwjB,kBAAoB,iBAAmB,GACjEvZ,cAAgBzI,KAAKxB,MAAMwjB,kBAA8C,GAA1B,gCAKzDhiB,KAAKvB,MAAM6c,YAActb,KAAKxB,MAAMgd,YAClC,qCAEI,qBAAKtU,UAAS,0CAAd,SACI,sBAAKA,UAAU,6DAAf,UACI,sBAAMA,UAAU,4DAAhB,4BACA,cAAC2B,EAAD,CACIvC,MAAM,qBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBzE,GAChC3U,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,SAEvC,cAAC+E,EAAD,CACIvC,MAAM,cACNwB,KAAMmU,GAAE/L,QAAQmR,kBAAkB1E,EAAc3c,KAAKxB,MAAMqd,oBAC3D7T,SAAUiU,GAAEnf,UAAUG,YAAY6G,SAEtC,cAAC+E,EAAD,CACIvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB1E,GAChC1U,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB3E,EAAgB1c,KAAKxB,MAAMqd,oBAC/DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAEtC2Y,EAAgB,EACZ,cAAC5T,EAAD,CACEvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB3E,GAChCzU,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB5E,EAAgBzc,KAAKxB,MAAMqd,oBAC/DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAEtC,cAAC+E,EAAD,CACEvC,MAAM,iBACNwB,KAAK,UACLC,cAAc,iBAItB,qBAAKb,UAAS,mCAA8BlH,KAAKxB,MAAMijB,gBAEvD,cAAC5Y,EAAD,CACIvC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,iCAAiD,cAAC8S,GAAD,CAAeC,WAAW,EAAM1Z,SAAW,+BAAOwgB,UAC7GjZ,KAAMmU,GAAE/L,QAAQkR,gBAAgBvE,GAChC7U,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBxE,EAAoB7c,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,eACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB1H,GAChC1R,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB3H,EAAc1Z,KAAKxB,MAAMqd,oBAC7DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,sBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBrE,GAChC/U,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBtE,EAAoB/c,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,2BACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBpE,GAChChV,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBrE,EAAyBhd,KAAKxB,MAAMqd,oBACxEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,cAMhD,qBAAKoD,UAAS,0CAAd,SACI,sBAAKA,UAAU,8CAAf,UACI,sBAAMA,UAAU,8CAAhB,4BACA,cAAC2B,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,8BACNwB,KAAI,WAAMmU,GAAE/L,QAAQkR,gBAAgBvD,GAAhC,aAAkF,IAA1BC,EAA8B,IAAM7B,GAAE/L,QAAQkR,gBAAgBtD,GAAtH,KACJ9V,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,SAEvC,cAAC+E,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,oBACNwB,KAAMmU,GAAE/L,QAAQ9K,mBAAmB,EAAIsZ,KAE3C,cAAC7V,EAAD,CACIF,mBAAmB,2BACnBrC,MAAQ,qCAAE,sBAAMY,UAAU,YAAhB,mBAAwC,sBAAMA,UAAU,mBAAhB,sBAA1C,gBACRY,KAAM9H,KAAKxB,MAAM+T,UACjBvK,SAAS,MAUb,cAACa,EAAD,CACIF,mBAAmB,2BACnBrC,MAAQ,qCAAE,sBAAMY,UAAU,wBAAhB,sCAAuE,sBAAMA,UAAU,iBAAhB,kCAA4D,cAAC8S,GAAD,CAAezZ,SAAUihB,QACtK1Z,KAAMmU,GAAE/L,QAAQkR,gBAAgBrD,GAChC/V,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBtD,EAAwB/d,KAAKxB,MAAMqd,oBACvEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiE,cAAc,SAElB,cAACc,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,sBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBnB,GAAmB,EAAG,GACtDjY,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBpB,GAAoBjgB,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OAEpC0C,KAAO,iCAAM,mBAAGU,UAAU,+BAAgC+U,GAAE/L,QAAQjL,cAAcib,IAA3E,MAA2GjE,GAAE/L,QAAQjL,cAAckb,OAC1I1X,cAAc,yBAElB,cAACI,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,uBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBf,IAChCrY,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBhB,GAAuBrgB,KAAKxB,MAAMqd,oBACtEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAMyR,qBAAqBhP,MAAOrR,KAAKxB,MAAMoQ,MAAMyR,qBAAqB7N,UAAWH,KAGzH,qBAAKnL,UAAS,qBAAgBlH,KAAKxB,MAAMijB,gBAEzC,cAAC5Y,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,2BACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB8Y,GACjChW,SAAS,MAEb,cAACa,EAAD,CACIF,mBAAmB,2BACnBrC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,qCAAqD,cAAC8S,GAAD,CAAezZ,SAAU+gB,QACxFxZ,KAAM9H,KAAKxB,MAAMoQ,MAAMuT,oBAAuB,4BAAIlG,GAAE/L,QAAQhL,iBAAiB2Z,KAAgC5C,GAAE/L,QAAQhL,iBAAiB2Z,GACxI7W,SAAS,IACTxB,KAAMxG,KAAKxB,MAAMoQ,MAAMuT,oBAAuB,sBAAMjb,UAAU,eAAhB,8BAA0D,KACxGuB,cAAc,oDAElB,cAACI,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,8BACNwB,KAAI,WAAMmU,GAAE/L,QAAQhL,iBAAiB+Y,GAAjC,aAAiF,IAAzBC,EAA6B,IAAMjC,GAAE/L,QAAQhL,iBAAiBgZ,GAAtH,KACJlW,SAAS,MAEb,cAACa,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQ9K,mBAAmB,EAAIuZ,KAE3C,cAAC9V,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,iCACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBiZ,GACjCnW,SAAS,MAEb,cAACa,EAAD,CACIF,mBAAmB,2BACnBrC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,kCAAkD,cAAC8S,GAAD,CAAezZ,SAAUghB,QACrFzZ,KAAM9H,KAAKxB,MAAMoQ,MAAMuT,oBAAuB,4BAAIlG,GAAE/L,QAAQhL,iBAAiB4Z,KAA6B7C,GAAE/L,QAAQhL,iBAAiB4Z,GACrI9W,SAAS,IACTxB,KAAMxG,KAAKxB,MAAMoQ,MAAMuT,oBAAuB,sBAAMjb,UAAU,eAAhB,8BAA0D,KACxGuB,cAAc,oDAGlB,qBAAKvB,UAAS,qBAAgBlH,KAAKxB,MAAMijB,gBAEzC,cAAC5Y,EAAD,CACIF,mBAAmB,aACnBrC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,gCAAgD,cAAC8S,GAAD,CAAeC,WAAW,EAAM1Z,SAAW,+BAAO0gB,UAC5GnZ,KAAMmU,GAAE/L,QAAQkR,gBAAgBrC,GAChC/W,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBtC,EAAqB/e,KAAKxB,MAAMqd,oBACpEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAMmQ,mBAAmB1N,MAAOrR,KAAKxB,MAAMoQ,MAAMmQ,mBAAmBvM,UAAWH,KAErH,cAACxJ,EAAD,CACIF,mBAAmB,aACnBrC,MAAM,mBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBpC,GAChChX,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBrC,EAAmBhf,KAAKxB,MAAMqd,oBAClEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAMoQ,iBAAiB3N,MAAOrR,KAAKxB,MAAMoQ,MAAMoQ,iBAAiBxM,UAAWH,KAGjH,sBAAMnL,UAAU,8CAAhB,iCACA,cAAC2B,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,4BACNwB,KAAMmU,GAAE/L,QAAQK,eAAe8B,EAAMmM,GACrCzW,cAAesK,EAAMmM,EAAsBD,EAAqB,eAAiB,OAErF,cAAC1V,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,sBACNwB,KAAMmU,GAAE/L,QAAQK,eAAegO,KAEnC,cAAC1V,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,yBACNwB,KAAMmU,GAAE/L,QAAQmR,kBAAkB5C,EAAe7C,GACjD5T,SAAUiU,GAAEnf,UAAUG,YAAY6G,OAClCsE,OAAwB,GAAhBqW,EAAoB,IAAMxC,GAAE/L,QAAQ0R,kBAAkB,EAAInD,GAClEnW,WAAU,UAAKtI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OAA9B,YAAwCmY,GAAEnf,UAAUE,YAAY8G,eAMtF,qBAAKoD,UAAS,0CAAd,SACI,sBAAKA,UAAU,8CAAf,UACI,sBAAMA,UAAU,8CAAhB,sCACA,cAAC2B,EAAD,CACIvC,MAAM,QACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiByb,GAAM,GACvC3Y,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,SACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB0b,GAAM,GACvC5Y,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,UACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB2b,IACjC7Y,SAAS,MAEb,cAACa,EAAD,CACIvC,MAAM,SACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiB4b,IACjC9Y,SAAS,WAMrB,qBAAKd,UAAS,0CAAd,SACI,sBAAKA,UAAU,6DAAf,UACI,sBAAMA,UAAU,4DAAhB,gCACA,cAAC2B,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,kBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBphB,KAAKxB,MAAMoQ,MAAMoE,cACjDhL,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQ0R,kBAAkB5hB,KAAKxB,MAAMoQ,MAAMsE,oBACrD7K,gBAAgB,sEAChBC,WAAY2T,GAAEnf,UAAUE,YAAY8G,OACpCyE,oBAAoB,kBAExB,cAACM,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,oBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBphB,KAAKxB,MAAMoQ,MAAM2E,qBACjDvL,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQ0R,kBAAkB5hB,KAAKxB,MAAMoQ,MAAM4E,2BACrDnL,gBAAgB,sEAChBC,WAAY2T,GAAEnf,UAAUE,YAAY8G,OACpCyE,oBAAoB,kBAGxB,qBAAKrB,UAAS,+BAA0BlH,KAAKxB,MAAMijB,gBAEnD,cAAC5Y,EAAD,CACIF,mBAAmB,2BACnBrC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,6BAA6C,cAAC8S,GAAD,CAAeC,WAAW,EAAM1Z,SAAW,+BAAO2gB,UACzGpZ,KAAMmU,GAAE/L,QAAQhL,iBAAiBkY,GACjCpV,SAAS,IACTI,OAAS,mBAAG+B,KAAMqT,EAAsBmE,IAAI,aAAavX,OAAO,SAASlD,UAAU,UAA1E,SAAqF+U,GAAE/L,QAAQ5L,cAActE,KAAKxB,MAAMoQ,MAAM6O,aACvIjX,KAAMxG,KAAKxB,MAAMoQ,MAAMwT,iBAAoB,sBAAMlb,UAAU,eAAhB,6BAAyD,KACpGuB,cAAc,8DAElB,cAACI,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,YACNwB,KAAMmU,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMoQ,MAAMyT,aAEnD,cAACxZ,EAAD,CACIF,mBAAmB,2BACnBrC,MAAM,UACNwB,KAAMmU,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMoQ,MAAMgP,gBAM3D,qBAAK1W,UAAS,0CAAd,SACI,sBAAKA,UAAU,4EAAf,UACI,sBAAMA,UAAU,0EAAhB,wBACA,cAAC2B,EAAD,CACIvC,MAAQ,wDAAkB,sBAAMY,UAAU,mBAAhB,wBAC1BY,KAAMmU,GAAE/L,QAAQkR,gBAAgBlE,GAChClV,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBnE,EAAkBld,KAAKxB,MAAMqd,oBACjEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAMsO,gBAAgB7L,MAAOrR,KAAKxB,MAAMoQ,MAAMsO,gBAAgB1K,UAAWH,KAE/G,cAACxJ,EAAD,CACIvC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgB9D,GAChCtV,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB/D,EAA0Btd,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAMwO,eAAeG,UAAUlM,MAAOrR,KAAKxB,MAAMoQ,MAAMwO,eAAeG,UAAU/K,UAAWH,KAEjI,cAACxJ,EAAD,CACIvC,MAAM,gBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBd,IAChCtY,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBf,GAAetgB,KAAKxB,MAAMqd,oBAC9DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAM0R,aAAajP,MAAOrR,KAAKxB,MAAMoQ,MAAM0R,aAAa9N,UAAWH,KAGzG,qBAAKnL,UAAS,kDAA6ClH,KAAKxB,MAAMijB,gBAEtE,cAAC5Y,EAAD,CACIvC,MAAM,cACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBb,IAChCvY,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBd,GAAavgB,KAAKxB,MAAMqd,oBAC5DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAM2R,WAAWlP,MAAOrR,KAAKxB,MAAMoQ,MAAM2R,WAAW/N,UAAWH,KAErG,cAACxJ,EAAD,CACIvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBnE,GAChCjV,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBpE,EAAgBjd,KAAKxB,MAAMqd,oBAC/DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIvC,MAAM,kBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBZ,IAChCxY,SAAUhI,KAAKxB,MAAMoQ,MAAMiD,QAAQ/N,OACnCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBb,GAAiBxgB,KAAKxB,MAAMqd,oBAChEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMoQ,MAAM4R,eAAenP,MAAOrR,KAAKxB,MAAMoQ,MAAM4R,eAAehO,UAAWH,kB,yBAWzI,SAAYhB,EAAOmB,EAAWH,GAC1B,OACI,sBAAKnL,UAAU,gCAAf,UACI,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcoM,MACtG,uBAAMnK,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,qBAAsBsL,EAAY,EAAIyJ,GAAE/L,QAAQK,eAAe8B,EAAMG,GAAa,Y,0BAK9I,SAAanB,EAAOb,GAChB,OACI,sBAAKtJ,UAAU,gCAAf,UACI,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,+BAAgC+U,GAAE/L,QAAQjL,cAAcoM,MACxG,uBAAMnK,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,qBAAsBsJ,EAAW,EAAIyL,GAAE/L,QAAQK,eAAeC,GAAY,Y,8CAKtI,SAAiCiJ,EAAgBiE,GAG7C,IAFA,IAAM4E,EAAS,GAENlW,EAAI,EAAGA,GAAKsR,GACjB4E,EAAOC,KAAK,CACRC,OAAQpW,EACRqN,eAAgBA,EAAiBrN,EAAIsR,IAGzCtR,GAAK,IAWT,OAAOkW,I,sCAIX,WACItiB,KAAKlB,SAAS,CAAEwc,YAAatb,KAAKvB,MAAM6c,e,4DAG5C,WAAcmH,GAAd,SAAA9iB,EAAA,6DACIK,KAAKlB,SAAS,CAAE2c,uBAAuB,IAD3C,kBAIcgH,IAJd,sDAMQnhB,QAAQC,IAAR,MANR,uBAQQvB,KAAKlB,SAAS,CAAE2c,uBAAuB,IAR/C,0E,4DAz2B+BpX,aCZ5B,SAASqe,GAAaC,EAAW1P,EAAUE,GAC9C,OAAOwP,EAAYxP,GAAYwP,EAAY1P,GCZhC,SAAS2P,GAAT,GAWX,IAVAC,EAUD,EAVCA,WACAvd,EASD,EATCA,IACAwd,EAQD,EARCA,IACAnpB,EAOD,EAPCA,SACAopB,EAMD,EANCA,YACAC,EAKD,EALCA,eACAC,EAID,EAJCA,eACAC,EAGD,EAHCA,gBACAC,EAED,EAFCA,SACAC,EACD,EADCA,cAEA,EAAkCja,mBAAS,GAA3C,mBAAOzN,EAAP,KAAc2nB,EAAd,KAWA,SAASre,EAAOse,GACZ,OAAOA,EAAIhnB,WAAWA,WAAWgnB,GAAGlS,QAAQzX,IAAa,EAG7D,SAAS4pB,IACL,OAAQC,MAAM7pB,GAAsC,EAA1B0L,KAAKzL,IAAI,IAAKD,GAG5C,SAAS8pB,EAAaC,GAClB,IAAMC,EAAKrnB,WAAWwmB,GAChBc,EAAKtnB,WAAWgJ,GAElBoe,EAAIC,IACJD,EAAIC,GAGJD,EAAIE,IACJF,EAAIE,GAGRP,EAAiBK,GACjBP,EAASO,GAGT,IAAM/W,EAAIgX,EAAKC,EACfR,EAAoB,IAANzW,EAAU+W,EAAI/W,EAAI,GAGpC,SAASkX,EAAeC,GACpBL,EAA+B,MAAlBK,EAAE1Z,OAAO1O,MAAgBsJ,EAAO8e,EAAE1Z,OAAO1O,OAAS,GAqCnE,OA3EA4N,qBAAU,WACN,IAAMya,EAAIznB,WAAWZ,GACfgV,EAAIpU,WAAWwmB,GAEjBiB,EAAIrT,GACJ+S,EAAa/S,KAElB,CAACoS,IAqEA,sBAAK5b,UAAU,2BAAf,UACI,uBACIQ,SAAUmb,EACVtb,KAAK,SACLL,UAAS,8CAAyC8b,GAClD1d,IAAKN,EAAOM,GACZwd,IAAK9d,EAAO8d,GACZkB,KAAMhf,EAAOue,KACb7nB,MAAOsJ,EAAOtJ,GACduoB,QAASJ,IAEb,uBACInc,SAAUmb,EACVtb,KAAK,QACL2c,KAAK,YACLhd,UAAS,sDAAiD+b,GAC1D3d,IAAKN,EAAOM,GACZwd,IAAK9d,EAAO8d,GACZkB,KAAMhf,EAAOue,KACb7nB,MAAOsJ,EAAOtJ,GACduoB,QAASJ,IAeb,qBAAK3c,UAAU,+DAAf,SA9DR,WAGI,IAFA,IAAMid,EAAQ,GADkB,WAGvB/X,GACL,IAAMgY,EAAarB,EAAY3W,GAE/B+X,EAAM5B,KACF,wBACIhb,KAAK,SACLL,UAAS,UAAKgc,EAAL,YAAwB9W,EAAI,EAAI,mBAAqB,IAC9D5E,QAAS,kBAlBzB,SAAgC4c,GAC5B,IAAMT,EAAKrnB,WAAWwmB,GAChBc,EAAKtnB,WAAWgJ,GAGtBme,EADUG,GAAMD,EAAKC,GAAMQ,EAAa,KAcbC,CAAuBD,IAH1C,SAKI,cAACvc,EAAD,CACIyc,UAAW,EACXxc,KAAMsc,EACNpc,SAAS,IACTD,cAAc,kBACdE,kBAAkB,6BAVbmE,KAJZA,EAAI,EAAGA,EAAI2W,EAAY3nB,SAAUgR,EAAI,EAArCA,GAoBT,OAAO+X,EAwCEI,QChIF,SAASC,GAAT,GAYX,IAXAC,EAWD,EAXCA,MACAld,EAUD,EAVCA,KACAmd,EASD,EATCA,GACAxd,EAQD,EARCA,UACAyd,EAOD,EAPCA,aACAC,EAMD,EANCA,YACAV,EAKD,EALCA,KACA5e,EAID,EAJCA,IACAwd,EAGD,EAHCA,IACAkB,EAED,EAFCA,KACAC,EACD,EADCA,QAEA,EAA0B9a,qBAA1B,mBAAO0b,EAAP,KAAcC,EAAd,KAaA,OAXAxb,qBAAU,WAEFwb,EAASH,KAEd,CAACA,IAEJrb,qBAAU,WACN,IAAMsB,EAAU8C,YAAW,kBAAMuW,EAAQY,KAAQJ,GACjD,OAAO,kBAAMM,aAAana,MAC3B,CAACia,IAGA,uBACItd,KAAMA,EACNyd,aAAa,MACbN,GAAIA,EACJxd,UAAWA,EACXxL,MAAOmpB,EAAiB,WAATtd,GAAqBic,MAAMqB,GAAS,GAAKA,EAAQ,GAChED,YAAaA,EACbV,KAAMA,EACN5e,IAAKA,EACLwd,IAAKA,EACLkB,KAAMA,EACNiB,SAAU,SAAAnB,GAAC,OAAIgB,EAAShB,EAAE1Z,OAAO1O,UC3B9B,SAASwpB,GAAT,GAMX,IALAC,EAKD,EALCA,YACAC,EAID,EAJCA,kBACAxW,EAGD,EAHCA,MACAgN,EAED,EAFCA,8BACA3H,EACD,EADCA,KAEMoR,EAAO3nB,OAAOsd,OAAO,CACvBsK,IAAK,EACLC,KAAM,IAGV,EAA0Dpc,oBAAS,GAAnE,mBAAOqc,EAAP,KAA8BC,EAA9B,KACA,EAA0Dtc,oBAAS,GAAnE,mBAAOsS,EAAP,KAA8BiK,EAA9B,KAEA,EAAwBvc,mBAASkc,EAAKC,KAAtC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4Bzc,mBAAS,GAArC,mBAAOuL,EAAP,KAAemR,EAAf,KACA,EAAoC1c,mBAAS,GAA7C,mBAAOib,EAAP,KAAmBhB,EAAnB,KACA,EAAkCja,qBAAlC,mBAAOmM,EAAP,KAAkBwQ,EAAlB,KAEA,EAAsC3c,mBAAS,GAA/C,mBAAO4c,EAAP,KAAoBC,EAApB,KACA,EAAsC7c,mBAAS,GAA/C,mBAAO8c,EAAP,KAAoBC,EAApB,KACA,EAA4C/c,mBAAS,GAArD,mBAAOgd,EAAP,KAAuBC,EAAvB,KACA,EAA4Cjd,mBAAS,GAArD,oBAAOkd,GAAP,MAAuBC,GAAvB,MAEMC,GAAetK,GAAE/L,QAAQgB,iBAAiBtC,EAAM2N,mBAsDtD,OApDAjT,qBAAU,WACN,sBAAC,0CAAA3J,EAAA,sDACO+U,EAAS,IACH8R,EAA0B5X,EAAMsE,mBAAqBtE,EAAMoE,aAC3DzV,EAAUrB,EAAcuqB,qBAAqBxK,GAAEvf,QAASR,EAAcsY,qBAAqByH,GAAEvf,UAAY,IAE/G4E,QAAQC,IAAI,CAAEyR,aAAcpE,EAAMoE,aAAcE,mBAAoBtE,EAAMsE,qBAC1E5R,QAAQC,IAAR,yBAA8Bqa,EAAgC4K,IAE1Db,IAASN,EAAKC,KAIRxC,EAAMJ,GAAahO,GAAU,EAAInX,GAAUqR,EAAMsE,mBAAoBtE,EAAMoE,cACjFgT,EAAelD,GAETxd,EAAMwd,EAAMA,EAAM7G,GAAExM,SAASE,uBAAyB,IAC5DuW,EAAe5gB,GAEXohB,GAAgChS,GAAU,EAAInX,GAAWqR,EAAMsE,qBAAuBtE,EAAMoE,aAAe8P,GAE/GsD,GADmBM,EAA+BF,GAA2BA,GAG7EE,GAAgChS,GAAU,EAAInX,GAAWqR,EAAMsE,qBAAuBtE,EAAMoE,aAAe1N,GAE3GghB,IADeI,EAA+BF,GAA2BA,GAGzEllB,QAAQC,IAAR,wBAA6BuhB,EAA7B,oBAA4ClH,EAAgC8K,MAKtE5D,EAAMJ,GAAahO,GAAU,EAAInX,GAAUqR,EAAMoE,aAAcpE,EAAMsE,oBAC3E8S,EAAelD,GAETxd,EAAMwd,EAAMA,EAAM7G,GAAExM,SAASE,uBAAyB,IAC5DuW,EAAe5gB,GAEXohB,GAAgC9X,EAAMsE,mBAAqB4P,IAAQlU,EAAMoE,aAAe0B,GAAU,EAAInX,IAE1G6oB,GADmBM,EAA+BF,GAA2BA,GAG7EE,GAAgC9X,EAAMsE,mBAAqB5N,IAAQsJ,EAAMoE,aAAe0B,GAAU,EAAInX,IAEtG+oB,IADeI,EAA+BF,GAA2BA,GAGzEllB,QAAQC,IAAR,0BAA+BuhB,EAA/B,oBAA8ClH,EAAgC8K,MA7CzF,0CAAD,KAiDD,CAAChS,EAAQ9F,EAAMoE,aAAcpE,EAAMsE,qBAGlC,mCACI,sBAAKhM,UAAU,2BAAf,UACI,qBAAKA,UAAU,8EAAf,SACI,cAAC,IAAOyf,MAAR,UACI,sBAAKzf,UAAU,oBAAf,UACI,eAAC,IAAD,CACI0f,QAASjB,IAASN,EAAKC,IACvBL,SA8H5B,WACQU,IAASN,EAAKC,IACdM,EAAQP,EAAKE,MAEbK,EAAQP,EAAKC,MAjIOpe,UAAS,UAAKie,EAAc,mBAAqB,gBAAxC,uLAHb,UAKI,sBAAMje,UAAU,UAAhB,uBACA,sBAAMA,UAAS,UAAKye,IAASN,EAAKC,IAAM,gBAAkB,gBAA3C,2CAA6FH,EAAc,gBAAkB,eAA7H,2CAEnB,eAAC,IAAO0B,MAAR,CAAc3f,UAAU,mBAAxB,UACKye,IAASN,EAAKC,IAAM,MAAQ,OADjC,IAC0CrJ,GAAEnf,UAAU8R,MAAM9K,iBAMxE,sBAAKoD,UAAU,6BAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,uBAAMA,UAAU,cAAhB,oBAEI,uBAAMA,UAAU,OAAhB,cAEI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQhL,iBAAiBkf,GACjCpc,SAAS,IACTD,cAAc,aACdE,kBAAkB,WAN1B,UAWJ,uBAAMf,UAAU,cAAhB,qBAEI,cAACW,EAAD,CACIC,KAAM6d,IAASN,EAAKC,IAAMF,EAAoBnJ,GAAE/L,QAAQ4W,iBAAiB1B,GAAqB,IAAMmB,GAAetK,GAAE/L,QAAQkR,gBAAgBmF,IAAgB,IAC7Jve,SAAU2d,IAASN,EAAKC,IAAMrJ,GAAEpf,WAAWiH,OAASmY,GAAEnf,UAAU8R,MAAM9K,OACtEiE,cAAc,kBACdE,kBAAkB,iBAI9B,qBAAKf,UAAS,UAAKie,EAAc,oBAAsB,IAAvD,SACI,cAACvC,GAAD,CACItd,IAAK,EACLwd,IAAK6C,IAASN,EAAKC,IAAMF,GAAwC,EAAImB,IAA8B,EACnG5sB,SAAU0L,KAAKC,IAAIqgB,IAASN,EAAKC,IAAMrJ,GAAEpf,WAAWlD,SAAWsiB,GAAEnf,UAAU8R,MAAMjV,SAAU,GAC3FwpB,SAAU0C,EACVzC,cAAeA,EACfJ,eAAc,UAAKmC,EAAc,mBAAqB,IACtDlC,eAAc,UAAKkC,EAAc,mBAAqB,IACtDjC,gBAAe,yDAAoDiC,EAAc,mBAAqB,mBAAvF,6DAI3B,sBAAKje,UAAU,2BAAf,UACI,uBAAO6f,QAAQ,YAAY7f,UAAU,iBAArC,SACI,sBAAMA,UAAU,cAAhB,0BAEJ,cAACsd,GAAD,CACIC,MAAO,IACPld,KAAK,SACLmd,GAAG,YACHxd,UAAS,yCAAoCie,EAAc,mBAAqB,IAChFP,YAAW,iCAA4B3I,GAAEzb,QAAU,8BAAgC,IACnFyjB,QAAS,SAAAvoB,GAAK,OAAIoqB,EAAapqB,SAGvC,sBAAKwL,UAAU,mCAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,sBACIA,UAAU,yDACVM,QAAS,WAmE7Bie,GAA0BD,IArEV,SAMKA,EACK,mBAAGte,UAAU,oBACb,mBAAGA,UAAU,iBAGvB,uBAAMA,UAAU,OAAhB,UACI,uBACIK,KAAK,SACLL,UAAS,qEAAgEse,EAAwB,cAAgB,YAAxG,YAAuHL,EAAc,mBAAqB,IACnKR,aAAc1I,GAAExM,SAASE,uBAAyB,IAClDiV,YAAY,2BACZtf,IAAK,EACL0e,KAAM,IACNiB,SAAU,SAAAnB,GACN7H,GAAExM,SAASK,qBAAkD,IAA7BxT,WAAWwnB,EAAE1Z,OAAO1O,WAG5D,sBAAMwL,UAAS,kCAA6Bse,EAAwB,KAAO,UAA3E,qBAGR,wBACIje,KAAK,SACLL,UAAS,8EAAyEie,EAAc,iBAAmB,IACnHzd,SAAU+T,GAAoC,IAAX/G,MAAkBY,GAAY5S,IAAKC,MAAMqkB,UAAU1R,EAAU2R,gBAChGzf,QAAO,sBAAE,sBAAA7H,EAAA,sEACCgc,IAAQ,kBAAM1H,EAAKS,EAAQuR,EAAa3Q,EAAWqQ,IAASN,EAAKC,QADlE,2CAJb,SAOKK,IAASN,EAAKC,IAAM,MAAQ,YAGrC,sBAAKpe,UAAU,2DAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,4BACNwB,KAAM6d,IAASN,EAAKC,IAAMrJ,GAAE/L,QAAQ4W,iBAAiBb,GAAehK,GAAE/L,QAAQkR,gBAAgB6E,GAC9Fje,SAAU2d,IAASN,EAAKC,IAAMrJ,GAAEnf,UAAU8R,MAAM9K,OAASmY,GAAEpf,WAAWiH,OACtEsE,OAAQud,IAASN,EAAKC,IAAMrJ,GAAE/L,QAAQ4W,iBAAiBf,GAAe9J,GAAE/L,QAAQkR,gBAAgB2E,GAChGzd,WAAYqd,IAASN,EAAKC,IAAMrJ,GAAEnf,UAAU8R,MAAM9K,OAASmY,GAAEpf,WAAWiH,OACxEuE,gBAAgB,2BAChBE,oBAAoB,+BAExB,cAACM,EAAD,CACIvC,MAAM,0BACN8B,OAAQ6T,GAAE/L,QAAQhL,iBAAiBihB,EAAgB,EAAG,GACtD7d,WAAW,IACXR,KAAMmU,GAAE/L,QAAQhL,iBAAiBmhB,GAAgB,EAAG,GACpDre,SAAS,IACTK,gBAAgB,2BAChBE,oBAAoB,uCAxMzC,SA2NgBoT,GA3NhB,iFA2NC,WAAuB8G,GAAvB,SAAA9iB,EAAA,6DACI+lB,GAAyB,GAD7B,kBAIcjD,IAJd,sDAMQnhB,QAAQC,IAAR,MANR,uBAQQmkB,GAAyB,GARjC,2EA3ND,uBCRY,SAASwB,GAAT,GAEX,IADAvoB,EACD,EADCA,QAEA,EAA0DwK,oBAAS,GAAnE,mBAAOsS,EAAP,KAA8BiK,EAA9B,KACA,EAA4Bvc,mBAAS,GAArC,mBAAOuL,EAAP,KAAemR,EAAf,KACA,EAAoC1c,mBAAS,GAA7C,mBAAOib,EAAP,KAAmBhB,EAAnB,KACA,EAAkCja,qBAAlC,mBAAOmM,EAAP,KAAkBwQ,EAAlB,KAEA,OACI,sBAAK5e,UAAU,wCAAf,UACI,qBAAKA,UAAU,6EAAf,SACI,6CACc+U,GAAEnf,UAAU8R,MAAM9K,YAGpC,sBAAKoD,UAAU,6BAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,uBAAMA,UAAU,cAAhB,oBAEI,uBAAMA,UAAU,OAAhB,cAEI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQhL,iBAAiBkf,GACjCpc,SAAS,IACTD,cAAc,aACdE,kBAAkB,WAN1B,UAWJ,uBAAMf,UAAU,cAAhB,qBAEI,cAACW,EAAD,CACIC,KAAMnJ,EAAUsd,GAAE/L,QAAQkR,gBAAgBziB,GAAW,IACrDqJ,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BiE,cAAc,kBACdE,kBAAkB,iBAI9B,8BACI,cAAC2a,GAAD,CACItd,IAAK,EACLwd,IAAKnkB,GAAoB,EACzBhF,SAAU0L,KAAKC,IAAI2W,GAAEnf,UAAU8R,MAAMjV,SAAU,GAC/CwpB,SAAU0C,EACVzC,cAAeA,EACfF,gBAAgB,2HAI5B,sBAAKhc,UAAU,2BAAf,UACI,uBAAO6f,QAAQ,YAAY7f,UAAU,iBAArC,SACI,sBAAMA,UAAU,cAAhB,0BAEJ,cAACsd,GAAD,CACIC,MAAO,IACPld,KAAK,SACLmd,GAAG,YACHxd,UAAU,iCACV0d,YAAY,0BACZX,QAAS,SAAAvoB,GAAK,OAAIoqB,EAAapqB,SAGvC,qBAAKwL,UAAU,+BAAf,SACI,wBACIK,KAAK,SACLL,UAAU,uCACVQ,SAAU+T,KAA2BnG,GAAa5S,IAAKC,MAAMqkB,UAAU1R,EAAU2R,iBAA8B,IAAXvS,EACpGlN,QAAO,sBAAE,4BAAA7H,EAAA,6DACCjE,EAAQgZ,IAAW/V,EAAUsO,GAAcgP,GAAE/L,QAAQwB,eAAegD,GADrE,SAECiH,GAAQ,kBAAMM,GAAErN,MAAMiH,SAASP,EAAW5Z,MAF3C,2CAJb,uBA/Db,SA6EgBigB,EA7EhB,8EA6EC,WAAuB8G,GAAvB,SAAA9iB,EAAA,6DACI+lB,GAAyB,GAD7B,kBAIcjD,IAJd,sDAMQnhB,QAAQC,IAAR,MANR,uBAQQmkB,GAAyB,GARjC,2EA7ED,uBCJY,SAASyB,GAAT,GAKX,IAJAnU,EAID,EAJCA,aACAE,EAGD,EAHCA,mBACAkU,EAED,EAFCA,wBACAxL,EACD,EADCA,8BAEMyJ,EAAO3nB,OAAOsd,OAAO,CACvBqM,KAAM,EACNC,OAAQ,EACRC,QAAS,IAGb,EAAsCpe,mBAAS,GAA/C,mBAAOqe,EAAP,KAAoBC,EAApB,KACA,EAAwBte,mBAASkc,EAAKgC,MAAtC,mBAAO1B,EAAP,KAAaC,EAAb,KACA,EAAsDzc,qBAAtD,mBAAOue,EAAP,KAA4BC,EAA5B,KAmBA,OAjBAre,qBAAU,WACN,IAAMse,EAASJ,EAAcJ,EAE7B,GAAII,EAAcJ,EAAyB,CACvC,IAAMS,EL9BX,SAAiED,EAAQE,GAC5E,OAAQziB,KAAK0iB,KAAKH,GAAU,GAAKE,EK6BQE,CAAwDJ,EAAQ1U,GACjGyU,EAAuBE,GACvBjC,EAAQP,EAAKiC,aACV,GAAIE,EAAcJ,EAAyB,CAC9C,IAAMa,EL9BX,SAAiEL,EAAQM,GAC5E,OAAQ,EAAI7iB,KAAK0iB,KAAKH,GAAU,GAAKM,EK6BGC,CAAwDP,EAAQ5U,GAChG2U,EAAuBM,GACvBrC,EAAQP,EAAKkC,cAEbI,OAAuBlnB,GACvBmlB,EAAQP,EAAKgC,QAElB,CAACrU,EAAcE,EAAoBkU,EAAyBxL,EAA+B4L,IAG1F,mCACI,sBAAKtgB,UAAU,mCAAf,UACI,gCACI,sBAAMA,UAAU,oFAAhB,0GAGA,sBAAKA,UAAU,2BAAf,UACI,uBAAO6f,QAAQ,QAAQ7f,UAAU,iBAAjC,SACI,sBAAMA,UAAU,cAAhB,4BAEJ,cAACsd,GAAD,CACIC,MAAO,IACPld,KAAK,SACLmd,GAAG,QACHxd,UAAU,iCACVyd,aAAc1I,GAAE/L,QAAQmR,kBAA4C,EAA1B+F,EAA6B,EAAG,GAC1ExC,YAAW,UAAK3I,GAAEnf,UAAU8R,MAAM9K,OAAvB,qBAA0CmY,GAAEnf,UAAUG,YAAY6G,QAC7EwB,IAAK,EACL0e,KAAM,EACNC,QAAS,SAAAvoB,GAAK,OAAI+rB,EAAenrB,WAAWZ,aAKxD,sBAAKwL,UAAU,aAAf,UACKye,IAASN,EAAKiC,QACX,cAACze,EAAD,CACIvC,MAAM,kBACNwB,KAAMmU,GAAE/L,QAAQ0R,kBAAkB8F,GAClC1f,SAAUiU,GAAEnf,UAAUE,YAAY8G,OAClCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBqG,EAAsB9L,GAC1DtT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCmE,kBAAkB,SAGzB0d,IAASN,EAAKkC,SACX,cAAC1e,EAAD,CACIvC,MAAM,mBACNwB,KAAMmU,GAAE/L,QAAQkR,gBAAgBsG,GAChC1f,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBqG,EAAsBN,GAC1D9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCmE,kBAAkB,SAGzB0d,IAASN,EAAKgC,MAAQ,kDC9E5B,SAASe,GAAT,GAKX,IAJApV,EAID,EAJCA,aACAE,EAGD,EAHCA,mBACAkU,EAED,EAFCA,wBACAxL,EACD,EADCA,8BAEMyJ,EAAO3nB,OAAOsd,OAAO,CACvBsM,OAAQ,EACRC,QAAS,IAGb,EAAwBpe,mBAASkc,EAAKiC,QAAtC,mBAAO3B,EAAP,KAAaC,EAAb,KACA,EAAsCzc,mBAAS,GAA/C,mBAAOkf,EAAP,KAAoBC,EAApB,KACA,EAAsCnf,mBAAS,GAA/C,mBAAOqe,EAAP,KAAoBC,EAApB,KASA,OAPAne,qBAAU,WACN,INfmDif,EAAwBL,EAJxBM,EAAwBV,EMmBrEF,EAASjC,IAASN,EAAKiC,QNnBsBkB,EMoBFH,ENpB0BP,EMoBb5U,ENnB3D7N,KAAKzL,IAAK4uB,EAAyBV,EAAoB,EAAI,KAGXS,EMiBFF,ENjB0BH,EMiBblV,ENhB3D3N,KAAKzL,IAAI,GAAK2uB,EAAyBL,EAAmB,GAAI,IMiBjET,EAAeL,EAA0BQ,KAC1C,CAAC5U,EAAcE,EAAoBkU,EAAyBxL,EAA+B+J,EAAM0C,IAGhG,mCACI,sBAAKnhB,UAAU,mCAAf,UACI,gCACI,sBAAMA,UAAU,oFAAhB,gGAGA,sBAAKA,UAAU,2BAAf,UACI,cAAC,IAAOyf,MAAR,UACI,sBAAKzf,UAAU,oBAAf,UACI,eAAC,IAAD,CACI0f,QAASjB,IAASN,EAAKiC,OACvBrC,SAsChC,WACQU,IAASN,EAAKiC,OACd1B,EAAQP,EAAKkC,SAEb3B,EAAQP,EAAKiC,SAzCWpgB,UAAU,uMAHd,UAKI,sBAAMA,UAAU,UAAhB,uBACA,sBAAMA,UAAS,UAAKye,IAASN,EAAKiC,OAAS,gBAAkB,gBAA9C,qGAEnB,cAAC,IAAOT,MAAR,CAAc3f,UAAU,+BAAxB,SACKye,IAASN,EAAKiC,OAAd,iBAAiCrL,GAAEnf,UAAUE,YAAY8G,QAAzD,kBAA+EmY,GAAEnf,UAAU8R,MAAM9K,eAI9G,cAAC0gB,GAAD,CACIC,MAAO,IACPld,KAAK,SACLmd,GAAG,cACHxd,UAAU,iCACVyd,aAAc0D,EACdzD,YAAY,eACZtf,IAAK,EACL0e,KAAM,EACNC,QAAS,SAAAvoB,GAAK,OAAI4sB,EAAehsB,WAAWZ,aAIxD,qBAAKwL,UAAU,aAAf,SACI,cAAC2B,EAAD,CACIvC,MAAM,eACNwB,KAAM0b,MAAMgE,GAAe,IAAMvL,GAAE/L,QAAQmR,kBAAkBmG,GAC7Dxf,SAAUiU,GAAEnf,UAAUG,YAAY6G,OAClCsE,OAAQob,MAAMgE,GAAe,IAAMvL,GAAE/L,QAAQ0R,kBAAkB4F,EAAc5L,GAC7EtT,WAAY2T,GAAEnf,UAAUE,YAAY8G,OACpCmE,kBAAkB,gBClE3B,SAASwgB,GAAT,GAQX,IAPApM,EAOD,EAPCA,cACA3C,EAMD,EANCA,YACAqE,EAKD,EALCA,sBACA2K,EAID,EAJCA,kBACAC,EAGD,EAHCA,oBACApW,EAED,EAFCA,UACA6U,EACD,EADCA,wBAEA,EAA0Cje,qBAA1C,mBAAOyf,EAAP,KAAsBC,EAAtB,KACA,EAA4C1f,mBAAS,CAAC,EAAG,EAAG,EAAG,IAA/D,mBAAO2f,EAAP,KAAuBC,EAAvB,KACA,EAAoC5f,mBAAS,CAAC,EAAG,EAAG,EAAG,IAAvD,mBAAO6f,EAAP,KAAmBC,EAAnB,KAuBA,OArBA3f,qBAAU,WACDsf,GACDC,EAAiBvsB,WAAW+f,MAEjC,CAACA,IAEJ/S,qBAAU,WACN,IAAM+V,EAAoBxF,GAAgBkE,EAAuBxL,EAAWmH,EAAakP,GACnFtJ,EX7Bc,EW6BMD,EACpBE,EAAoBF,EAAoB/F,GACxCkG,EAAoBH,EAAoB9F,GAExC0F,EAAgBpF,GAAgB6O,EAAmBnW,EAAWmH,EAAakP,GAC3E1J,EXlCc,EWkCED,EAChBE,EAAgBF,EAAgB3F,GAChC8F,EAAgBH,EAAgB1F,GAEtCwP,EAAkB,CAAC1J,EAAmBC,EAAmBC,EAAmBC,IAC5EyJ,EAAc,CAAChK,EAAeC,EAAeC,EAAeC,MAC7D,CAAC1F,EAAaqE,EAAuBxL,EAAWqW,IAG/C,mCACI,sBAAK1hB,UAAU,mCAAf,UACI,gCACI,sBAAMA,UAAU,oFAAhB,wGAGA,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,uBAAO6f,QAAQ,UAAU7f,UAAU,iBAAnC,SACI,sBAAMA,UAAU,cAAhB,8BAEJ,sBACIA,UAAU,yDACVM,QAAS,WACLqhB,EAAiBvsB,WAAW+f,KAHpC,SAMI,mBAAGnV,UAAU,+BAGrB,cAACsd,GAAD,CACIC,MAAO,IACPld,KAAK,SACLmd,GAAG,UACHxd,UAAU,iCACVyd,aAAciE,EACdhE,YAAY,kBACZtf,IAAK,EACL0e,KAAM,EACNC,QAAS,SAAAvoB,GAAK,OAAImtB,EAAiBvsB,WAAWZ,aAK1D,sBAAKwL,UAAU,6DAAf,UACI,sBAAMA,UAAU,4DAAhB,mCACA,cAAC2B,EAAD,CACIyb,UAAW,EACXhe,MAAM,UACNwB,KAAM0b,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQkR,gBAAgB0H,EAAe,IAC/E9gB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQmR,kBAAkByH,EAAe,GAAK1B,GACxF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIyb,UAAW,EACXhe,MAAM,WACNwB,KAAM0b,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQkR,gBAAgB0H,EAAe,IAC/E9gB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQmR,kBAAkByH,EAAe,GAAK1B,GACxF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIyb,UAAW,EACXhe,MAAM,YACNwB,KAAM0b,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQkR,gBAAgB0H,EAAe,IAC/E9gB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQmR,kBAAkByH,EAAe,GAAK1B,GACxF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIyb,UAAW,EACXhe,MAAM,WACNwB,KAAM0b,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQkR,gBAAgB0H,EAAe,IAC/E9gB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMsF,EAAe,IAAM,GAAK7M,GAAE/L,QAAQmR,kBAAkByH,EAAe,GAAK1B,GACxF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,UAGtC6kB,GACE,qCACI,sBAAMzhB,UAAU,4DAAhB,mCACA,cAAC2B,EAAD,CACIyb,UAAW,EACXhe,MAAM,UACNwB,KAAM0b,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQkR,gBAAgB4H,EAAW,IACvEhhB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQmR,kBAAkB2H,EAAW,GAAK5B,GAChF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIyb,UAAW,EACXhe,MAAM,WACNwB,KAAM0b,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQkR,gBAAgB4H,EAAW,IACvEhhB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQmR,kBAAkB2H,EAAW,GAAK5B,GAChF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIyb,UAAW,EACXhe,MAAM,YACNwB,KAAM0b,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQkR,gBAAgB4H,EAAW,IACvEhhB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQmR,kBAAkB2H,EAAW,GAAK5B,GAChF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,SAExC,cAAC+E,EAAD,CACIyb,UAAW,EACXhe,MAAM,WACNwB,KAAM0b,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQkR,gBAAgB4H,EAAW,IACvEhhB,SAAUiU,GAAEnf,UAAU8R,MAAM9K,OAC5BsE,OAAQob,MAAMwF,EAAW,IAAM,GAAK/M,GAAE/L,QAAQmR,kBAAkB2H,EAAW,GAAK5B,GAChF9e,WAAY2T,GAAEnf,UAAUG,YAAY6G,oBC7IrD,SAASolB,GAAT,GAKX,IAJAta,EAID,EAJCA,MACAkN,EAGD,EAHCA,mBACAD,EAED,EAFCA,mBACAtJ,EACD,EADCA,UAEMqJ,EAAgCC,EAAqBC,EACrDO,EAAgB8M,EAAava,EAAMyN,eACnC3C,EAAcyP,EAAava,EAAM8K,aACjCgP,EAAoBS,EAAava,EAAMkP,uBACvCC,EAAwBoL,EAAava,EAAMmP,uBAEjD,OACI,sBAAK7W,UAAU,yEAAf,UACI,qBAAKA,UAAS,0CAAd,SACI,cAACigB,GAAD,CACInU,aAAcpE,EAAMoE,aACpBE,mBAAoBtE,EAAMsE,mBAC1BkU,wBAAyBvL,EACzBD,8BAA+BA,MAGvC,qBAAK1U,UAAS,0CAAd,SACI,cAACkhB,GAAD,CACIpV,aAAcpE,EAAMoE,aACpBE,mBAAoBtE,EAAMsE,mBAC1BkU,wBAAyBvL,EACzBD,8BAA+BA,MAGvC,qBAAK1U,UAAS,qDAAd,SACI,cAACuhB,GAAD,CACIpM,cAAeA,EACf3C,YAAaA,EACbqE,sBAAuBA,EACvB2K,kBAAmBA,EACnBC,oBAAqB/Z,EAAMwa,qBAC3B7W,UAAWA,EACX6U,wBAAyBvL,SAOzC,SAASsN,EAAaztB,GAClB,OAAOY,WAAW9B,kBAAQkB,EAAOkT,EAAMiD,QAAQlY,YTxBlCuhB,GAUVlS,aAAe,CAClBqgB,KAAM,UACN5H,aAAc,mBACdlG,aAAa,EACbC,YAAY,EACZwG,mBAAmB,EACnB5L,qBAAqB,WAAD,4BAAE,sBAAAzW,EAAA,0FAAF,kDAAC,IEkG7BijB,GAAW5Z,aAAe,CACtB+Z,YAAa,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KACvCG,gBAAiB,kDCtFrBsB,GAAaxb,aAAe,CACxByb,MAAO,IACPld,KAAM,SACNqd,YAAa,iBACbX,QAAS,cGyCbkD,GAAwBne,aAAe,GCJvCof,GAAsBpf,aAAe,GCkErCyf,GAAiBzf,aAAe,G,aEnKzB,SAASsgB,GAAeC,EAAc/R,GACzC,GAH0B,MAGtBA,EACA,MAAO,UAGX,GAAIA,EAAU+R,EACV,KAAK,YAAL,OAAkB/R,EAAlB,4CAA6D+R,GAGjE,GAAqB,IAAjBA,EAAoB,CACpB,GAAgB,IAAZ/R,EACA,MAAO,QAGX,GAAgB,IAAZA,EACA,MAAO,QAIf,MAAM,GAAN,OAAUA,EAAU,GAGjB,SAASgS,GAAgBD,EAAc/R,GAC1C,GAzB0B,MAyBtBA,EACA,MAAO,UAGX,GAAIA,EAAU+R,EACV,KAAK,YAAL,OAAkB/R,EAAlB,4CAA6D+R,GAIjE,GAAqB,IAAjBA,EAAoB,CACpB,GAAgB,IAAZ/R,EACA,OAAQ,qBAAKzN,IAAI,2BAA2B0f,MAAM,MAAMC,OAAO,QAGnE,GAAgB,IAAZlS,EACA,OAAQ,qBAAKzN,IAAI,2BAA2B0f,MAAM,MAAMC,OAAO,aAEhE,GAAqB,IAAjBH,EACP,OAAQ,mBAAGriB,UAAS,qBAAgBsQ,EAAU,EAA1B,qCAGxB,MAAM,GAAN,OAAUA,GAGP,SAASmS,GAAiBJ,GAC7B,OAAqB,IAAjBA,EACO,OAGU,IAAjBA,EACO,OAGJ,Y,IChCUK,G,kDAajB,WAAYprB,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgd,uBAAuB,EACvBoO,iBAAiB,EACjBC,uBAAuB,EACvBC,sBAAsB,EACtBC,oBAAoB,EACpB1S,eAAgB,GAChB2S,WAAW,GAGf,EAAKjlB,OAASiX,GAAEjX,OAAO,EAAKxG,MAAMsQ,KAAKob,UAAUrY,QAAQlY,UAEzD,EAAKwwB,4BAA8B,EAAKA,4BAA4BnrB,KAAjC,gBACnC,EAAKorB,kCAAoC,EAAKA,kCAAkCprB,KAAvC,gBACzC,EAAKqrB,2BAA6B,EAAKA,2BAA2BrrB,KAAhC,gBAClC,EAAKsrB,+BAAiC,EAAKA,+BAA+BtrB,KAApC,gBACtC,EAAKurB,mBAAqB,EAAKA,mBAAmBvrB,KAAxB,gBAE1B,EAAK2c,QAAU,EAAKA,QAAQ3c,KAAb,gBArBA,E,0CAwBnB,WAAU,IAAD,OACCqT,EAAMhC,KAAKgC,MAAQ,IACnB6J,EAAgB,UAAMhgB,EAAcigB,qBAAqBF,GAAEvf,SAA3C,kBAA6DsD,KAAKxB,MAAMsQ,KAAKob,UAAUtb,OACvGmN,EAAiB7f,EAAc8f,kBAAkBC,GAAEvf,QAASR,EAAcsY,qBAAqByH,GAAEvf,UACjG8tB,EAAaxqB,KAAKxB,MAAMsQ,KAAK2b,aAAenuB,WAAW0D,KAAKxB,MAAMsQ,KAAK0b,YAAc,IAAQxqB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAK0b,YAEjIE,EAAmB1qB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAK4b,kBACvDtN,EAAiB9gB,WAAW0D,KAAKxB,MAAMsQ,KAAKsO,eAAeC,MAAQ,IACnEC,EAA0Btd,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAKsO,eAAeG,UAAUJ,OACvFK,EAAoB,UAAMthB,EAAcigB,qBAAqBF,GAAEvf,SAA3C,oBAA+DsD,KAAKxB,MAAMsQ,KAAK2O,WAEnGjkB,EAAOkJ,IAAKC,MAAMiQ,KAAK,GACvB+X,EAAyBjoB,IAAKC,MAAMiQ,KAAK5S,KAAKxB,MAAMsQ,KAAK8b,qBAAqBC,YAAY5uB,IAAIyG,IAAKC,MAAMiQ,KAAK5S,KAAKxB,MAAMsQ,KAAK8b,qBAAqBE,QACnJC,EAAwD,IAArCJ,EAAuB9X,IAAIrZ,GAC9CoxB,EAAuB5qB,KAAKgF,OAAOxK,QAAQmwB,GAC3CK,EAA6BhrB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAKmc,eAAeC,UAAUC,aAC1FC,EAAoBprB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAKmc,eAAeC,UAAUG,kBAAkBlO,OAEnGmO,EADYztB,SAASmC,KAAKxB,MAAMsQ,KAAKyc,eAAiB1tB,SAASmC,KAAKxB,MAAMsQ,KAAK0c,aACpD3tB,SAASmC,KAAKxB,MAAMsQ,KAAKsR,cACpDqL,EAAaH,EAAetrB,KAAKxB,MAAM+T,UAEvCmZ,EAAkB1rB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAK6c,cAAcC,WAAWzO,OAC/E0O,EAAmB7rB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAK6c,cAAcG,YAAY3O,OACjF4O,EAAqB/rB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAK6c,cAAcK,cAAc7O,OAErF8O,EAAuBjsB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAKmc,eAAeC,UAAUe,qBAAqB9O,OACzG+O,EAAmBlsB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAKmc,eAAeC,UAAUgB,iBAAiB/O,OACjGgO,EAAcnrB,KAAKgF,OAAOxK,QAAQwF,KAAKxB,MAAMsQ,KAAKmc,eAAeC,UAAUC,aAE3EgB,EADcnsB,KAAKosB,SAASpsB,KAAKxB,MAAMsQ,KAAKmc,gBAAkB,EACnCE,EAAce,EAAoBD,EAE7D/K,EAA6B,sBAAMha,UAAU,UAAhB,uEAG7BmlB,EACF,sBAAKnlB,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,YACNwB,KAAO,mBAAGqC,KAAM+R,EAAkByF,IAAI,aAAavX,OAAO,SAASlD,UAAU,eAAtE,SAAsFlH,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,SAC/HwE,WAAYyT,IAEhB,cAAClT,EAAD,CACIvC,MAAM,cACNwB,KAAM9H,KAAKxB,MAAMsQ,KAAK2b,aAAexO,GAAE/L,QAAQhL,iBAAiBslB,GAAcxqB,KAAKgF,OAAO+M,YAAYyY,GACtGxiB,SAAUhI,KAAKxB,MAAMsQ,KAAK2b,aAAe,IAAMzqB,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OACjFsE,OAAQpI,KAAKxB,MAAMsQ,KAAK2b,aAAe,GAAKxO,GAAE/L,QAAQmR,kBAAkBmJ,EAAaxqB,KAAKxB,MAAMqd,oBAChGvT,WAAYtI,KAAKxB,MAAMsQ,KAAK2b,aAA2D,oBAAsBxO,GAAEnf,UAAUG,YAAY6G,OACrIiE,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,gBACNwB,KAAMmU,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMsQ,KAAKya,gBAElD,cAAC1gB,EAAD,CACIvC,MAAM,oBACNwB,KAAM9H,KAAKgF,OAAO+M,YAAY2Y,GAC9B1iB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBqJ,EAAmB1qB,KAAKxB,MAAMqd,oBAClEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiE,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,6BAA6C,cAAC8S,GAAD,CAAeC,WAAW,EAAM1Z,SAAU2gB,OACjGpZ,KAAMmU,GAAE/L,QAAQhL,iBAAiBkY,GACjCpV,SAAS,IACTI,OAAS,mBAAG+B,KAAMqT,EAAsBmE,IAAI,aAAavX,OAAO,SAASlD,UAAU,UAA1E,SAAqF+U,GAAE/L,QAAQ5L,cAActE,KAAKxB,MAAMsQ,KAAK2O,aACtIjX,KAAMxG,KAAKxB,MAAMsQ,KAAKsT,iBAAoB,sBAAMlb,UAAU,eAAhB,6BAAyD,KACnGuB,cAAc,8DAElB,cAACI,EAAD,CACIvC,MAAM,wBACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYuL,GAC9BtV,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB/D,EAA0Btd,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMsQ,KAAKsO,eAAeG,UAAUlM,MAAOrR,KAAKxB,MAAMsQ,KAAKsO,eAAeG,UAAU/K,UAAWH,QAKjIia,EAAiCtsB,KAAKusB,iBAAiBvsB,KAAKxB,MAAMsQ,KAAKmc,eAAeC,WAE5F,OACI,sBAAKhkB,UAAU,2BAAf,UACI,sBAAKA,UAAS,0CAAd,UACI,sBAAKA,UAAU,sCAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAMA,UAAU,oCAAhB,UACI,sBAAMA,UAAU,OAAhB,SAAwBlH,KAAKxB,MAAMsQ,KAAKxR,OACxC,cAAC0c,GAAD,CAAezZ,SAAU8rB,SAIjC,sBAAKnlB,UAAU,iEAAf,UACI,sBAAMA,UAAU,uBAAhB,0BACA,sBAAMA,UAAU,+BAAhB,SAAgD+U,GAAE/L,QAAQK,eAAekb,KACzE,sBAAMvkB,UAAU,8CAAhB,SAA+DokB,IAC/D,sBAAMpkB,UAAU,gDAAhB,uBAGJ,sBAAKA,UAAU,mEAAf,UACI,sBAAMA,UAAU,iCAAhB,yBACA,sBAAMA,UAAU,8CAAhB,SAA+DlH,KAAKxB,MAAMsQ,KAAK0c,cAC/E,sBAAMtkB,UAAU,2CAAhB,qBACA,sBAAMA,UAAU,uBAAhB,qBACA,sBAAMA,UAAU,0BAAhB,SAA2C+U,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMsQ,KAAKmc,eAAepS,aAGtG,qBAAK3R,UAAU,iEAAf,SACI,uBAAMA,UAAU,qBAAhB,UACI,mBAAGA,UAAU,mBACZ+U,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMsQ,KAAKsR,mBAIjD,qBAAKlZ,UAAU,yDAGnB,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,uBACNwB,KAAM9H,KAAKgF,OAAO+M,YAAY6Y,GAC9B5iB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBuJ,EAAuB5qB,KAAKxB,MAAMqd,oBACtEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiE,cAAc,SAElB,sBAAKb,UAAU,6EAAf,UACI,yBACIK,KAAK,SACLL,UAAU,wDACVQ,SAAU1H,KAAKvB,MAAMgd,wBAA0BsP,EAAkBvjB,QAAO,sBAAE,sBAAA7H,EAAA,sEAChE,EAAKgc,SAAQ,kBAAM,EAAKnd,MAAMwZ,WADkC,2CAH9E,UAOI,sBAAM9Q,UAAU,YAAhB,yBACA,sBAAMA,UAAU,yBAAhB,gCAEJ,yBACIK,KAAK,SACLL,UAAU,yDACVQ,SAAU1H,KAAKvB,MAAMgd,wBAA0BsP,EAAkBvjB,QAAO,sBAAE,sBAAA7H,EAAA,sEAChE,EAAKgc,SAAQ,kBAAM,EAAKnd,MAAMuZ,cADkC,2CAH9E,UAOI,sBAAM7Q,UAAU,YAAhB,uBACA,sBAAMA,UAAU,yBAAhB,8BAEJ,wBACIK,KAAK,SACLL,UAAU,sEACVQ,SAAU1H,KAAKvB,MAAMgd,uBAAgD,IAAvBzb,KAAKxB,MAAMG,QAAe6I,QAAO,sBAAE,sBAAA7H,EAAA,sEACvE,EAAKgc,SAAQ,kBAAM,EAAKnd,MAAMiZ,SADyC,2CAHrF,+BAYR,qBAAKvQ,UAAU,qBAEf,sBAAKA,UAAU,6DAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,kBACNwB,KAAMwhB,GAAezrB,SAASmC,KAAKxB,MAAMsQ,KAAKya,cAAe1rB,SAASmC,KAAKxB,MAAMsQ,KAAKmc,eAAezT,UACrGlP,WDtOF,MCsOczK,SAASmC,KAAKxB,MAAMsQ,KAAKmc,eAAezT,SAA+B,mCAAE,sBAAMtQ,UAAU,gBAAhB,2BAA0D,mCAAE,sBAAMA,UAAU,gBAAhB,6BACjJU,eAAe,YACfG,cAAc,sBAElB,cAACc,EAAD,CACIvC,MAAM,MACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYqZ,GAC9BpjB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB+J,EAAoBprB,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OAEpC8D,eAAe,cAGnB,cAACiB,EAAD,CACIvC,MAAM,kBACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYiZ,GAC9BhjB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB2J,EAA6BhrB,KAAKxB,MAAMqd,oBAC5EvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAM8lB,EAAiC,YAAc,KACrD1kB,eAAe,YACfG,cAAc,OACdU,cAAa,eAAU6jB,EAAiC,WAAa,KAAxD,OAEjB,cAACzjB,EAAD,CACIvC,MAAM,MACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYoa,GAC9BnkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB8K,EAAYnsB,KAAKxB,MAAMqd,oBAC3DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC8D,eAAe,YACfG,cAAc,SAGlB,qBAAKb,UAAU,2BAAf,SACKlH,KAAKwsB,WAAWxsB,KAAKxB,MAAMsQ,KAAKmc,eAAgBjrB,KAAKxB,MAAMsQ,KAAKya,mBAIzE,qBAAKriB,UAAU,qBAEf,sBAAKA,UAAU,yCAAf,UACI,yBACIK,KAAK,SACLL,UAAU,0BACVQ,SAA2D,IAAjD7J,SAASmC,KAAKxB,MAAMsQ,KAAK2d,YAAY5T,QAC/CrR,QAASxH,KAAKmqB,4BAJlB,0BAKkBnqB,KAAKvB,MAAMorB,iBAAmB,mBAAG3iB,UAAU,kCAE7D,yBACIK,KAAK,SACLL,UAAU,0BACVQ,SAAiE,IAAvD7J,SAASmC,KAAKxB,MAAMsQ,KAAK4d,kBAAkB7T,QACrDrR,QAASxH,KAAKoqB,kCAJlB,+BAKuBpqB,KAAKvB,MAAMqrB,uBAAyB,mBAAG5iB,UAAU,qCAI5E,qBAAKA,UAAU,qBAEf,sBAAKA,UAAU,oCAAf,UACI,uBAAMA,UAAU,4DAA4DM,QAASxH,KAAKqqB,2BAA1F,UAAsH,mBAAGnjB,UAAS,aAASlH,KAAKvB,MAAMsrB,qBAAuB,qBAAuB,sBAAlE,WAAlI,iBAGA,uBAAM7iB,UAAS,2CAAuF,IAAjDrJ,SAASmC,KAAKxB,MAAMsQ,KAAKmI,oBAA4B,WAAa,kBAAoBzP,QAAS,WAC5I3J,SAAS,EAAKW,MAAMsQ,KAAKmI,oBAAsB,GAC/C,EAAKqT,kCAFb,UAKI,mBAAGpjB,UAAU,yBALjB,qBAMsB,sBAAMA,UAAU,UAAhB,SAA2B+U,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMsQ,KAAKmI,sBANzF,UAUHjX,KAAKvB,MAAMsrB,sBACR,sBAAK7iB,UAAU,sCAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,cACNwB,KAAM9H,KAAKgF,OAAO+M,YAAY2Z,GAC9B1jB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBqK,EAAkB1rB,KAAKxB,MAAMqd,oBACjEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMsQ,KAAK6c,cAAcC,WAAWva,MAAOrR,KAAKxB,MAAMsQ,KAAK6c,cAAcC,WAAWpZ,UAAWH,KAE/H,cAACxJ,EAAD,CACIvC,MAAM,eACNwB,KAAM9H,KAAKgF,OAAO+M,YAAY8Z,GAC9B7jB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBwK,EAAmB7rB,KAAKxB,MAAMqd,oBAClEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMsQ,KAAK6c,cAAcG,YAAYza,MAAOrR,KAAKxB,MAAMsQ,KAAK6c,cAAcG,YAAYtZ,UAAWH,KAEjI,cAACxJ,EAAD,CACIvC,MAAM,iBACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYga,GAC9B/jB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB0K,EAAqB/rB,KAAKxB,MAAMqd,oBACpEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMsQ,KAAK6c,cAAcK,cAAc3a,MAAOrR,KAAKxB,MAAMsQ,KAAK6c,cAAcK,cAAcxZ,UAAWH,cAOpJrS,KAAKvB,MAAMorB,iBAAmB7pB,KAAK2sB,WAAW,gBAAiB3sB,KAAKxB,MAAMsQ,KAAK2d,YAAazsB,KAAKxB,MAAMsQ,KAAKya,cAC5GvpB,KAAKvB,MAAMqrB,uBAAyB9pB,KAAK2sB,WAAW,qBAAsB3sB,KAAKxB,MAAMsQ,KAAK4d,kBAAmB1sB,KAAKxB,MAAMsQ,KAAKya,cAC7HvpB,KAAKvB,MAAMurB,oBAAsBhqB,KAAKqX,yB,+BAKnD,WAGI,IAFA,IAAM8M,EAAQ,GAEL/X,EAAI,EAAGA,EAAIpM,KAAKvB,MAAM6Y,eAAelc,SAAUgR,EACpD+X,EAAM5B,KAAK,8BAAcviB,KAAK2sB,WAAL,yBAAkCvgB,EAAI,GAAKpM,KAAKvB,MAAM6Y,eAAelL,KAAzEA,IAGzB,OACI,qCACK+X,EACD,qBAAKjd,UAAU,iDAAf,SACI,wBACIK,KAAK,SACLL,UAAU,wBACVQ,SAAW1H,KAAKvB,MAAMwrB,WAAajqB,KAAKvB,MAAM6Y,eAAelc,SAAWyC,SAASmC,KAAKxB,MAAMsQ,KAAKmI,oBACjGzP,QAASxH,KAAKuqB,mBAJlB,yBAMHvqB,KAAKvB,MAAMwrB,WAAa,cAACzd,EAAD,CAASjF,KAAK,QAAQjB,MAAK,kBAAa2V,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMsQ,KAAKmI,oBAArD,kB,wBAKhE,SAAW3Q,EAAOsmB,EAASrD,GACvB,IAAMsD,EAAiBhvB,SAASmC,KAAKxB,MAAMsQ,KAAKsR,cAAgBviB,SAAS+uB,EAAQ/T,QAC3EiU,EAAiB9sB,KAAKgF,OAAOxK,QAAQoyB,EAAQ1B,UAAUG,kBAAkBlO,OACzE4P,EAA0B/sB,KAAKgF,OAAOxK,QAAQoyB,EAAQ1B,UAAUC,aAChE6B,EAAahtB,KAAKusB,iBAAiBK,EAAQ1B,WAE3Ce,EAAuBjsB,KAAKgF,OAAOxK,QAAQoyB,EAAQ1B,UAAUe,qBAAqB9O,OAClF+O,EAAmBlsB,KAAKgF,OAAOxK,QAAQoyB,EAAQ1B,UAAUgB,iBAAiB/O,OAC1EgO,EAAcnrB,KAAKgF,OAAOxK,QAAQoyB,EAAQ1B,UAAUC,aAEpDgB,EADcnsB,KAAKosB,SAASQ,GAAW,EACZzB,EAAce,EAAoBD,EAEnE,OACI,mCACI,sBAAK/kB,UAAS,oCAAd,UACI,sBAAKA,UAAU,sCAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAMA,UAAU,oCAAhB,SACKZ,MAGT,sBAAKY,UAAU,iEAAf,UACI,sBAAMA,UAAU,uBAAhB,4BACA,sBAAMA,UAAU,+BAAhB,SAAgD0lB,EAAQ/T,OAAS,EAAIoD,GAAE/L,QAAQK,eAAesc,EAAiB7sB,KAAKxB,MAAM+T,WAAa,MACvI,sBAAMrL,UAAU,8CAAhB,SAA+D0lB,EAAQ/T,OAAS,EAAIoD,GAAE/L,QAAQjL,cAAc4nB,GAAkB,MAC9H,sBAAM3lB,UAAU,gDAAhB,uBAEJ,sBAAKA,UAAU,mEAAf,UACI,sBAAMA,UAAU,uBAAhB,qBACA,sBAAMA,UAAU,0BAAhB,SAA2C0lB,EAAQ/T,OAAS,EAAIoD,GAAE/L,QAAQjL,cAAc2nB,EAAQ/T,QAAU,SAE9G,qBAAK3R,UAAU,iEAAf,SACI,uBAAMA,UAAU,aAAhB,iBACSlH,KAAKitB,aAAaL,QAI/B,qBAAK1lB,UAAU,yDAGnB,sBAAKA,UAAU,6DAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,UACNwB,KAAMwhB,GAAezrB,SAASmC,KAAKxB,MAAMsQ,KAAKya,cAAe1rB,SAAS+uB,EAAQpV,UAC9E5P,eAAe,YACfG,cAAc,sBAElB,cAACc,EAAD,CACIvC,MAAM,MACNwB,KAAM9H,KAAKgF,OAAO+M,YAAY+a,GAC9B9kB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkByL,EAAiB9sB,KAAKxB,MAAMqd,oBAChEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OAEpC8D,eAAe,cAGnB,cAACiB,EAAD,CACIvC,MAAM,aACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYgb,GAC9B/kB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB0L,EAA0B/sB,KAAKxB,MAAMqd,oBACzEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMwmB,EAAa,YAAc,KACjCplB,eAAe,YACfG,cAAc,OACdU,cAAa,eAAUukB,EAAa,WAAa,KAApC,OAEjB,cAACnkB,EAAD,CACIvC,MAAM,MACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYoa,GAC9BnkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB8K,EAAYnsB,KAAKxB,MAAMqd,oBAC3DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC8D,eAAe,YACfG,cAAc,SAGlB,qBAAKb,UAAU,2BAAf,SACKlH,KAAKwsB,WAAWI,EAASrD,e,8BAQlD,SAAiB2D,GACb,IAAM/B,EAAcnrB,KAAKgF,OAAOxK,QAAQ0yB,EAAiB/B,aACnDe,EAAmBlsB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBhB,iBAAiB/O,OAE/E,OAAOgO,EAAc,GAAKA,EAAce,I,qDAG5C,SAAwCgB,GACpC,IAAM7B,EAAoBrrB,KAAKgF,OAAOxK,QAAQ0yB,EAAiB7B,kBAAkBlO,OAC3EgQ,EAAiBntB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBC,eAAehQ,OACrEiQ,EAAgBptB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBE,cAAcjQ,OAEzE,OACI,sBAAKjW,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,WACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYsZ,GAC9BrjB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBgK,EAAoBrrB,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiB7B,kBAAkBha,YAEvH,cAACxI,EAAD,CACIvC,MAAM,eACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYob,GAC9BnlB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB8L,EAAiBntB,KAAKxB,MAAMqd,oBAChEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBC,eAAe9b,YAEpH,cAACxI,EAAD,CACIvC,MAAM,cACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYqb,GAC9BplB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB+L,EAAgBptB,KAAKxB,MAAMqd,oBAC/DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBE,cAAc/b,UAC/GtJ,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,SACNwB,KAAI,cAAMmU,GAAE/L,QAAQ9K,mBAAsC,IAAnB+nB,EAAuB,EAAIC,EAAgBD,EAAgB,IAClGplB,cAAc,c,wDAM9B,SAA2CmlB,GACvC,IAAMC,EAAiBntB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBC,eAAehQ,OAErE8O,EAAuBjsB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBjB,qBAAqB9O,OACjFkQ,EAAoBrtB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBG,kBAAkBlQ,OAC3E+O,EAAmBlsB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBhB,iBAAiB/O,OAE/E,OACI,sBAAKjW,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,WACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYka,GAC9BjkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB4K,EAAuBjsB,KAAKxB,MAAMqd,oBACtEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBjB,qBAAqB5a,YAE1H,cAACxI,EAAD,CACIvC,MAAM,eACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYsb,GAC9BrlB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBgM,EAAoBrtB,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBG,kBAAkBhc,UACnHtJ,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,cACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYma,GAC9BlkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB6K,EAAmBlsB,KAAKxB,MAAMqd,oBAClEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBhB,iBAAiB7a,UAClHtJ,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,gBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAoC,IAAnBioB,EAAuB,EAAI7wB,WAAW+wB,GAAqB/wB,WAAW6wB,IACvGnlB,SAAS,IACTD,cAAc,c,qDAM9B,SAAwCmlB,GACpC,IAAM7B,EAAoBrrB,KAAKgF,OAAOxK,QAAQ0yB,EAAiB7B,kBAAkBlO,OAC3EgQ,EAAiBntB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBC,eAAehQ,OACrEiQ,EAAgBptB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBE,cAAcjQ,OAEnE8O,EAAuBjsB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBjB,qBAAqB9O,OACjFkQ,EAAoBrtB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBG,kBAAkBlQ,OAC3E+O,EAAmBlsB,KAAKgF,OAAOxK,QAAQ0yB,EAAiBhB,iBAAiB/O,OAGzEgP,EADcnsB,KAAKgF,OAAOxK,QAAQ0yB,EAAiB/B,aACzBe,EAEhC,OACI,sBAAKhlB,UAAU,8CAAf,UACI,sBAAMA,UAAU,8CAAhB,4BACA,cAAC2B,EAAD,CACIvC,MAAM,WACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYsZ,GAC9BrjB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBgK,EAAoBrrB,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiB7B,kBAAkBha,YAEvH,cAACxI,EAAD,CACIvC,MAAM,eACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYob,GAC9BnlB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB8L,EAAiBntB,KAAKxB,MAAMqd,oBAChEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBC,eAAe9b,YAEpH,cAACxI,EAAD,CACIvC,MAAM,cACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYqb,GAC9BplB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB+L,EAAgBptB,KAAKxB,MAAMqd,oBAC/DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBE,cAAc/b,UAC/GtJ,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,SACNwB,KAAI,cAAMmU,GAAE/L,QAAQ9K,mBAAsC,IAAnB+nB,EAAuB,EAAIC,EAAgBD,EAAgB,IAClGplB,cAAc,SAGlB,sBAAMb,UAAU,8CAAhB,2BACA,cAAC2B,EAAD,CACIvC,MAAM,WACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYka,GAC9BjkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB4K,EAAuBjsB,KAAKxB,MAAMqd,oBACtEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBjB,qBAAqB5a,YAE1H,cAACxI,EAAD,CACIvC,MAAM,eACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYsb,GAC9BrlB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkBgM,EAAoBrtB,KAAKxB,MAAMqd,oBACnEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBG,kBAAkBhc,UACnHtJ,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,cACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYma,GAC9BlkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB6K,EAAmBlsB,KAAKxB,MAAMqd,oBAClEvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAO,iCAAM,mBAAGU,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcioB,EAAiBhB,iBAAiB7a,UAClHtJ,cAAc,SAElB,cAACc,EAAD,CACIvC,MAAM,MACNwB,KAAM9H,KAAKgF,OAAO+M,YAAYoa,GAC9BnkB,SAAUhI,KAAKxB,MAAMsQ,KAAKob,UAAUrY,QAAQ/N,OAC5CsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB8K,EAAYnsB,KAAKxB,MAAMqd,oBAC3DvT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiE,cAAc,SAElB,cAACc,EAAD,CACIF,mBAAmB,aACnBrC,MAAM,gBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAoC,IAAnBioB,EAAuB,EAAI7wB,WAAW+wB,GAAqB/wB,WAAW6wB,IACvGnlB,SAAS,IACTD,cAAc,c,yBAM9B,SAAYsJ,EAAOmB,EAAWH,GAC1B,OACI,sBAAKnL,UAAU,gCAAf,UACI,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,oDAAqD+U,GAAE/L,QAAQjL,cAAcoM,MAC7H,uBAAMnK,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,4CAA6CsL,EAAY,EAAIyJ,GAAE/L,QAAQK,eAAe8B,EAAMG,GAAa,Y,yBAMrK,SAAYoa,EAASpV,GAQjB,IAPA,IAAMhe,EAAOkJ,IAAKC,MAAMiQ,KAAK,GAEzB0a,EAAc9zB,EACd+zB,EAAa/zB,EAEXg0B,EAAUZ,EAAQY,QAEfphB,EAAI,EAAGA,EAAIohB,EAAQpyB,SAAUgR,EAAG,CACrC,IAAIqL,EAAM+V,EAAQphB,GAEdA,IAAMoL,EACN8V,EAAcA,EAAYrxB,IAAIyG,IAAKC,MAAMiQ,KAAK6E,EAAI0F,QAElDoQ,EAAaA,EAAWtxB,IAAIyG,IAAKC,MAAMiQ,KAAK6E,EAAI0F,QAGxD,OAA8B,IAA1BmQ,EAAYza,IAAIrZ,GACT,KAGJwG,KAAKgF,OAAOxK,QAAQ+yB,GAAcvtB,KAAKgF,OAAOxK,QAAQ8yB,K,6BAIjE,WAGI,IAFA,IAAMnJ,EAAQ,GAEL/X,EAAI,EAAGA,EAAIpM,KAAKxB,MAAMsQ,KAAKya,eAAgBnd,EAChD+X,EAAM5B,KAAM,oBAAYrb,UAAU,wCAAtB,SAA+DoiB,GAAezrB,SAASmC,KAAKxB,MAAMsQ,KAAKya,cAAend,IAA7GA,IAGzB,OAAO+X,I,0BAGX,SAAasJ,GAGT,IAFA,IAAMtJ,EAAQ,GAEL/X,EAAI,EAAGA,EAAIpM,KAAKxB,MAAMsQ,KAAKya,eAAgBnd,EAAG,CAAC,IAAD,EACnD+X,EAAM5B,KAAM,oBAAYrb,UAAU,8BAAtB,SAAqD,UAAAumB,EAAKrhB,UAAL,SAASiF,MAAQ4K,GAAE/L,QAAQjL,cAAcwoB,EAAKrhB,GAAGiF,OAAS,GAAtGjF,IAGzB,OAAO+X,I,2BAGX,SAAcsJ,GAGV,IAFA,IAAMtJ,EAAQ,GAEL/X,EAAI,EAAGA,EAAIpM,KAAKxB,MAAMsQ,KAAKya,eAAgBnd,EAAG,CAAC,IAAD,EACnD+X,EAAM5B,KAAM,6BAAY,sBAAMrb,UAAU,uBAAhB,SAAwC,UAAAumB,EAAKrhB,UAAL,SAAS+Q,MAAQnd,KAAKgF,OAAO+M,YAAY/R,KAAKgF,OAAOxK,QAAQizB,EAAKrhB,GAAG+Q,QAAU,KAA1H/Q,IAGzB,OAAO+X,I,wBAGX,SAAWsJ,GAGP,IAFA,IAAIC,EAAM,EAEDthB,EAAI,EAAGA,EAAIpM,KAAKxB,MAAMsQ,KAAKya,eAAgBnd,EAAG,CAAC,IAAD,EACnDshB,GAAO,UAAAD,EAAKrhB,UAAL,SAAS+Q,MAAQnd,KAAKgF,OAAOxK,QAAQizB,EAAKrhB,GAAG+Q,OAAS,EAGjE,OAAOuQ,I,wBAGX,SAAWd,GAGP,IAFA,IAAMe,EAAU,GAEPvhB,EAAI,EAAGA,EAAIpM,KAAKxB,MAAMsQ,KAAKya,eAAgBnd,EAChDuhB,EAAQpL,KAAKviB,KAAK4tB,YAAYhB,EAASxgB,IAM3C,IAHA,IAAM0W,EAAMzd,KAAKyd,IAAL,MAAAzd,KAAYsoB,GAClBxJ,EAAQ,GAEL/X,EAAI,EAAGA,EAAIuhB,EAAQvyB,SAAUgR,EAClC+X,EAAM5B,KAAM,6BAAY,uBAAMrb,UAAS,+BAA0BymB,EAAQvhB,KAAO0W,EAAM,QAAU,IAAxE,iBAAgF6K,EAAQvhB,GAAK6P,GAAE/L,QAAQ9K,mBAAmBuoB,EAAQvhB,GAAI,GAAK,OAA9IA,IAGzB,OAAO+X,I,wBAGX,SAAWyI,GACP,OACI,wBAAO1lB,UAAU,0DAAjB,UACI,uBAAOA,UAAU,uCAAjB,SACI,6BACKlH,KAAK6tB,sBAGd,wBAAO3mB,UAAU,UAAjB,UACI,oBAAIA,UAAU,aAAd,SACKlH,KAAK8tB,aAAalB,EAAQY,WAE/B,6BACKxtB,KAAK+tB,cAAcnB,EAAQY,WAEhC,6BACKxtB,KAAKguB,WAAWpB,a,2BAOrC,SAAcA,GACV,OACI,wBAAO1lB,UAAU,0DAAjB,UACI,uBAAOA,UAAU,uCAAjB,SACI,6BACKlH,KAAK6tB,sBAGd,wBAAO3mB,UAAU,UAAjB,UACI,oBAAIA,UAAU,aAAd,SACKlH,KAAK8tB,aAAalB,EAAQqB,cAE/B,6BACKjuB,KAAK+tB,cAAcnB,EAAQqB,cAEhC,6BACI,oBAAIC,QAASluB,KAAKxB,MAAMsQ,KAAKya,yB,wBAYjD,SAAWqD,EAASrD,GAChB,OACI,mCACI,sBAAKriB,UAAS,eAAUqiB,EAAe,EAAI,6BAA+B,cAA5D,gCAAd,UACI,sBAAKriB,UAAU,6BAAf,UACI,uBAAMA,UAAU,wDAAhB,UACI,sBAAMA,UAAU,OAAhB,wBACA,cAAC8S,GAAD,CAAezZ,SAAUP,KAAKmuB,wCAAwCvB,EAAQ1B,gBAGlF,qBAAKhkB,UAAU,4CAAf,SACKlH,KAAKouB,WAAWxB,QAGzB,sBAAK1lB,UAAU,6BAAf,UACI,uBAAMA,UAAU,wDAAhB,UACI,sBAAMA,UAAU,OAAhB,uBACA,cAAC8S,GAAD,CAAezZ,SAAUP,KAAKquB,2CAA2CzB,EAAQ1B,gBAGrF,qBAAKhkB,UAAU,4CAAf,SACKlH,KAAKsuB,cAAc1B,e,sBAQ5C,SAASA,GACL,OAAIA,EAAQqB,WAAW7yB,OAAS,EACrBwxB,EAAQqB,WAAWrB,EAAQpV,SAASnG,MAAQ,EACsC,IAAnF3O,IAAKC,MAAMiQ,KAAKga,EAAQ1B,UAAUkC,cAAc/b,OAAOwB,IAAInQ,IAAKC,MAAMiQ,KAAK,IAAY,GAAK,EACR,IAApFlQ,IAAKC,MAAMiQ,KAAKga,EAAQ1B,UAAUiC,eAAe9b,OAAOwB,IAAInQ,IAAKC,MAAMiQ,KAAK,IAAY,GAAK,EAE5F,I,0BAIf,SAAaga,GACT,OAAQ5sB,KAAKosB,SAASQ,IAClB,KAAM,EACF,MAAO,kBACX,KAAK,EACD,MAAO,aACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,U,wCAKnB,WACI5sB,KAAKlB,SAAS,CAAEirB,sBAAuB/pB,KAAKvB,MAAMsrB,yB,yCAGtD,WACI/pB,KAAKlB,SAAS,CAAE+qB,iBAAkB7pB,KAAKvB,MAAMorB,oB,+CAGjD,WACI7pB,KAAKlB,SAAS,CAAEgrB,uBAAwB9pB,KAAKvB,MAAMqrB,0B,4DAGvD,WAAcrH,GAAd,SAAA9iB,EAAA,6DACIK,KAAKlB,SAAS,CAAE2c,uBAAuB,IAD3C,kBAIcgH,IAJd,sDAMQnhB,QAAQC,IAAR,UAAe,KAAMY,KAArB,aAA8B,KAAMC,UAN5C,uBAQQpC,KAAKlB,SAAS,CAAE2c,uBAAuB,IAR/C,0E,0IAYA,4BAAA9b,EAAA,yDACU4uB,EAAOvuB,KAAKvB,MAAMurB,mBACxBhqB,KAAKlB,SAAS,CAAEkrB,oBAAqBuE,IAEhCA,EAJT,gCAKcvuB,KAAKuqB,qBALnB,gD,6HASA,sBAAA5qB,EAAA,6DACIK,KAAKlB,SAAS,CAAEmrB,WAAW,IAD/B,kBAIcjqB,KAAKwuB,6BAJnB,sDAMQltB,QAAQD,MAAR,MANR,uBAQQrB,KAAKlB,SAAS,CAAEmrB,WAAW,IARnC,0E,qIAYA,oCAAAtqB,EAAA,yDACuB,EAEbsX,EAAqBpZ,SAASmC,KAAKxB,MAAMsQ,KAAKmI,uBAC9CwX,EAAYxX,EAAqBjX,KAAKvB,MAAM6Y,eAAelc,QAEjD,GANpB,wBAUQ+b,EAASnX,KAAKvB,MAAM6Y,eAAelc,OAG/BiW,EADAod,EAXW,IAcHA,EAfpB,mBAkB8BzuB,KAAKxB,MAAM4Y,oBAAoBD,EAAQ9F,GAlBrE,oBAkBYqd,GAlBZ,eAoBkBtzB,OAAS,GAAKyC,SAAS6wB,EAAMA,EAAMtzB,OAAS,GAAGyd,UAAYhb,SAASmC,KAAKxB,MAAMsQ,KAAKyc,iBAC1FmD,EAAQA,EAAMC,MAAM,EAAGD,EAAMtzB,OAAS,IAG1C4E,KAAKlB,SAAS,CAAEwY,eAAe,GAAD,oBAAMtX,KAAKvB,MAAM6Y,gBAAjB,aAAoCoX,MAxB1E,iD,2DAp1B8BrqB,aCxB3B,SAASuqB,GAA2BlyB,EAASiV,GAAO,IAAD,EAChDkd,EAAuB3yB,EAAcmB,eAAeX,GACpDU,EAAUuU,EAAKC,aAAalD,OAElC,OAAkB,MAAXtR,GAA2C,MAAxByxB,EAA+B,KAAlD,UAAyDA,EAAqBzxB,GAASE,YAAvF,QAA+F,KDoBrFssB,GAMV5gB,aAAe,CAClByO,IAAI,WAAD,4BAAE,sBAAA9X,EAAA,0FAAF,kDAAC,GAEJqY,MAAM,WAAD,4BAAE,sBAAArY,EAAA,0FAAF,kDAAC,I,IEZOmvB,G,kDAajB,WAAYtwB,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgd,uBAAuB,EACvBsO,sBAAsB,GAK1B,EAAKvf,OAAS,EAAKA,OAAOxL,KAAZ,gBAEd,EAAK+vB,mBAAqB9S,GAAEjX,OAAO,EAAKxG,MAAMmT,KAAKC,aAAaC,QAAQlY,UACxE,EAAKq1B,kBAAoB/S,GAAEjX,OAAO,EAAKxG,MAAM8Z,YAAYzG,QAAQlY,UAEjE,EAAK0wB,2BAA6B,EAAKA,2BAA2BrrB,KAAhC,gBAElC,EAAK2c,QAAU,EAAKA,QAAQ3c,KAAb,gBAEf,EAAKiwB,mBAAqB5wB,IAAM6wB,YAChC,EAAKC,yBAA2B9wB,IAAM6wB,YApBvB,E,4FAuBnB,sBAAAvvB,EAAA,sEACcK,KAAKyK,aADnB,kCAEQnJ,QAAQC,IAAI,mCAFpB,gD,wFAMA,WACIvB,KAAK0K,c,uEAGT,sBAAA/K,EAAA,sEACcK,KAAKyK,aADnB,kCAEQnJ,QAAQC,IAAI,oCAFpB,gD,qHAMA,sBAAA5B,EAAA,0DACQK,KAAK2K,eADb,0CAEe,GAFf,UAKI3K,KAAK2K,gBAAiB,EAL1B,SAQa3K,KAAK4K,QARlB,uBASY5K,KAAK6K,WAAkC,IAAvB7K,KAAKxB,MAAM+T,WATvC,mBAWmB,GAXnB,iCAce,GAdf,uBAgBQvS,KAAK2K,gBAAiB,EAhB9B,yE,8EAoBA,SAAW4H,GAAY,IAAD,OAClBvS,KAAK4K,QAAUE,YAAW,sBAAC,sBAAAnL,EAAA,sEAAkB,EAAK6K,SAAvB,mFAAiC+H,GAC5DjR,QAAQC,IAAR,yBAA8BvB,KAAK4K,QAAnC,uBAAyD2H,EAAzD,U,uBAGJ,WACI,IAAM3H,EAAU5K,KAAK4K,QAEjBA,IACAI,cAAcJ,GACd5K,KAAK4K,aAAUnK,EAEfa,QAAQC,IAAR,yBAA8BqJ,O,2DAItC,8BAAAjL,EAAA,+EAEqDsc,GAAE7M,QAAQiF,2BAA2BrU,KAAKxB,MAAMmT,KAAKC,aAAahD,MAAO5O,KAAKxB,MAAMmT,KAAKC,aAAaC,QAAQlY,SAAUqG,KAAKxB,MAAMmT,KAAK2C,kBAF7L,cAEc8a,EAFd,gBAGoDnT,GAAE7M,QAAQiF,2BAA2BrU,KAAKxB,MAAM8Z,YAAY1J,MAAO5O,KAAKxB,MAAM8Z,YAAYzG,QAAQlY,UAAU,GAHhK,OAGc01B,EAHd,OAKQrvB,KAAKlB,SAAS,CACVswB,iCACAC,kCAPZ,kDAUQ/tB,QAAQD,MAAR,MAVR,0D,0EAcA,WAAU,IAAD,OACCgR,EAAMhC,KAAKgC,MAAQ,IACnBid,EAAmBhzB,WAAW0D,KAAKxB,MAAMmT,KAAK2d,kBAAoB,IAClEC,EAAiBjzB,WAAW0D,KAAKxB,MAAMmT,KAAK6d,WAAWnS,MAAQ,IAC/DoS,EAAwBnzB,WAAW0D,KAAKxB,MAAMmT,KAAK8d,uBAAyB,IAC5EC,EAAoBpzB,WAAW0D,KAAKxB,MAAMmT,KAAKge,cAActS,MAAQ,IACrEhB,EAAgBrc,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAMmT,KAAK0K,eAChEuT,EAAkB5vB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAMmT,KAAKke,eAAeC,WACjFC,EAAiB/vB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAMmT,KAAKke,eAAeG,UAC/EC,EAAmBjwB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAMmT,KAAKke,eAAeK,WAAW/S,OAC7FgT,EAA+BnwB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAMmT,KAAKke,eAAeO,wBAC7FC,EAAsBrwB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAMmT,KAAK0e,qBACrEC,EAAsBD,EAAsBN,GAAkBM,EAAsBF,EACpFI,EAAiBvwB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAMmT,KAAKga,cAAcmE,WAC/EU,EAAgBxwB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAMmT,KAAKga,cAAcqE,UAC7ES,EAAkBzwB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAMmT,KAAKga,cAAcuE,WAAW/S,OAC3FC,EAAiB9gB,WAAW0D,KAAKxB,MAAMmT,KAAKyL,eAAeC,MAAQ,IACnEC,EAA0BrB,GAAE/L,QAAQc,mBAAmBhR,KAAKxB,MAAMmT,KAAKyL,eAAeG,UAAUJ,OAChGK,EAAoB,UAAMthB,EAAcigB,qBAAqBF,GAAEvf,SAA3C,oBAA+DsD,KAAKxB,MAAMmT,KAAK8L,WAErGiT,EAAiB7yB,SAASmC,KAAKxB,MAAMmT,KAAKke,eAAea,gBACvDC,EAAuBD,EAAiB,GAAK7yB,SAASmC,KAAKxB,MAAM4hB,cAAgBsQ,GAAkB1wB,KAAKxB,MAAM+T,UAAY,EAG1Hqe,GADNF,EAAiB7yB,SAASmC,KAAKxB,MAAMmT,KAAKga,cAAc+E,iBACX,GAAK7yB,SAASmC,KAAKxB,MAAM4hB,cAAgBsQ,GAAkB1wB,KAAKxB,MAAM+T,UAAY,EAEzH2O,EAA6B,sBAAMha,UAAU,qBAAhB,gEAE7B2pB,EACF,sBAAK3pB,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAMmT,KAAKmf,iBAElD,cAACjoB,EAAD,CACIvC,MAAQ,qCAAE,sBAAMY,UAAU,OAAhB,6BAA6C,cAAC8S,GAAD,CAAeC,WAAW,EAAM1Z,SAAU2gB,OACjGpZ,KAAMmU,GAAE/L,QAAQhL,iBAAiBkY,GACjCpV,SAAS,IACTI,OAAS,mBAAG+B,KAAMqT,EAAsBmE,IAAI,aAAavX,OAAO,SAASlD,UAAU,UAA1E,SAAqF+U,GAAE/L,QAAQ5L,cAActE,KAAKxB,MAAMmT,KAAK8L,aACtIjX,KAAMxG,KAAKxB,MAAMmT,KAAKyQ,iBAAoB,sBAAMlb,UAAU,eAAhB,6BAAyD,KACnGuB,cAAc,8DAElB,cAACI,EAAD,CACIvC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQ0R,kBAAkBtE,GAClCtV,SAAUiU,GAAEnf,UAAUE,YAAY8G,OAClCsE,OAAQ6T,GAAE/L,QAAQmR,kBAAkB/D,EAA0Btd,KAAKxB,MAAMod,+BACzEtT,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCitB,SAAU/wB,KAAKkiB,YAAYliB,KAAKxB,MAAMmT,KAAKyL,eAAeG,UAAUlM,MAAOrR,KAAKxB,MAAMmT,KAAKyL,eAAeG,UAAU/K,UAAWH,QAK3I,OACI,sBAAKnL,UAAS,wCAAd,UACI,sBAAKA,UAAU,sCAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAMA,UAAU,2CAAhB,UACI,sBAAMA,UAAU,OAAhB,SAAwB+U,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAMmT,QAAa,cAACqI,GAAD,CAAezZ,SAAUswB,OAE1G,sBAAM3pB,UAAU,2BAAhB,SACK0nB,GAA2B3S,GAAEvf,QAASsD,KAAKxB,MAAMmT,WAG1D,qBAAKzK,UAAU,yDAAf,SACKlH,KAAKxB,MAAMmT,KAAK2C,iBACX,qCACE,qBAAKpN,UAAU,SAAf,SACI,sBAAMA,UAAU,2CAA2CxB,MAAO,CAAEsrB,SAAU,WAA9E,SAA4FhxB,KAAKxB,MAAMmT,KAAKuG,cAAcpU,WAE9H,qBAAKoD,UAAU,SAAf,SACI,sBAAMA,UAAU,2CAA2CxB,MAAO,CAAEsrB,SAAU,WAA9E,SAA4FhxB,KAAKxB,MAAMmT,KAAKwG,cAAcrU,cAGhI,qBAAKoD,UAAU,SAAf,SACE,sBAAMA,UAAU,2CAA2CxB,MAAO,CAAEsrB,SAAU,WAA9E,SAA4FhxB,KAAKxB,MAAMmT,KAAKC,aAAaC,QAAQ/N,aAK7I,qBAAKoD,UAAU,yDAGnB,sBAAKA,UAAU,mCAAf,UACI,sBAAKA,UAAU,6DAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,oBACNwB,KAAI,cAAMmU,GAAE/L,QAAQ9K,mBAAmB,EAAIkqB,EAAkB,IAC7D1nB,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,cACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBqqB,GACjCvnB,SAAS,IACTJ,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,mBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBuqB,GACjCznB,SAAS,IACTJ,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,iBACNwB,KAAMmU,GAAE/L,QAAQhL,iBAAiBwqB,GACjC1nB,SAAS,IACTJ,eAAe,iBAIvB,qBAAKV,UAAU,mBAAf,SACI,sBAAKA,UAAU,0EAAf,UACI,iDACA,uBAAMA,UAAU,qBAAhB,UACI,mBAAGA,UAAU,qBACZ+U,GAAE/L,QAAQK,eAAeogB,WAKtC,sBAAKzpB,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,UACNwB,KAAM9H,KAAK+uB,mBAAmBxpB,eAAe8W,GAC7CrU,SAAUiU,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAMmT,MAClDvJ,OAAQpI,KAAKvB,MAAM2wB,+BAAiCnT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM2wB,+BAAiC/S,GAAiB,IAC7I/T,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiF,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,YACNwB,KAAM9H,KAAK+uB,mBAAmBxpB,eAAeqqB,GAC7C5nB,SAAUiU,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAMmT,MAClDvJ,OAAQpI,KAAKvB,MAAM2wB,+BAAiCnT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM2wB,+BAAiCQ,GAAmB,IAC/ItnB,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiF,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,WACNwB,KAAM9H,KAAKgvB,kBAAkBzpB,eAAewqB,GAC5C/nB,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzCsE,OAAQpI,KAAKvB,MAAM4wB,8BAAgCpT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM4wB,8BAAgCU,GAAkB,IAC5IznB,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiF,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAGnB,cAACiB,EAAD,CACIvC,MAAM,gBACNwB,KAAM9H,KAAKgvB,kBAAkBzpB,eAAe8qB,GAC5CroB,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzCiF,iBAAiB,EACjBhB,cAAa,UAAKsoB,EAAsBN,EAAiB,qBAAuBM,EAAsBF,EAA+B,qBAAuB,IAC5JloB,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,oBACNwB,KAAM9H,KAAKgvB,kBAAkBzpB,eAAe4qB,GAC5CnoB,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzCiF,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,aACNwB,KAAM9H,KAAK+uB,mBAAmBxpB,eAAe0qB,GAC7CjoB,SAAUiU,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAMmT,MAClDvJ,OAAQpI,KAAKvB,MAAM2wB,+BAAiCnT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM2wB,+BAAiCa,GAAoB,IAChJ3nB,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMmT,KAAKke,eAAeK,WAAW7e,MAAOrR,KAAKxB,MAAMmT,KAAKke,eAAeK,WAAW1d,UAAWH,GAC7HtJ,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,iBAIvB,sBAAKV,UAAU,6EAAf,UACI,wBAAQK,KAAK,SAASL,UAAU,mBAAmBQ,SAAU1H,KAAKvB,MAAMgd,uBAA2C,IAAlBY,EAC7F7U,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKgc,SAAQ,kBAAM,EAAKnd,MAAM6Z,QAAQ,EAAK5Z,MAAM2wB,mCADlD,2CADb,qBAOA,wBAAQ7nB,KAAK,SAASL,UAAU,oBAAoBQ,SAAU1H,KAAKvB,MAAMgd,uBAA6C,IAApBmU,EAC9FpoB,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKgc,SAAQ,kBAAM,EAAKnd,MAAMsa,SAAS,EAAKra,MAAM4wB,kCADnD,2CADb,sBAOA,wBAAQ9nB,KAAK,SAASL,UAAU,oBAAoBQ,SAAU1H,KAAKvB,MAAMgd,uBAA6C,IAApBmU,IAA0BU,EACxH9oB,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKgc,SAAQ,kBAAMM,GAAEjN,KAAK+J,UAAU,EAAKva,MAAMmT,KAAKkH,WADrD,2CADb,SAKI,sBAAM3R,UAAS,UAAKopB,EAAsB,gBAAkB,IAA5D,yBAEJ,wBAAQ/oB,KAAK,SAASL,UAAU,kBAAkBQ,SAAU1H,KAAKvB,MAAMgd,uBAA6C,IAApBmU,EAC5FpoB,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKgc,SAAQ,kBAAMM,GAAEjN,KAAKgK,UAAU,EAAKxa,MAAMmT,KAAKkH,WADrD,2CADb,uBAQA,qBAAK3R,UAAU,mCAGnB,sBAAKA,UAAU,0CAAf,UACI,uBAAMA,UAAU,oDAAoDM,QAASxH,KAAKqqB,2BAAlF,UAA8G,mBAAGnjB,UAAS,aAASlH,KAAKvB,MAAMsrB,qBAAuB,qBAAuB,sBAAlE,WAA1H,iBAGA,uBAAM7iB,UAAU,mCAAhB,UACI,mBAAGA,UAAU,qBACZ+U,GAAE/L,QAAQK,eAAeqgB,SAIjC5wB,KAAKvB,MAAMsrB,sBACR,sBAAK7iB,UAAU,sCAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,YACNwB,KAAM9H,KAAK+uB,mBAAmBxpB,eAAegrB,GAC7CvoB,SAAUiU,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAMmT,MAClDvJ,OAAQpI,KAAKvB,MAAM2wB,+BAAiCnT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM2wB,+BAAiCmB,GAAkB,IAC9IjoB,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiF,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,WACNwB,KAAM9H,KAAKgvB,kBAAkBzpB,eAAeirB,GAC5CxoB,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzCsE,OAAQpI,KAAKvB,MAAM4wB,8BAAgCpT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM4wB,8BAAgCmB,GAAiB,IAC3IloB,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpCiF,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,aACNwB,KAAM9H,KAAK+uB,mBAAmBxpB,eAAekrB,GAC7CzoB,SAAUiU,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAMmT,MAClDvJ,OAAQpI,KAAKvB,MAAM2wB,+BAAiCnT,GAAE/L,QAAQmR,kBAAkBrhB,KAAKvB,MAAM2wB,+BAAiCqB,GAAmB,IAC/InoB,WAAY2T,GAAEnf,UAAUG,YAAY6G,OACpC0C,KAAMxG,KAAKkiB,YAAYliB,KAAKxB,MAAMmT,KAAKga,cAAcuE,WAAW7e,MAAOrR,KAAKxB,MAAMmT,KAAKga,cAAcuE,WAAW1d,UAAWH,GAC3HtJ,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,yB,6BAS3C,WACI,OAAO5H,KAAKxB,MAAMmT,KAAK2C,iBAChB,qCACC,qBAAKpN,UAAU,SAAf,SACI,sBAAMA,UAAU,2CAAhB,SAA4DlH,KAAKxB,MAAMmT,KAAKuG,cAAcpU,WAE9F,qBAAKoD,UAAU,SAAf,SACI,sBAAMA,UAAU,2CAAhB,SAA4DlH,KAAKxB,MAAMmT,KAAKwG,cAAcrU,cAG/F,qBAAKoD,UAAU,SAAf,SACC,sBAAMA,UAAU,2CAAhB,SAA4DlH,KAAKxB,MAAMmT,KAAKC,aAAaC,QAAQ/N,a,yBAI7G,SAAYuN,EAAOmB,EAAWH,GAC1B,OACI,sBAAKnL,UAAU,gCAAf,UACI,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcoM,MACtG,uBAAMnK,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,qBAAsBsL,EAAY,EAAIyJ,GAAE/L,QAAQK,eAAe8B,EAAMG,GAAa,Y,wCAM9I,WACIxS,KAAKlB,SAAS,CAAEirB,sBAAuB/pB,KAAKvB,MAAMsrB,yB,4DAGtD,WAActH,GAAd,SAAA9iB,EAAA,6DACIK,KAAKlB,SAAS,CAAE2c,uBAAuB,IAD3C,kBAIcgH,IAJd,sDAMQnhB,QAAQC,IAAR,UAAe,KAAMY,KAArB,aAA8B,KAAMC,UAN5C,uBAQQpC,KAAKlB,SAAS,CAAE2c,uBAAuB,IAR/C,0E,4DA5YkCpX,aCRvB,SAAS4sB,GAAT,GAMX,IALAjiB,EAKD,EALCA,KACA4M,EAID,EAJCA,8BACAvD,EAGD,EAHCA,QACAS,EAED,EAFCA,SACAvG,EACD,EADCA,UAEM2e,EAASxzB,OAAOsd,OAAO,CACzBmW,iBAAkB,EAClBC,WAAY,EACZC,sBAAuB,EACvBC,cAAe,EACfC,SAAU,IAGRC,EAAgB9zB,OAAOsd,OAAO,CAChCyW,UAAW,EACXC,WAAY,IAGVC,EAAYj0B,OAAOsd,OAAO,CAC5BC,IAAK,EACL2W,OAAQ,EACRC,UAAW,IAGf,EAAsC1oB,mBAAS6F,EAAK0f,OAApD,mBAAOoD,EAAP,KAAoBC,EAApB,KACA,EAA4B5oB,qBAA5B,mBAAO6oB,EAAP,KAAeC,EAAf,KACA,EAA4B9oB,mBAAS+nB,EAAOC,kBAA5C,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAA0ChpB,mBAASqoB,EAAcE,YAAjE,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAkClpB,mBAASwoB,EAAU1W,KAArD,mBAAOqX,EAAP,KAAkBC,EAAlB,KAEMvtB,EAASiX,GAAEjX,OAAOgK,EAAKsJ,YAAYzG,QAAQlY,UAE3C64B,EAAyBxtB,EAAOxK,QAAQwU,EAAKwjB,uBAAuBrV,OACpEsV,EAAsBzjB,EAAK0f,MAAMgE,QAAO,SAAChF,EAAK/b,GAAN,OAAe+b,EAAM1oB,EAAOxK,QAAQmX,EAAKga,cAAcqE,SAAUhhB,EAAKsJ,YAAYzG,QAAQlY,YAAW,GAkEnJ,OAhEA2P,qBAAU,WACN,IAAMolB,EAAQ1f,EAAK0f,MAAMsD,QAAO,SAAApuB,GAC5B,IAAI+uB,GAAQ,EAEZ,GAAIX,GAAUA,EAAO52B,OAAS,EAAG,CAC7B,IAAMw3B,EAA0BhE,GAA2B3S,GAAEvf,QAASkH,EAAE+N,MAClEkhB,EAAqB5W,GAAEjN,KAAKiJ,sBAAsBrU,EAAE+N,MAE1DghB,EAAQzlB,GAAS0lB,EAAyBZ,IAAW9kB,GAAS2lB,EAAoBb,GAWtF,OARIM,IAAcX,EAAU1W,MACpBqX,IAAcX,EAAUC,OACxBe,IAAU/uB,EAAE+N,KAAK2C,iBACVge,IAAcX,EAAUE,YAC/Bc,GAAS/uB,EAAE+N,KAAK2C,mBAIjBqe,KAGXjE,EAAMoE,MAAK,SAAUnzB,EAAGd,GACpB,IAAIykB,EACAyP,EAUJ,OARIX,IAAkBZ,EAAcC,WAChCnO,EAAI3jB,EACJozB,EAAIl0B,IAEJykB,EAAIzkB,EACJk0B,EAAIpzB,GAGJuyB,IAAWhB,EAAOC,iBACXzuB,IAAKC,MAAMiQ,KAAK0Q,EAAEgM,kBAAkBzc,IAAInQ,IAAKC,MAAMiQ,KAAKmgB,EAAEzD,mBAGjE4C,IAAWhB,EAAOE,WACX1uB,IAAKC,MAAMiQ,KAAK0Q,EAAEkM,WAAWnS,MAAMxK,IAAInQ,IAAKC,MAAMiQ,KAAKmgB,EAAEvD,WAAWnS,OAG3E6U,IAAWhB,EAAOG,sBACX3uB,IAAKC,MAAMiQ,KAAK0Q,EAAEmM,uBAAuB5c,IAAInQ,IAAKC,MAAMiQ,KAAKmgB,EAAEtD,wBAGtEyC,IAAWhB,EAAOI,cACX5uB,IAAKC,MAAMiQ,KAAK0Q,EAAEqM,cAActS,MAAMxK,IAAInQ,IAAKC,MAAMiQ,KAAKmgB,EAAEpD,cAActS,OAGjF6U,IAAWhB,EAAOK,SACX7uB,IAAKC,MAAMiQ,KAAK0Q,EAAEuM,eAAeG,UAAUnd,IAAInQ,IAAKC,MAAMiQ,KAAKmgB,EAAElD,eAAeG,gBAD3F,KAWJ+B,EAAerD,KAChB,CAACsD,EAAQM,EAAWJ,EAAQE,EAAepjB,IAG1C,sBAAK9H,UAAU,oCAAf,UACI,qBAAKA,UAAU,oDAAf,SACI,sBAAKA,UAAU,6DAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,eACNwB,KAAMkH,EAAKsJ,YAAYzG,QAAQ/N,OAC/BkE,SAAS,OACTe,iBAAiB,EACjBnB,eAAe,YACfG,cAAc,eACdE,kBAAkB,SAEtB,cAACY,EAAD,CACIvC,MAAM,aACNwB,KAAMmU,GAAE/L,QAAQjL,cAAc+J,EAAK0f,MAAMtzB,QACzC4M,SAAS,OACTe,iBAAiB,EACjBnB,eAAe,YACfK,kBAAkB,SAEtB,cAACY,EAAD,CACIvC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQ3K,eAAeitB,EAAwBntB,KAAKC,IAAI0J,EAAKsJ,YAAYzG,QAAQlY,SAAUsiB,GAAEnf,UAAUE,YAAYrD,WAC3HqO,SAAQ,UAAKgH,EAAKsJ,YAAYzG,QAAQ/N,OAA9B,YAAwCmY,GAAEnf,UAAUE,YAAY8G,QACxEiF,iBAAiB,EACjBnB,eAAe,YACfK,kBAAkB,qBAEtB,cAACY,EAAD,CACIvC,MAAM,wBACNwB,KAAMmU,GAAE/L,QAAQ3K,eAAektB,EAAqBzjB,EAAKsJ,YAAYzG,QAAQlY,UAC7EqO,SAAUgH,EAAKsJ,YAAYzG,QAAQ/N,OACnCiF,iBAAiB,EACjBnB,eAAe,YACfK,kBAAkB,0BAK9B,qBAAKf,UAAU,wCAAf,SACI,sBAAKA,UAAU,oDAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAO6f,QAAQ,QAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,eAAesB,eAAe,4BAEnD,cAAC4c,GAAD,CACIC,MAAO,IACPld,KAAK,SACLmd,GAAG,SACHxd,UAAU,mBACV0d,YAAY,gBACZX,QAAS,SAAAvoB,GACL4F,QAAQC,IAAR,kBAAuB7F,IACvBu2B,EAAUv2B,SAKtB,sBAAKwL,UAAU,8CAAf,UACI,gCACI,cAACS,EAAD,CAAWrB,MAAM,UAAUsB,eAAe,4BAE9C,sBAAKV,UAAU,oEAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,SAASonB,GAAG,UAAUhpB,MAAOw1B,EAAOC,iBAAkBvK,QAASsL,IAAWhB,EAAOC,iBAAkBlM,SAAU+N,IAC1J,uBAAOjM,QAAQ,UAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,oBAAoBsB,eAAe,+CAG5D,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,SAASonB,GAAG,UAAUhpB,MAAOw1B,EAAOE,WAAYxK,QAASsL,IAAWhB,EAAOE,WAAYnM,SAAU+N,IAC9I,uBAAOjM,QAAQ,UAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,cAAcsB,eAAe,+CAGtD,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,SAASonB,GAAG,UAAUhpB,MAAOw1B,EAAOG,sBAAuBzK,QAASsL,IAAWhB,EAAOG,sBAAuBpM,SAAU+N,IACpK,uBAAOjM,QAAQ,UAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,mBAAmBsB,eAAe,+CAG3D,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,SAASonB,GAAG,UAAUhpB,MAAOw1B,EAAOI,cAAe1K,QAASsL,IAAWhB,EAAOI,cAAerM,SAAU+N,IACpJ,uBAAOjM,QAAQ,UAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,iBAAiBsB,eAAe,+CAGzD,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,SAASonB,GAAG,UAAUhpB,MAAOw1B,EAAOK,SAAU3K,QAASsL,IAAWhB,EAAOK,SAAUtM,SAAU+N,IAC1I,uBAAOjM,QAAQ,UAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,kBAAkBsB,eAAe,qDAMlE,qBAAKV,UAAU,8CAAf,SACI,sBAAKA,UAAU,qDAAf,UACI,gCACI,gCACI,cAACS,EAAD,CAAWrB,MAAM,iBAAiBsB,eAAe,kBAErD,sBAAKV,UAAU,8BAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,gBAAgBonB,GAAG,iBAAiBhpB,MAAO81B,EAAcC,UAAW7K,QAASwL,IAAkBZ,EAAcC,UAAWxM,SAAUgO,IAC/K,uBAAOlM,QAAQ,iBAAf,SACI,cAACpf,EAAD,CAAWrB,MAAQ,mBAAGY,UAAU,wCAA2CU,eAAe,iCAGlG,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,gBAAgBonB,GAAG,iBAAiBhpB,MAAO81B,EAAcE,WAAY9K,QAASwL,IAAkBZ,EAAcE,WAAYzM,SAAUgO,IACjL,uBAAOlM,QAAQ,iBAAf,SACI,cAACpf,EAAD,CAAWrB,MAAQ,mBAAGY,UAAU,4CAAiDU,eAAe,uCAKhH,gCACI,gCACI,cAACD,EAAD,CAAWrB,MAAM,aAAasB,eAAe,kBAEjD,sBAAKV,UAAU,oCAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,YAAYonB,GAAG,aAAahpB,MAAOi2B,EAAU1W,IAAK2L,QAAS0L,IAAcX,EAAU1W,IAAKgK,SAAUiO,IAC/I,uBAAOnM,QAAQ,aAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,MAAMsB,eAAe,+CAG9C,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,YAAYonB,GAAG,aAAahpB,MAAOi2B,EAAUC,OAAQhL,QAAS0L,IAAcX,EAAUC,OAAQ3M,SAAUiO,IACrJ,uBAAOnM,QAAQ,aAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,SAASsB,eAAe,+CAGjD,sBAAKV,UAAU,8BAAf,UACI,uBAAOA,UAAU,UAAUK,KAAK,QAAQjK,KAAK,YAAYonB,GAAG,aAAahpB,MAAOi2B,EAAUE,UAAWjL,QAAS0L,IAAcX,EAAUE,UAAW5M,SAAUiO,IAC3J,uBAAOnM,QAAQ,aAAf,SACI,cAACpf,EAAD,CAAWrB,MAAM,YAAYsB,eAAe,+DAU5E,qBAAKV,UAAU,mDAAf,SA2BR,SAAsBwnB,GAClB,IAAMvK,EAAQ,GAkBd,OAhBAuK,EAAMyE,SAAQ,SAACxhB,EAAMvF,GACjB+X,EAAM5B,KACF,qBAAarb,UAAU,aAAvB,SACI,cAAC,GAAD,CACIoR,YAAatJ,EAAKsJ,YAClB3G,KAAMA,EACNiK,8BAA+BA,EAC/BvD,QAAS,SAAA+W,GAA8B,OAAI/W,EAAQ1G,EAAKkH,OAAQuW,IAChEtW,SAAU,SAAAuW,GAA6B,OAAIvW,EAASnH,EAAKkH,OAAQwW,IACjE9c,UAAWA,EACX6N,aAAcpR,EAAKoR,gBARjBhU,OAcX+X,EA7CEiP,CAAatB,QAK1B,SAASoB,EAAmBpP,GACxB,MAAwBA,EAAE1Z,OAAZ1O,GAAd,EAAQ4B,KAAR,EAAc5B,OACd62B,EAAa10B,SAASnC,IAG1B,SAASs3B,EAAgBlP,GACrB,MAAwBA,EAAE1Z,OAAZ1O,GAAd,EAAQ4B,KAAR,EAAc5B,OACdy2B,EAAUt0B,SAASnC,IAGvB,SAASu3B,EAAuBnP,GAC5B,MAAwBA,EAAE1Z,OAAZ1O,GAAd,EAAQ4B,KAAR,EAAc5B,OACd22B,EAAiBx0B,SAASnC,KDnQbozB,GAMV9lB,aAAe,CAClBqP,QAAQ,WAAD,4BAAE,sBAAA1Y,EAAA,0FAAF,kDAAC,GAERmZ,SAAS,WAAD,4BAAE,sBAAAnZ,EAAA,0FAAF,kDAAC,ICmSjBsxB,GAAUjoB,aAAe,CACrBqP,QAAQ,WAAD,4BAAE,WAAOQ,EAAQnE,GAAf,SAAA/U,EAAA,0FAAF,qDAAC,GAERmZ,SAAS,WAAD,4BAAE,WAAOD,EAAQnE,GAAf,SAAA/U,EAAA,0FAAF,qDAAC,GAEToZ,UAAU,WAAD,4BAAE,WAAOF,GAAP,SAAAlZ,EAAA,0FAAF,mDAAC,GAEVqZ,UAAU,WAAD,4BAAE,WAAOH,GAAP,SAAAlZ,EAAA,0FAAF,mDAAC,I,ICvTO0zB,G,kDAWjB,WAAY70B,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgd,sBAAuB,IAG3B,EAAKsT,mBAAqB9S,GAAEjX,OAAO,EAAKxG,MAAM80B,iBAAiB3hB,KAAKC,aAAaC,QAAQlY,UACzF,EAAKq1B,kBAAoB/S,GAAEjX,OAAO,EAAKxG,MAAM8Z,YAAYzG,QAAQlY,UAEjE,EAAKgiB,QAAU,EAAKA,QAAQ3c,KAAb,gBAVA,E,0CAanB,WACgBqR,KAAKgC,MACQ/V,WAAW0D,KAAKxB,MAAM80B,iBAAiB3hB,KAAK2d,kBAC9ChzB,WAAW0D,KAAKxB,MAAM80B,iBAAiB3hB,KAAK6d,WAAWnS,MAChD/gB,WAAW0D,KAAKxB,MAAM80B,iBAAiB3hB,KAAK8d,uBAChDnzB,WAAW0D,KAAKxB,MAAM80B,iBAAiB3hB,KAAKge,cAActS,MAC9Drd,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAK0K,eAC/Drc,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKke,eAAeC,WACjF9vB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKke,eAAeG,UAC7EhwB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKke,eAAeK,WAAW/S,OAC/End,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKke,eAAeO,wBACxFpwB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAK0e,qBACrErwB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKga,cAAcmE,WAChF9vB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKga,cAAcqE,UAC5EhwB,KAAK+uB,mBAAmBv0B,QAAQwF,KAAKxB,MAAM80B,iBAAiB3hB,KAAKga,cAAcuE,WAAW/S,OAC3F7gB,WAAW0D,KAAKxB,MAAM80B,iBAAiB3hB,KAAKyL,eAAeC,MAClDpB,GAAE/L,QAAQc,mBAAmBhR,KAAKxB,MAAM80B,iBAAiB3hB,KAAKyL,eAAeG,UAAUJ,OAC7F,UAAMjhB,EAAcigB,qBAAqBF,GAAEvf,SAA3C,oBAA+DsD,KAAKxB,MAAM80B,iBAAiB3hB,KAAK8L,WAhB1H,IAkBIiT,EAAiB7yB,SAASmC,KAAKxB,MAAM80B,iBAAiB3hB,KAAKke,eAAea,gBAMxE6C,GALuB7C,EAAiB,IAAK7yB,SAASmC,KAAKxB,MAAM4hB,cAAkCpgB,KAAKxB,MAAM+T,YAEpHme,EAAiB7yB,SAASmC,KAAKxB,MAAM80B,iBAAiB3hB,KAAKga,cAAc+E,iBAC5B,IAAK7yB,SAASmC,KAAKxB,MAAM4hB,cAAkCpgB,KAAKxB,MAAM+T,WAE5FvS,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAM80B,iBAAiBC,eAAepW,QAC3FqW,EAAqBxzB,KAAKgvB,kBAAkBx0B,QAAQwF,KAAKxB,MAAM80B,iBAAiBE,mBAAmBrW,OAEzG,EAAuBnd,KAAKyzB,kBAAkBzzB,KAAKxB,MAAM8Z,YAAatY,KAAKxB,MAAM80B,kBAAzEI,EAAR,EAAQA,IAAKriB,EAAb,EAAaA,MACPsiB,EAAmBr3B,WAAWk3B,GAAsBE,EAE1D,OACI,qBAAKxsB,UAAU,wCAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,gBACNwB,KAAMmU,GAAEjN,KAAKiJ,sBAAsBjY,KAAKxB,MAAM80B,iBAAiB3hB,MAC/D3J,SAAU4mB,GAA2B3S,GAAEvf,QAASsD,KAAKxB,MAAM80B,iBAAiB3hB,MAC5E5I,iBAAiB,EACjBhB,cAAc,eACdE,kBAAkB,gCAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,kBACNwB,KAAM9H,KAAKgvB,kBAAkBzpB,eAAeguB,GAC5CvrB,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzC0C,KAAO,mCAAE,qBAAKU,UAAU,gCAAf,SAA+C,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcjF,KAAKxB,MAAM80B,iBAAiBC,eAAeliB,cACzMtI,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,cAEnB,cAACiB,EAAD,CACIvC,MAAM,uBACNwB,KAAM9H,KAAKgvB,kBAAkBzpB,eAAeouB,GAC5C3rB,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzC0C,KAAO,mCAAE,qBAAKU,UAAU,gCAAf,SAA+C,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcpH,SAASmC,KAAKxB,MAAM80B,iBAAiBE,mBAAmBniB,OAASA,UAC/NtI,iBAAiB,EACjBd,kBAAkB,mBAClBL,eAAe,iBAIvB,sBAAKV,UAAU,0DAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAACS,EAAD,CAAWrB,MAAM,WAAWsB,eAAe,cAC3C,cAACC,EAAD,CACIG,SAAU4mB,GAA2B3S,GAAEvf,QAASsD,KAAKxB,MAAM80B,iBAAiB3hB,MAC5E5I,iBAAiB,EACjBhB,cAAc,eACdE,kBAAkB,qCAG1B,sBAAKf,UAAU,gBAAf,UACI,cAACS,EAAD,CAAWrB,MAAM,YAAYsB,eAAe,cAC5C,cAACC,EAAD,CACIG,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzCiF,iBAAiB,EACjBd,kBAAkB,wBAG1B,sBAAKf,UAAU,gBAAf,UACI,cAACS,EAAD,CAAWrB,MAAM,iBAAiBsB,eAAe,cACjD,cAACC,EAAD,CACIG,SAAUhI,KAAKxB,MAAM8Z,YAAYzG,QAAQ/N,OACzCiF,iBAAiB,EACjBd,kBAAkB,wBAG1B,sBAAKf,UAAU,gBAAf,UACI,cAACS,EAAD,CAAWrB,MAAM,SAASsB,eAAe,cACzC,cAACC,EAAD,CACIG,SAAS,OACTe,iBAAiB,EACjBd,kBAAkB,wBAGzBjI,KAAK4zB,qBAAqB5zB,KAAKxB,MAAM80B,iBAAiB3hB,KAAKkH,OAAQ7Y,KAAKxB,MAAM80B,iBAAiBO,iC,yBAQpH,SAAYxiB,EAAOmB,EAAWH,GAC1B,OACI,sBAAKnL,UAAU,gCAAf,UACI,uBAAMA,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,6BAA8B+U,GAAE/L,QAAQjL,cAAcoM,MACtG,uBAAMnK,UAAU,mBAAhB,UAAmC,mBAAGA,UAAU,qBAAsBsL,EAAY,EAAIyJ,GAAE/L,QAAQK,eAAe8B,EAAMG,GAAa,Y,kCAK9I,SAAqBqG,EAAQgb,GAAwB,IAAD,OAC1C1P,EAAQ,GAwCd,OAtCA0P,EAAsBV,SAAQ,SAACW,EAAsB1nB,GACjD+X,EAAM5B,KACF,eAAC,WAAD,WACI,gCACI,cAAC1a,EAAD,CACIC,KAAMmU,GAAE/L,QAAQ5L,cAAcwvB,EAAqB3a,UACnDpR,cAAc,mBAEjB+rB,EAAqBC,QAClB,8BACI,cAAC5rB,EAAD,CACIC,OAAO,MACPC,gBAAgB,iDAKhC,cAACR,EAAD,CAAUC,KAAM,EAAKknB,kBAAkBzpB,eAAe,EAAKypB,kBAAkBx0B,QAAQs5B,EAAqBE,cAE1G,cAACnsB,EAAD,CAAUC,KAAMgsB,EAAqBC,OAC9B,8BAAM,EAAK/E,kBAAkBzpB,eAAe,EAAKypB,kBAAkBx0B,QAAQs5B,EAAqBnE,kBAChG,EAAKX,kBAAkBzpB,eAAe,EAAKypB,kBAAkBx0B,QAAQs5B,EAAqBnE,kBAGjG,wBACIpoB,KAAK,SACLL,UAAU,uBACVQ,SAAU,EAAKjJ,MAAMgd,sBAAsBrP,GAC3C5E,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKgc,QAAQvP,GAAG,kBAAM6P,GAAEjN,KAAKkK,iBAAiBL,EAAQib,EAAqB3a,aAD5E,2CAJb,yBAtBW/M,OAoChB+X,I,+BAGX,SAAkB7L,EAAa3G,GAC3B,IAAMsiB,EAAgBtiB,EAAKkiB,sBAAsB7B,QAAO,SAAA5lB,GAAC,OAAIA,EAAE2nB,UAG/D,MAAO,CAAEL,IAFGO,EAAcvB,QAAO,SAAChF,EAAKwG,GAAN,OAAuBxG,EAAMzR,GAAE/L,QAAQ1V,QAAQ05B,EAAavE,cAAerX,EAAYzG,QAAQlY,YAAW,GAE7H0X,MAAO4iB,EAAc74B,U,4DAGvC,WAAcgR,EAAGqW,GAAjB,SAAA9iB,EAAA,6DACIK,KAAKlB,UAAS,SAACq1B,EAAW31B,GAAZ,MAAuB,CACjCid,sBAAsB,2BAAM0Y,EAAU1Y,uBAAjB,mBAAyCrP,GAAI,QAF1E,kBAMcqW,IANd,sDAQQnhB,QAAQC,IAAR,UAAe,KAAMY,KAArB,aAA8B,KAAMC,UAR5C,uBAUQpC,KAAKlB,UAAS,SAACq1B,EAAW31B,GAAZ,MAAuB,CACjCid,sBAAsB,2BAAM0Y,EAAU1Y,uBAAjB,mBAAyCrP,GAAI,QAX9E,0E,8DA9L0C/H,aCR/B,SAAS+vB,GAAT,GAMX,IALAplB,EAKD,EALCA,KAGA4M,GAED,EAJCjd,QAID,EAHCkd,mBAGD,EAFCD,+BACArJ,EACD,EADCA,UAEA,EAAsCpJ,mBAAS6F,EAAKqlB,mBAApD,mBAAOvC,EAAP,KAAoBC,EAApB,KAEMwB,EAAiBj3B,WAAW9B,kBAAQwU,EAAKukB,eAAepW,MAAOnO,EAAKsJ,YAAYzG,QAAQlY,WACxF65B,EAAqBl3B,WAAW9B,kBAAQwU,EAAKwkB,mBAAmBrW,MAAOnO,EAAKsJ,YAAYzG,QAAQlY,WAiBtG,OAfA2P,qBAAU,WACN,IAAMolB,EAAK,aAAO1f,EAAKqlB,mBAEvB3F,EAAMoE,MAAK,SAAUnzB,EAAGd,GACpB,OAAO6D,IAAKC,MAAMiQ,KAAK/T,EAAE00B,eAAepW,OAAOtK,IAAInQ,IAAKC,MAAMiQ,KAAKjT,EAAE4zB,eAAepW,WAIxFuR,EAAMoE,MAAK,SAAUnzB,EAAGd,GACpB,OAAO6D,IAAKC,MAAMiQ,KAAK/T,EAAE8S,KAAKke,eAAeC,WAAWjd,IAAInQ,IAAKC,MAAMiQ,KAAKjT,EAAEgS,KAAKke,eAAeC,eAGtGiC,EAAerD,KAChB,CAAC1f,IAGA,mCACK8iB,EAAY12B,OAAS,EAChB,qCACE,qBAAK8L,UAAU,oDAAf,SACI,sBAAKA,UAAU,6DAAf,UACI,cAAC2B,EAAD,CACIvC,MAAM,eACNwB,KAAMkH,EAAKsJ,YAAYzG,QAAQ/N,OAC/BkE,SAAS,OACTe,iBAAiB,EACjBnB,eAAe,YACfG,cAAc,eACdE,kBAAkB,SAEtB,cAACY,EAAD,CACIvC,MAAM,qBACNwB,KAAM7C,EAAc+J,EAAKqlB,kBAAkBj5B,QAC3C4M,SAAS,OACTe,iBAAiB,EACjBnB,eAAe,YACfK,kBAAkB,SAEtB,cAACY,EAAD,CACIvC,MAAM,kBACNwB,KAAMvC,EAAeguB,EAAgBvkB,EAAKsJ,YAAYzG,QAAQlY,UAC9DqO,SAAUgH,EAAKsJ,YAAYzG,QAAQ/N,OACnCiF,iBAAiB,EACjBnB,eAAe,YACfK,kBAAkB,qBAEtB,cAACY,EAAD,CACIvC,MAAM,uBACNwB,KAAMvC,EAAeiuB,EAAoBxkB,EAAKsJ,YAAYzG,QAAQlY,UAClEqO,SAAUgH,EAAKsJ,YAAYzG,QAAQ/N,OACnCiF,iBAAiB,EACjBnB,eAAe,YACfK,kBAAkB,0BAI9B,qBAAKf,UAAU,kEAAf,SAWhB,SAA8BmtB,GAC1B,IAAMlQ,EAAQ,GAkBd,OAhBAkQ,EAAkBlB,SAAQ,SAACG,EAAkBlnB,GACzC+X,EAAM5B,KACF,qBAAarb,UAAU,aAAvB,SACI,qBAAKA,UAAU,sCAAf,SACI,cAAC,GAAD,CACIoR,YAAatJ,EAAKsJ,YAClBgb,iBAAkBA,EAClB1X,8BAA+BA,EAC/BrJ,UAAWA,EACX6N,aAAcpR,EAAKoR,kBAPrBhU,OAcX+X,EA7BUyP,CAAqB9B,QAG5B,qBAAK5qB,UAAU,oDAAf,SACE,mBAAGA,UAAU,0BAAb,8CClFL,SAASotB,GAAT,GAIX,IAHAvuB,EAGD,EAHCA,OACAC,EAED,EAFCA,UACAiB,EACD,EADCA,SAEA,OACI,cAAC,EAAD,CACIlB,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,mCACI,wBACI2D,IAAI,uGACJ2f,OAAO,QACPD,MAAM,OACNnjB,MAAM,kBACNiuB,YAAY,IACZC,MAAM,sDACNttB,UAAU,aAPd,SASI,mBAAGiD,KAAK,8BAA8BC,OAAO,SAA7C,4BAIZ9D,MAAM,8BACNM,kBAAkB,EAClBG,kBAAkB,EAClBE,SAAUA,IC1BP,SAASwtB,GAAT,GAQX,IAPA1uB,EAOD,EAPCA,OACAC,EAMD,EANCA,UACAof,EAKD,EALCA,kBACAxW,EAID,EAJCA,MACAgN,EAGD,EAHCA,8BACA3H,EAED,EAFCA,KACAhN,EACD,EADCA,SAEA,OACI,cAAC,EAAD,CACIlB,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,mCACI,cAAC8e,GAAD,CACIC,aAAa,EACbC,kBAAmBA,EACnBxW,MAAOA,EACPgN,8BAA+BA,EAC/B3H,KAAMA,MAIlB3N,MAAK,mBAAcsI,EAAMiD,QAAQ/N,QACjC8C,kBAAkB,EAClBE,iBAAiB,QACjBG,SAAUA,IC9BP,SAASytB,GAAT,GAKX,IAJA3uB,EAID,EAJCA,OACAC,EAGD,EAHCA,UACAgB,EAED,EAFCA,UACAC,EACD,EADCA,SAEA,OACI,cAAC,EAAD,CACIlB,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,qCACI,0EAA4C,qCAA5C,OACA,sEAGRE,MAAM,qBACNK,iBAAiB,UACjBK,UAAWA,EACXC,SAAUA,ICpBP,SAAS0tB,GAAT,GAKX,IAJA5uB,EAID,EAJCA,OACAC,EAGD,EAHCA,UACAgB,EAED,EAFCA,UACAC,EACD,EADCA,SAEA,OACI,cAAC,EAAD,CACIlB,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,qCACI,mMACA,wEAA0C,qCAA1C,OACA,sEAGRE,MAAM,wBACNK,iBAAiB,UACjBK,UAAWA,EACXC,SAAUA,ICrBP,SAAS2tB,GAAT,GAIX,IAHArL,EAGD,EAHCA,aACAsL,EAED,EAFCA,eACAC,EACD,EADCA,WAyBA,OACI,sBAAK5tB,UAAU,2BAAf,UACI,qBAAKA,UAAU,sDAAf,SAzBR,WAGI,IAFA,IAAMid,EAAQ,GADQ,WAGb3M,GACL,IAAMud,EAAWvd,IAAY3Z,SAASg3B,GAEtC1Q,EAAM5B,KACF,yBAEIhb,KAAK,SACLL,UAAS,kEAA6D6tB,EAAW,SAAW,GAAnF,QACTvtB,QAAS,kBAAMstB,EAAWtd,IAJ9B,UAKKgS,GAAgB3rB,SAAS0rB,GAAe/R,GACzC,qBAAKtQ,UAAS,qEAAgE6tB,EAAW,kBAAoB,IAA7G,SACKzL,GAAezrB,SAAS0rB,GAAe/R,OANvCA,KALRA,EAAU,EAAGA,EAAU+R,IAAgB/R,EAAU,EAAjDA,GAiBT,OAAO2M,EAME6Q,KAGL,qBAAK9tB,UAAU,qBAAf,SACI,wBACIK,KAAK,SACLL,UAAU,iDACVM,QAAS,kBAAMstB,GXqBFxvB,EWrB8B,EXqBzBwd,EWrB4BjlB,SAAS0rB,GXsBhElkB,KAAK4vB,MAAM5vB,KAAK6vB,UAAYpS,EAAMxd,IAAQA,IAD9C,IAA0BA,EAAKwd,GWxBtB,SAKK6G,GAAiB9rB,SAAS0rB,WCxChC,SAAS4L,GAAT,GAIX,IAHAC,EAGD,EAHCA,MACAC,EAED,EAFCA,cACAC,EACD,EADCA,UA4DA,OACI,qBAAKpuB,UAAU,0FAAf,SA3DJ,WACI,IAAMid,EAAQ,GACV/X,EAAI,EAqDR,OAnDAgpB,EAAMjC,SAAQ,SAACrkB,EAAMkI,GACjB,IAQIwT,EACA+K,EATAR,GAAW,EAEH,IAAR3oB,OACuB,IAAnBipB,GAAwBA,EAAgBD,EAAMh6B,UAC9C25B,GAAW,GAOfjmB,EAAK2b,cACLD,EAAavO,GAAE/L,QAAQhL,iBAAiB5I,WAAWwS,EAAK0b,YAAc,KACtE+K,EAAO,MAEP/K,EAAavO,GAAE/L,QAAQ3K,eAAe0W,GAAE/L,QAAQ1V,QAAQsU,EAAK0b,WAAY1b,EAAKob,UAAUrY,QAAQlY,UAAWmV,EAAKob,UAAUrY,QAAQlY,UAClI47B,EAAOzmB,EAAKob,UAAUrY,QAAQ/N,QAGlCqgB,EAAM5B,KACF,wBAEIrb,UAAS,8BAAyB6tB,GAAY/d,IAAWqe,EAAgB,SAAW,IACpF7tB,QAAS,SAAAsc,GACLA,EAAE0R,iBACFF,EAAUte,IALlB,SAOI,sBAAK9P,UAAU,uCAAf,UACI,oBAAIA,UAAU,uCAAd,SACK4H,EAAKxR,OAEV,sBAAK4J,UAAU,6BAAf,UACI,8CAEI,sBAAMA,UAAU,yBAAhB,SAA0C4H,EAAK0c,cAFnD,YAKA,8CAEI,uBAAMtkB,UAAU,iBAAhB,UACI,sBAAMA,UAAU,UAAhB,SAA2BsjB,IAD/B,IACmD+K,KAElDzmB,EAAK2b,aAAe,gBAAkB,aArB9CzT,OA6BVmN,EAKFsR,KChEE,SAASC,GAAT,GAQX,IAPAC,EAOD,EAPCA,yBACAC,EAMD,EANCA,uBACAC,EAKD,EALCA,iBACAlR,EAID,EAJCA,aACAmR,EAGD,EAHCA,aACArR,EAED,EAFCA,MACAR,EACD,EADCA,QAEA,EAA0B9a,qBAA1B,mBAAO0b,EAAP,KAAcC,EAAd,KAaA,OAXAxb,qBAAU,WACDub,GACDC,EAASH,KAEd,CAACA,IAEJrb,qBAAU,WACN,IAAMsB,EAAU8C,YAAW,kBAAMuW,EAAQY,KAAQJ,GACjD,OAAO,kBAAMM,aAAana,MAC3B,CAACia,IAGA,mCAEI,sBAAK3d,UAAU,2FAAf,UACI,sBAAKA,UAAU,sCAAf,UACI,uBAAOA,UAAU,wBAAwB6f,QAAQ,sBAAjD,SACI,sBAAM7f,UAAU,cAAhB,SACKyuB,MAGT,wBACIjR,GAAG,sBACHxd,UAAU,iFACVxL,MAAOmpB,EACPI,SAAU,SAAAnB,GAAC,OAAIgB,EAAShB,EAAE1Z,OAAO1O,QAJrC,SAMKm6B,OAIT,sBAAK3uB,UAAU,SAAf,UACI,uBAAOA,UAAU,wBAAwB6f,QAAQ,oBAAjD,SACI,sBAAM7f,UAAU,cAAhB,SACK0uB,MAGT,uBACIruB,KAAK,SACLmd,GAAG,oBACHxd,UAAS,iGAA4F4uB,EAAe,GAAK,cACzHp6B,MAAK,OAAEmpB,QAAF,IAAEA,IAAS,GAChBI,SAAU,SAAAnB,GAAC,OAAIgB,EAAShB,EAAE1Z,OAAO1O,kBCtC1C,SAASq6B,GAAT,GAaX,IAZAhwB,EAYD,EAZCA,OACAC,EAWD,EAXCA,UACAM,EAUD,EAVCA,MACAK,EASD,EATCA,iBACAK,EAQD,EARCA,UACAC,EAOD,EAPCA,SACAmuB,EAMD,EANCA,MACAC,EAKD,EALCA,cACAR,EAID,EAJCA,eACAmB,EAGD,EAHCA,oBACAC,EAED,EAFCA,kBACArnB,EACD,EADCA,MAEA,EAA4BzF,qBAA5B,mBAAO+sB,EAAP,KAAeC,EAAf,KACA,EAA4BhtB,mBAASksB,GAArC,mBAAOre,EAAP,KAAese,EAAf,KACA,EAA8BnsB,mBAAS0rB,GAAvC,mBAAOrd,EAAP,KAAgBsd,EAAhB,KACA,EAA0C3rB,qBAA1C,mBAAOitB,EAAP,KAAsBC,EAAtB,KACA,EAA0DltB,mBAAS,GAAnE,mBAAOmtB,EAAP,KAA8BC,EAA9B,KACA,EAA8DptB,mBAAS,GAAvE,mBAAOie,EAAP,KAAgCoP,EAAhC,KACA,EAA4BrtB,mBAAS,GAArC,mBAAOuL,EAAP,KAAemR,EAAf,KACA,EAAoC1c,mBAAS,GAA7C,mBAAOib,EAAP,KAAmBhB,EAAnB,KACA,GAAkCja,qBAAlC,qBAAO8gB,GAAP,MAAkBwM,GAAlB,MACA,GAA4CttB,qBAA5C,qBAAOutB,GAAP,MAAuBC,GAAvB,MAEAr1B,QAAQC,IAAR,kBAAuByV,EAAvB,oBAAyCA,EAAzC,MACA,IAAMlI,GAAOsmB,EAAMwB,IAAI5f,GAEjB6f,GACF,sBAAK3vB,UAAU,qBAAf,UACI,2IAGA,yFAGA,6OAMF4vB,GACF,sBAAK5vB,UAAU,qBAAf,UACI,6FAGA,6KA8BR,OAxBIsQ,EAAU1I,GAAKya,cACfuL,EAAW,GAGfxrB,qBAAU,WACF2S,GAAEzb,QACFu2B,MAAM9a,GAAExM,SAASO,kBAAmB,CAChCgnB,QAAS,CACL,YAAa96B,EAAc+6B,sBAG9Bh0B,MAAK,SAAAi0B,GAAQ,OAAIA,EAASC,UAC1Bl0B,MAAK,SAAAqf,GACF6T,EAAU7T,MAEbpf,OAAM,SAAC7B,GACJ80B,EAAU,IACV70B,QAAQC,IAAIF,MAGpB80B,EAAU,MAEf,CAACla,GAAEzb,QAASyb,GAAEvf,UAGb,cAAC,EAAD,CACIqJ,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,sBAAKc,UAAU,2BAAf,UACK8uB,GACG,gCACI,sBAAM9uB,UAAU,cAAhB,4BAGA,cAACiuB,GAAD,CACIC,MAAOA,EACPC,cAAere,EACfse,UAAWA,OAKvB,gCACI,8BACI,sBAAMpuB,UAAU,cAAhB,kCAIJ,qBAAKA,UAAU,OAAf,SACI,cAAC0tB,GAAD,CACIrL,aAAcza,GAAKya,aACnBsL,eAAgBrd,EAChBsd,WAAYA,UAKtBkB,GAAuBC,GACrB,sBAAK/uB,UAAU,gCAAf,UACKgvB,GACG,cAACR,GAAD,CACIC,yBAAyB,2BACzBC,uBAAuB,8BACvBC,iBAgKhC,WACI,IAAM1R,EAAQ,CACT,wBAAiBzoB,MAAM,GAAvB,4BAAa,KAGbw6B,EAAO14B,KAAI,SAAA45B,GAAC,OAAIA,EAAEC,iBAAeC,SAAS1oB,EAAMwN,kBACjD+H,EAAM5B,KAAM,wBAAoC7mB,MAAOkT,EAAMwN,gBAAjD,SAAmExN,EAAMiD,QAAQ/N,QAApE8K,EAAMwN,kBAOnC,OAJA8Z,EAAO/C,SAAQ,SAAAvkB,GACXuV,EAAM5B,KAAM,wBAAkC7mB,MAAOkT,EAAMyoB,cAA/C,SAA+DzoB,EAAM9K,QAAxD8K,EAAMyoB,mBAG5BlT,EA7KuCoT,GAClB5S,aAAc/V,EAAMwN,gBACpB0Z,aAAcY,GACdjS,MAAO,IACPR,QAAO,uCAAE,WAAM7mB,GAAN,uBAAAuC,EAAA,yDACA+C,IAAKC,MAAMqkB,UAAU5pB,EAAQ6pB,eAD7B,uBAED0P,IAAkB,GAClBr1B,QAAQC,IAAR,UAAenE,EAAf,6BAHC,iCAOLA,EAAUsF,IAAKC,MAAM60B,kBAAkBp6B,GAEvCu5B,IAAkB,GAClBF,IAAa,GAVR,mBAaqBxa,GAAE/M,YAAYmK,QAAQjc,GAb3C,WAeqB,IAFhBq6B,EAbL,QAeWr8B,OAfX,0DAmBKgR,EAAIsrB,GAAoBD,GACxBL,EAAIK,EAAQrrB,GAElBiqB,EAAiBe,GAtBhB,UAwBmCnb,GAAEvN,OAAOiG,yBAAyBvX,EAASg6B,EAAE5wB,KAAKqL,QAAQlY,SAAUy9B,EAAE9iB,kBAxBzG,eAwBKgiB,EAxBL,OAyBDC,EAAyBD,GAzBxB,UA2BqCra,GAAEvN,OAAO2F,2BAA2BjX,EAASg6B,EAAE5wB,KAAKqL,QAAQlY,SAAUy9B,EAAE9iB,kBA3B7G,QA2BK8S,EA3BL,OA4BDoP,EAA2BpP,GA5B1B,kDA8BDiP,OAAiB51B,GACjBa,QAAQD,MAAM,yBAAd,MA/BC,yBAiCDo1B,IAAa,GAjCZ,6EAAF,wDAsCf,sBAAMvvB,UAAU,uCAAhB,SACK+iB,GACM,sBAAM/iB,UAAU,gBAAhB,yBACDkvB,EAAa,UAAMA,EAAc5vB,KAAKqL,QAAQvU,KAAjC,cAA2CpB,EAAc8f,kBAAkBC,GAAEvf,QAAS05B,EAAc5vB,KAAKkI,SAAY,SAMnJunB,GACG,sBAAK/uB,UAAU,6BAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,uBAAMA,UAAU,cAAhB,oBAEI,uBAAMA,UAAU,OAAhB,cAEI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQhL,iBAAiBkf,GACjCpc,SAAS,IACTD,cAAc,iBACdE,kBAAkB,WAN1B,UAWJ,uBAAMf,UAAU,cAAhB,qBAEI,cAACW,EAAD,CACIC,KAAMsuB,EAAgBna,GAAE/L,QAAQ3K,eAAe0W,GAAE/L,QAAQ1V,QAAQ47B,EAAc/Z,cAAe+Z,EAAc5vB,KAAKqL,QAAQlY,UAAWy8B,EAAc5vB,KAAKqL,QAAQlY,UAAY,IAC3KqO,SAAQ,OAAEouB,QAAF,IAAEA,OAAF,EAAEA,EAAe5vB,KAAKqL,QAAQ/N,OACtCiE,cAAc,sBACdE,kBAAkB,iBAI9B,sBAAKf,UAAS,UAAK+iB,GAAY,gBAAkB,IAAjD,UACI,cAACrH,GAAD,CACIC,WAAYoH,GACZ3kB,IAAK,EACLwd,IAAKsT,EAAgBna,GAAE/L,QAAQ1V,QAAQ47B,EAAc/Z,cAAe+Z,EAAc5vB,KAAKqL,QAAQlY,UAAY,EAC3GA,SAAUy8B,EAAgB/wB,KAAKC,IAAI,EAAG8wB,EAAc5vB,KAAKqL,QAAQlY,UAAY,EAC7EwpB,SAAU0C,EACVzC,cAAeA,EACfJ,eAAe,gEACfC,eAAe,sBAEnB,sBAAK/b,UAAU,gCAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQkR,gBAAgB1M,EAAS4hB,GACzCtuB,SAAU4G,EAAMiD,QAAQ/N,OACxBiE,cAAc,qBAGtB,qBAAKb,UAAU,qBAAf,SACI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQmR,kBAAkB3M,EAAS0S,GAC3Cpf,SAAUiU,GAAEnf,UAAUG,YAAY6G,OAClCiE,cAAc,iCAS9CzB,MAAOA,EACPE,KAAO,cAACwT,GAAD,CAAeC,WAAW,EAAM1Z,SAAU01B,EAAoBa,GAAiCD,GAA+B3c,KAAK,YAC1IvT,iBAAkBA,EAClBE,uBAAwBovB,IAAsBhM,IAAavV,GAAU,GACrE1N,UAAS,sBAAE,sBAAArH,EAAA,sEACDqH,EAAUgQ,EAAQof,EAAe1hB,EAAQ8C,EAAS1I,GAAKob,WADtD,2CAGXjjB,SAAUA,IAIlB,SAASywB,GAAoBD,GACzB,GAAsB,GAAlBA,EAAQr8B,OAAZ,CAOA,IAHA,IAAIu8B,EACAC,EAEKxrB,EAAI,EAAGA,EAAIqrB,EAAQr8B,SAAUgR,EAAG,CACrC,IAAM6G,EAAWgJ,GAAE/L,QAAQ1V,QAAQi9B,EAAQrrB,GAAGyrB,YAAY5kB,SAAUwkB,EAAQrrB,GAAG5F,KAAKqL,QAAQlY,UACtFwZ,EAAW8I,GAAE/L,QAAQ1V,QAAQi9B,EAAQrrB,GAAGyrB,YAAY1kB,SAAUskB,EAAQrrB,GAAG5F,KAAKqL,QAAQlY,UAItFm+B,EAAI7kB,EAAWE,IAEhBykB,GAAYE,EAAIF,KACjBD,EAAWvrB,EACXwrB,EAAWE,GAInB,OAAOH,ICpRA,SAASI,GAAT,GAKX,IAJAhyB,EAID,EAJCA,OACAC,EAGD,EAHCA,UACAgB,EAED,EAFCA,UACAC,EACD,EADCA,SAEA,OACI,cAAC,EAAD,CACIlB,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,qCACI,wEAA0C,qCAA1C,OACA,sEAGRE,MAAM,mBACNK,iBAAiB,UACjBK,UAAWA,EACXC,SAAUA,ICNP,SAAS+wB,GAAT,GAQX,IAPAjyB,EAOD,EAPCA,OACAC,EAMD,EANCA,UACAM,EAKD,EALCA,MACAK,EAID,EAJCA,iBACAK,EAGD,EAHCA,UACAC,EAED,EAFCA,SACA0K,EACD,EADCA,KAGA,EAA4BxI,qBAA5B,mBAAO+sB,EAAP,KAAeC,EAAf,KACA,EAA0ChtB,qBAA1C,mBAAOitB,EAAP,KAAsBC,EAAtB,KACA,EAAgEltB,mBAAS,GAAzE,mBAAO8uB,EAAP,KAAiCC,EAAjC,KACA,EAA8D/uB,mBAAS,GAAvE,mBAAOie,EAAP,KAAgCoP,EAAhC,KACA,EAA4BrtB,mBAAS,GAArC,mBAAOuL,EAAP,KAAemR,EAAf,KACA,EAAoC1c,mBAAS,GAA7C,mBAAOib,EAAP,KAAmBhB,EAAnB,KACA,EAAkCja,qBAAlC,mBAAO8gB,EAAP,KAAkBwM,EAAlB,KACA,EAA4CttB,qBAA5C,mBAAOutB,EAAP,KAAuBC,EAAvB,KAEMwB,EACF,sBAAKjxB,UAAU,qBAAf,UACI,2IAGA,yFAGA,6OA0BR,OApBAoC,qBAAU,WACF2S,GAAEzb,QACFu2B,MAAM9a,GAAExM,SAASO,kBAAmB,CAChCgnB,QAAS,CACL,YAAa96B,EAAc+6B,sBAG9Bh0B,MAAK,SAAAi0B,GAAQ,OAAIA,EAASC,UAC1Bl0B,MAAK,SAAAqf,GACF6T,EAAU7T,MAEbpf,OAAM,SAAC7B,GACJ80B,EAAU,IACV70B,QAAQC,IAAIF,MAGpB80B,EAAU,MAEf,CAACla,GAAEzb,QAASyb,GAAEvf,UAGb,cAAC,EAAD,CACIqJ,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,sBAAKc,UAAU,2BAAf,UACI,sBAAKA,UAAU,gCAAf,UACKgvB,GACG,cAACR,GAAD,CACIC,yBAAyB,2BACzBC,uBAAuB,8BACvBC,iBA+I5B,WACI,IAAM1R,EAAQ,CACT,wBAAiBzoB,MAAM,GAAvB,4BAAa,KAGbw6B,EAAO14B,KAAI,SAAA45B,GAAC,OAAIA,EAAEC,iBAAeC,SAAS3lB,EAAKC,aAAahD,QAC7DuV,EAAM5B,KAAM,wBAAsC7mB,MAAOiW,EAAKC,aAAahD,MAA/D,SAAuEqN,GAAEjN,KAAKiJ,sBAAsBtG,IAAvFA,EAAKC,aAAahD,QAO/C,OAJAsnB,EAAO/C,SAAQ,SAAAvkB,GACXuV,EAAM5B,KAAM,wBAAkC7mB,MAAOkT,EAAMyoB,cAA/C,SAA+DzoB,EAAM9K,QAAxD8K,EAAMyoB,mBAG5BlT,EA5JmCoT,GAClB5S,aAAchT,EAAKC,aAAahD,MAChCknB,aAAcY,EACdjS,MAAO,IACPR,QAAO,uCAAE,WAAM7mB,GAAN,uBAAAuC,EAAA,yDACA+C,IAAKC,MAAMqkB,UAAU5pB,EAAQ6pB,eAD7B,uBAED0P,GAAkB,GAClBr1B,QAAQC,IAAR,UAAenE,EAAf,6BAHC,iCAOLA,EAAUsF,IAAKC,MAAM60B,kBAAkBp6B,GAEvCu5B,GAAkB,GAClBF,GAAa,GAVR,mBAaqBxa,GAAE/M,YAAYmK,QAAQjc,GAb3C,WAeqB,IAFhBq6B,EAbL,QAeWr8B,OAfX,0DAmBKgR,EAAIsrB,EAAoBD,GACxBL,EAAIK,EAAQrrB,GAElBiqB,EAAiBe,GAtBhB,UAwBsCnb,GAAEjN,KAAKoK,4BAA4Bge,EAAGzlB,GAxB5E,eAwBKsmB,EAxBL,OAyBDC,EAA4BD,GAzB3B,UA2BqChc,GAAE7M,QAAQiF,2BAA2BjX,EAASg6B,EAAE5wB,KAAKqL,QAAQlY,SAAUy9B,EAAE9iB,kBA3B9G,QA2BK8S,EA3BL,OA4BDoP,EAA2BpP,GA5B1B,kDA8BDiP,OAAiB51B,GACjBa,QAAQD,MAAM,yBAAd,MA/BC,yBAiCDo1B,GAAa,GAjCZ,6EAAF,wDAsCf,sBAAMvvB,UAAU,uCAAhB,SACK+iB,EACM,sBAAM/iB,UAAU,gBAAhB,yBACDkvB,EAAa,UAAMne,EAAsBme,GAA5B,cAAgDl6B,EAAc8f,kBAAkBC,GAAEvf,QAAS05B,EAAc5vB,KAAKkI,SAAY,SAKrJ,sBAAKxH,UAAU,6BAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,uBAAMA,UAAU,cAAhB,oBAEI,uBAAMA,UAAU,OAAhB,cAEI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQhL,iBAAiBkf,GACjCpc,SAAS,IACTD,cAAc,iBACdE,kBAAkB,WAN1B,UAWJ,uBAAMf,UAAU,cAAhB,qBAEI,cAACW,EAAD,CACIC,KAAMsuB,EAAgBna,GAAE/L,QAAQ3K,eAAe0W,GAAE/L,QAAQ1V,QAAQ47B,EAAc/Z,cAAe+Z,EAAc5vB,KAAKqL,QAAQlY,UAAWy8B,EAAc5vB,KAAKqL,QAAQlY,UAAY,IAC3KqO,SAAUouB,EAAgBne,EAAsBme,GAAiB,IACjEruB,cAAc,sBACdE,kBAAkB,iBAI9B,sBAAKf,UAAS,UAAK+iB,EAAY,gBAAkB,IAAjD,UACI,cAACrH,GAAD,CACIC,WAAYoH,EACZ3kB,IAAK,EACLwd,IAAKsT,EAAgBna,GAAE/L,QAAQ1V,QAAQ47B,EAAc/Z,cAAe+Z,EAAc5vB,KAAKqL,QAAQlY,UAAY,EAC3GA,SAAUy8B,EAAgB/wB,KAAKC,IAAI,EAAG8wB,EAAc5vB,KAAKqL,QAAQlY,UAAY,EAC7EwpB,SAAU0C,EACVzC,cAAeA,EACfJ,eAAe,gEACfC,eAAe,sBAEnB,sBAAK/b,UAAU,gCAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQ6e,mBAAmBra,EAASujB,EAA0BtmB,GACtE3J,SAAUiU,GAAEjN,KAAKiJ,sBAAsBtG,GACvC5J,cAAc,qBAGtB,qBAAKb,UAAU,qBAAf,SACI,cAACW,EAAD,CACIC,KAAMmU,GAAE/L,QAAQmR,kBAAkB3M,EAAS0S,GAC3Cpf,SAAUiU,GAAEnf,UAAUG,YAAY6G,OAClCiE,cAAc,iCAQ1CzB,MAAOA,EACPE,KAAO,cAACwT,GAAD,CAAeC,WAAW,EAAM1Z,SAAU43B,EAAwBje,KAAK,YAC9EvT,iBAAkBA,EAClBE,uBAAwBojB,GAAavV,GAAU,EAC/C1N,UAAS,sBAAE,4BAAArH,EAAA,6DACDy4B,EAA0Bnc,GAAE/L,QAAQvU,MAAM+Y,EAASujB,EAA0BtmB,EAAKC,aAAaC,QAAQlY,UADtG,SAEDqN,EAAUovB,EAAe1hB,EAAQ0jB,GAFhC,2CAIXnxB,SAAUA,IAIlB,SAASywB,EAAoBD,GACzB,GAAsB,GAAlBA,EAAQr8B,OAAZ,CAOA,IAHA,IAAIu8B,EACAC,EAEKxrB,EAAI,EAAGA,EAAIqrB,EAAQr8B,SAAUgR,EAAG,CACrC,IAAM6G,EAAWgJ,GAAE/L,QAAQ1V,QAAQi9B,EAAQrrB,GAAGyrB,YAAY5kB,SAAUwkB,EAAQrrB,GAAG5F,KAAKqL,QAAQlY,UACtFwZ,EAAW8I,GAAE/L,QAAQ1V,QAAQi9B,EAAQrrB,GAAGyrB,YAAY1kB,SAAUskB,EAAQrrB,GAAG5F,KAAKqL,QAAQlY,UAItFm+B,EAAI7kB,EAAWE,IAEhBykB,GAAYE,EAAIF,KACjBD,EAAWvrB,EACXwrB,EAAWE,GAInB,OAAOH,GAmBX,SAAS1f,EAAsBrJ,GAC3B,OAAOA,EAAM0F,iBAAN,UAA4B1F,EAAMsJ,cAAcpU,OAAhD,YAA0D8K,EAAMuJ,cAAcrU,QAAW8K,EAAMpI,KAAKqL,QAAQ/N,QCxO5G,SAASu0B,GAAT,GAUX,IATAtyB,EASD,EATCA,OACAC,EAQD,EARCA,UACAM,EAOD,EAPCA,MACAK,EAMD,EANCA,iBACAK,EAKD,EALCA,UACAC,EAID,EAJCA,SACAtI,EAGD,EAHCA,QACAkd,EAED,EAFCA,mBACAliB,EACD,EADCA,SAEA,EAA4BwP,mBAAS,GAArC,mBAAOuL,EAAP,KAAemR,EAAf,KACA,EAAoC1c,mBAAS,GAA7C,mBAAOib,EAAP,KAAmBhB,EAAnB,KAEA,OACI,cAAC,EAAD,CACIrd,OAAQA,EACRC,UAAWA,EACXC,yBAAyB,EACzBG,KACI,qCACI,sBAAKc,UAAU,gDAAf,UACI,6CACa,uBAAMA,UAAU,UAAhB,UAA2B+U,GAAE/L,QAAQhL,iBAAiBkf,GAAtD,OADb,OAGA,6CACa,sBAAMld,UAAU,UAAhB,SAA2B+U,GAAE/L,QAAQ3K,eAAe5G,EAAShF,WAG9E,cAACipB,GAAD,CACItd,IAAK,EACLwd,IAAKnkB,EACLhF,SAAUA,EACVwpB,SAAU0C,EACVzC,cAAeA,EACfJ,eAAe,gEACfC,eAAe,sBAEnB,qBAAK/b,UAAU,mBAAf,SACI,cAACW,EAAD,CACIC,KAAM+T,EAAqBI,GAAE/L,QAAQkR,gBAAgB1M,EAASmH,GAAsB,IACpF7T,SAAUiU,GAAEnf,UAAUG,YAAY6G,OAClCiE,cAAc,wBAI9BzB,MAAOA,EACPK,iBAAkBA,EAClBK,UAAW,kBAAMA,EAAU0N,IAC3BzN,SAAUA,IZvCDosB,GAMVrqB,aAAe,CAClBgQ,UAAU,WAAD,4BAAE,sBAAArZ,EAAA,0FAAF,kDAAC,IC2FlBy0B,GAAkBprB,aAAe,CAC7BgQ,UAAU,WAAD,4BAAE,WAAOH,EAAQM,GAAf,SAAAxZ,EAAA,0FAAF,qDAAC,IO7Cd+1B,GAAwB1sB,aAAe,CACnCyb,MAAO,IACPR,QAAS,c,IK3CQqU,G,kDAYjB,WAAY95B,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT8T,eAAW9R,EACX2mB,6BAAyB3mB,EACzB+lB,6BAAyB/lB,EACzBmb,mCAA+Bnb,EAC/BmO,WAAOnO,EACP20B,WAAO30B,EACPuO,UAAMvO,EAEN83B,qBAAqB,EACrBC,gBAAgB,EAChBC,wBAAyB,CACrBlK,MAAM,EACNmK,SAAU,MAEdC,sBAAuB,CACnBpK,MAAM,EACNmK,SAAU,MAEdE,sBAAuB,CACnBrK,MAAM,EACN5vB,QAAS,EACT+5B,SAAU,MAEdG,uBAAwB,CACpBtK,MAAM,EACNvX,QAAS,EACTrY,QAAS,EACT+5B,SAAU,MAEdI,kBAAmB,CACfvK,MAAM,EACNvX,QAAS,EACTrY,QAAS,EACT+5B,SAAU,MAEdK,sBAAuB,CACnBxK,MAAM,EACNmK,SAAU,MAEdM,sBAAuB,CACnBzK,MAAM,EACNzqB,OAAQ,KACRnF,QAAS,EACTywB,+BAAgC,EAChCsJ,SAAU,MAEdO,uBAAwB,CACpB1K,MAAM,EACNzqB,OAAQ,KACRnF,QAAS,EACT0wB,8BAA+B,EAC/BqJ,SAAU,MAGdQ,WAAY16B,EAAM26B,cAAgBpe,GAAkBG,SAAWH,GAAkBG,MACjFke,WAAY56B,EAAM26B,cAAgBpe,GAAkBI,SAAWJ,GAAkBI,MACjFke,WAAY76B,EAAM26B,cAAgBpe,GAAkBK,SAAWL,GAAkBK,MACjFke,mBAAoB96B,EAAM26B,cAAgBpe,GAAkBM,iBAAmBN,GAAkBM,eAGrG,EAAKmQ,YAAc,GAEnB,EAAKhhB,OAAS,EAAKA,OAAOxL,KAAZ,gBAEd,EAAKm6B,cAAgB,EAAKA,cAAcn6B,KAAnB,gBAErB,EAAKiV,KAAO,EAAKA,KAAKjV,KAAV,gBACZ,EAAKoX,qBAAuB,EAAKA,qBAAqBpX,KAA1B,gBAC5B,EAAKu6B,QAAU,EAAKA,QAAQv6B,KAAb,gBACf,EAAKw6B,aAAe,EAAKA,aAAax6B,KAAlB,gBACpB,EAAKy6B,YAAc,EAAKA,YAAYz6B,KAAjB,gBACnB,EAAK06B,aAAe,EAAKA,aAAa16B,KAAlB,gBA3EL,E,4FA8EnB,sBAAAW,EAAA,sEACcK,KAAKyK,aADnB,kCAEQnJ,QAAQC,IAAI,mCAFpB,gD,wFAMA,WACIvB,KAAK0K,c,uEAGT,WAAyBivB,GAAzB,SAAAh6B,EAAA,sEACcK,KAAKyK,aADnB,kCAEQnJ,QAAQC,IAAI,oCAFpB,OAKQvB,KAAKxB,MAAM26B,eAAiBQ,EAAUR,eACtCn5B,KAAKm5B,cAAcn5B,KAAKxB,MAAM26B,eANtC,gD,sHAUA,8BAAAx5B,EAAA,0DACQK,KAAK2K,eADb,0CAEe,GAFf,UAKI3K,KAAK2K,gBAAiB,EAL1B,UAQY3K,KAAKkJ,QAAQxM,QARzB,qBASgBsD,KAAKkJ,QAAQ5G,OAT7B,oBAUgB2Z,GAAE7N,KAAKpO,KAAKkJ,SAEPlJ,KAAK4K,QAZ1B,8BAasC5K,KAAKxB,MAAMuM,gBAbjD,uEAaoEkR,GAAEjK,MAAMG,oBAAoBnS,KAAKwrB,aAbrG,yBAaoH,IAbpH,oBAa0BjZ,EAb1B,KAcoBvS,KAAK6K,WAAW0H,GAdpC,mBAgB2B,GAhB3B,QAoBgBvS,KAAKkJ,QAAQ/I,QACb8b,GAAE7N,KAAKpO,KAAKkJ,SArB5B,kCAyBe,GAzBf,yBA2BQlJ,KAAK2K,gBAAiB,EA3B9B,2E,8EA+BA,SAAW4H,GAAY,IAAD,OAClBvS,KAAK4K,QAAUE,YAAW,sBAAC,sBAAAnL,EAAA,sEAAkB,EAAK6K,SAAvB,mFAAiC+H,GAC5DjR,QAAQC,IAAR,yBAA8BvB,KAAK4K,QAAnC,uBAAyD2H,EAAzD,U,uBAGJ,WACI,IAAM3H,EAAU5K,KAAK4K,QAEjBA,IACAI,cAAcJ,GACd5K,KAAK4K,aAAUnK,EAEfa,QAAQC,IAAR,yBAA8BqJ,O,oBAItC,WAAU,IAAD,OACCgvB,GAAc55B,KAAKvB,MAAM26B,YAAcp5B,KAAKvB,MAAM46B,YAAcr5B,KAAKvB,MAAM66B,kBAEjF,OACI,uBAAMpyB,UAAU,yCAAhB,UACMlH,KAAKvB,MAAMy6B,WAAal5B,KAAKvB,MAAMmQ,MAC/B,cAAC,WAAD,UACE,cAAC,GAAD,CACI2M,aAAa,EACbC,WAAYoe,EACZ5X,kBAAmB4X,GAAc55B,KAAKvB,MAAM26B,UAC5CxqB,MAAO5O,KAAKvB,MAAMmQ,MAClBkN,mBAAoB9b,KAAKvB,MAAM+nB,wBAC/B3K,mBAAoB7b,KAAKvB,MAAM2oB,wBAC/BhR,qBAAsBpW,KAAKoW,qBAC3B7D,UAAWvS,KAAKvB,MAAM8T,aATb,SAYfvS,KAAKvB,MAAMy6B,WAAa,cAAC1sB,EAAD,CAASlG,MAAM,4BAG3CszB,GACE,sBAAK1yB,UAAU,4CAAf,UACI,yBACIK,KAAK,SACLL,UAAS,wBAAmBlH,KAAKvB,MAAMy6B,UAAY,QAAU,GAApD,kDACT1xB,QAAS,WACL,EAAK1I,SAAS,CACVy5B,qBAAqB,KALjC,wBASe,mBAAGrxB,UAAU,yBAG3BlH,KAAKvB,MAAMmQ,OACR,yBACIrH,KAAK,SACLL,UAAS,wBAAmBlH,KAAKvB,MAAMy6B,UAAY,QAAU,GAApD,0CACT1xB,QAAS,WACL,EAAK1I,SAAS,CACV05B,gBAAgB,KAL5B,iBASSvc,GAAEnf,UAAU8R,MAAM9K,aAMrC9D,KAAKvB,MAAMy6B,WAAaU,GAAe55B,KAAKvB,MAAMmQ,OAAS5O,KAAKvB,MAAM+nB,yBAA2BxmB,KAAKvB,MAAM2oB,yBAC1G,qCACI,sBAAKlgB,UAAU,mDAAf,UACI,qBAAKA,UAAS,0CAAd,SACI,cAACge,GAAD,CACIE,kBAAmBplB,KAAKkJ,QAAQvK,QAChCiQ,MAAO5O,KAAKvB,MAAMmQ,MAClBgN,8BAA+B5b,KAAKvB,MAAMmd,8BAC1C3H,KAAI,uCAAE,WAAOS,EAAQuR,EAAa3Q,EAAWukB,GAAvC,SAAAl6B,EAAA,+EAEQ,EAAKsU,KAAKS,EAAQuR,EAAa3Q,EAAWukB,GAFlD,sDAIEC,MAAMC,KAAKC,UAAL,OAJR,wDAAF,gEASZ,qBAAK9yB,UAAS,0CAAd,SACI,cAACggB,GAAD,CACIvoB,QAASsd,GAAE/L,QAAQgB,iBAAiBlR,KAAKvB,MAAMmQ,MAAM2N,mBACrD1G,SAAQ,uCAAE,WAAOP,EAAWZ,GAAlB,SAAA/U,EAAA,+EAEIsc,GAAErN,MAAMiH,SAASP,EAAWZ,GAFhC,sDAIFolB,MAAMC,KAAKC,UAAL,OAJJ,wDAAF,+DAUpB,sBAAK9yB,UAAU,2BAAf,UACI,qBAAKA,UAAU,6EAAf,SACI,iDAEJ,cAACgiB,GAAD,CACIta,MAAO5O,KAAKvB,MAAMmQ,MAClBkN,mBAAoB9b,KAAKvB,MAAM+nB,wBAC/B3K,mBAAoB7b,KAAKvB,MAAM2oB,wBAC/B7U,UAAWvS,KAAKvB,MAAM8T,kBAKnCvS,KAAKvB,MAAM26B,WAAap5B,KAAKvB,MAAMy6B,WAAcl5B,KAAKvB,MAAMmQ,OAAS5O,KAAKvB,MAAM22B,MAC7E,qBAAKluB,UAAU,mDAAf,SACGlH,KAAKi6B,iBAEPj6B,KAAKvB,MAAM26B,WAAap5B,KAAKvB,MAAMy6B,WAAc,cAAC1sB,EAAD,CAASjF,KAAK,UAEpEvH,KAAKvB,MAAM46B,WAAar5B,KAAKvB,MAAMmQ,OAAS5O,KAAKvB,MAAMuQ,KACnD,cAACiiB,GAAD,CACEjiB,KAAMhP,KAAKvB,MAAMuQ,KACjB4M,8BAA+B5b,KAAKvB,MAAMmd,8BAC1CvD,QAASrY,KAAKy5B,YACd3gB,SAAU9Y,KAAK05B,aACfnnB,UAAWvS,KAAKvB,MAAM8T,YAExBvS,KAAKvB,MAAM46B,WAAa,cAAC7sB,EAAD,CAASjF,KAAK,UAE1CvH,KAAKvB,MAAM66B,mBAAqBt5B,KAAKvB,MAAMmQ,OAAS5O,KAAKvB,MAAMy7B,kBAC3D,cAAC,WAAD,UACE,cAAC9F,GAAD,CACIplB,KAAMhP,KAAKvB,MAAMy7B,kBACjBte,8BAA+B5b,KAAKvB,MAAMmd,8BAC1CrJ,UAAWvS,KAAKvB,MAAM8T,UACtB4nB,QAASn6B,KAAKo6B,uBALL,qBAQfp6B,KAAKvB,MAAM66B,mBAAqB,cAAC9sB,EAAD,CAASjF,KAAK,UAEnDvH,KAAKvB,MAAM85B,qBACR,cAACjE,GAAD,CACIvuB,OAAQ/F,KAAKvB,MAAM85B,oBACnBvyB,UAAW,WACP,EAAKlH,SAAS,CACVy5B,qBAAqB,KAG7BtxB,SAAU,WACN,EAAKnI,SAAS,CACVy5B,qBAAqB,OAKpCv4B,KAAKvB,MAAM+5B,gBACR,cAAC/D,GAAD,CACI1uB,OAAQ/F,KAAKvB,MAAM+5B,eACnBxyB,UAAW,WACP,EAAKlH,SAAS,CACV05B,gBAAgB,KAGxBpT,kBAAmBplB,KAAKkJ,QAAQvK,QAChCiQ,MAAO5O,KAAKvB,MAAMmQ,MAClBgN,8BAA+B5b,KAAKvB,MAAMmd,8BAC1C3H,KAAI,uCAAE,WAAOS,EAAQuR,EAAa3Q,EAAWukB,GAAvC,SAAAl6B,EAAA,+EAEQ,EAAKsU,KAAKS,EAAQuR,EAAa3Q,EAAWukB,GAFlD,sDAIEC,MAAMC,KAAKC,UAAL,OAJR,wDAAF,4DAOJ/yB,SAAU,WACN,EAAKnI,SAAS,CACV05B,gBAAgB,OAK/Bx4B,KAAKvB,MAAMg6B,wBAAwBlK,MAChC,cAACmG,GAAD,CACI3uB,OAAQ/F,KAAKvB,MAAMg6B,wBAAwBlK,KAC3CvoB,UAAW,WACP,EAAKlH,SAAS,CACV25B,wBAAyB,CACrBlK,MAAM,MAIlBvnB,UAAS,sBAAE,4BAAArH,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMg6B,wBAAwBC,SACpD,EAAK55B,SAAS,CACV25B,wBAAyB,CACrBlK,MAAM,KAJP,SAODmK,IAPC,2CASXzxB,SAAU,WACN,EAAKnI,SAAS,CACV25B,wBAAyB,CACrBlK,MAAM,QAMzBvuB,KAAKvB,MAAMk6B,sBAAsBpK,MAC9B,cAACoG,GAAD,CACI5uB,OAAQ/F,KAAKvB,MAAMk6B,sBAAsBpK,KACzCvoB,UAAW,WACP,EAAKlH,SAAS,CACV65B,sBAAuB,CACnBpK,MAAM,MAIlBvnB,UAAS,sBAAE,4BAAArH,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMk6B,sBAAsBD,SAClD,EAAK55B,SAAS,CACV65B,sBAAuB,CACnBpK,MAAM,KAJP,SAODmK,IAPC,2CASXzxB,SAAU,WACN,EAAKnI,SAAS,CACV65B,sBAAuB,CACnBpK,MAAM,QAMzBvuB,KAAKvB,MAAMm6B,sBAAsBrK,MAC9B,cAACwH,GAAD,CACIhwB,OAAQ/F,KAAKvB,MAAMm6B,sBAAsBrK,KACzCvoB,UAAW,WACP,EAAKlH,SAAS,CACV85B,sBAAuB,CACnBrK,MAAM,MAIlBjoB,MAAM,yBACNK,iBAAiB,UACjBK,UAAS,uCAAE,WAAOgQ,EAAQof,EAAe1hB,EAAQ8C,EAAS0S,GAA/C,eAAAvqB,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMm6B,sBAAsBF,SAClD,EAAK55B,SAAS,CACV85B,sBAAuB,CACnBrK,MAAM,KAJP,SAODmK,EAAS1hB,EAAQQ,GAPhB,2CAAF,8DASTvQ,SAAU,WACN,EAAKnI,SAAS,CACV85B,sBAAuB,CACnBrK,MAAM,MAIlB6G,MAAOp1B,KAAKvB,MAAM22B,MAClBC,cAAe,IACfR,eAAgB,IAChBl2B,QAASqB,KAAKvB,MAAMm6B,sBAAsBj6B,QAC1Cq3B,qBAAqB,EACrBC,mBAAmB,EACnBrnB,MAAO5O,KAAKvB,MAAMmQ,QAGzB5O,KAAKvB,MAAMo6B,uBAAuBtK,MAC/B,cAACwH,GAAD,CACIhwB,OAAQ/F,KAAKvB,MAAMo6B,uBAAuBtK,KAC1CvoB,UAAW,WACP,EAAKlH,SAAS,CACV+5B,uBAAwB,CACpBtK,MAAM,MAIlBjoB,MAAM,2BACNK,iBAAiB,MACjBK,UAAS,uCAAE,WAAOgQ,EAAQof,EAAe1hB,EAAQ8C,EAAS0S,GAA/C,eAAAvqB,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMo6B,uBAAuBH,SACnD,EAAK55B,SAAS,CACV+5B,uBAAwB,CACpBtK,MAAM,KAJP,SAODmK,EAAS1hB,EAAQQ,GAPhB,2CAAF,8DASTvQ,SAAU,WACN,EAAKnI,SAAS,CACV+5B,uBAAwB,CACpBtK,MAAM,MAIlB6G,MAAOp1B,KAAKvB,MAAM22B,MAClBC,cAAer1B,KAAKvB,MAAMo6B,uBAAuB7hB,OACjD6d,eAAgB,EAChBl2B,QAASqB,KAAKvB,MAAMo6B,uBAAuBl6B,QAC3Cq3B,qBAAqB,EACrBC,mBAAmB,EACnBrnB,MAAO5O,KAAKvB,MAAMmQ,QAGzB5O,KAAKvB,MAAMq6B,kBAAkBvK,MAC1B,cAACwH,GAAD,CACIhwB,OAAQ/F,KAAKvB,MAAMq6B,kBAAkBvK,KACrCvoB,UAAW,WACP,EAAKlH,SAAS,CACVg6B,kBAAmB,CACfvK,MAAM,MAIlBjoB,MAAM,cACNK,iBAAiB,MACjBK,UAAS,uCAAE,WAAOgQ,EAAQof,EAAe1hB,EAAQ8C,EAAS0S,GAA/C,eAAAvqB,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMq6B,kBAAkBJ,SAC9C,EAAK55B,SAAS,CACVg6B,kBAAmB,CACfvK,MAAM,KAJP,SAODmK,EAAS1hB,EAAQof,EAAe1hB,EAAQ8C,EAAS0S,GAPhD,2CAAF,8DASTjjB,SAAU,WACN,EAAKnI,SAAS,CACVg6B,kBAAmB,CACfvK,MAAM,MAIlB6G,MAAOp1B,KAAKvB,MAAM22B,MAClBC,cAAer1B,KAAKvB,MAAMq6B,kBAAkB9hB,OAC5C6d,eAAgB,EAChBl2B,QAASqB,KAAKvB,MAAMq6B,kBAAkBn6B,QACtCq3B,qBAAqB,EACrBC,mBAAmB,EACnBrnB,MAAO5O,KAAKvB,MAAMmQ,QAGzB5O,KAAKvB,MAAMs6B,sBAAsBxK,MAC9B,cAACwJ,GAAD,CACIhyB,OAAQ/F,KAAKvB,MAAMs6B,sBAAsBxK,KACzCvoB,UAAW,WACP,EAAKlH,SAAS,CACVi6B,sBAAuB,CACnBxK,MAAM,MAIlBvnB,UAAS,sBAAE,4BAAArH,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMs6B,sBAAsBL,SAClD,EAAK55B,SAAS,CACVi6B,sBAAuB,CACnBxK,MAAM,KAJP,SAODmK,IAPC,2CASXzxB,SAAU,WACN,EAAKnI,SAAS,CACVi6B,sBAAuB,CACnBxK,MAAM,QAMzBvuB,KAAKvB,MAAMu6B,sBAAsBzK,MAC9B,cAACyJ,GAAD,CACIjyB,OAAQ/F,KAAKvB,MAAMu6B,sBAAsBzK,KACzCvoB,UAAW,WACP,EAAKlH,SAAS,CACVk6B,sBAAuB,CACnBzK,MAAM,MAIlBjoB,MAAK,mBAActG,KAAKvB,MAAMu6B,sBAAsBl1B,OAA/C,KACL6C,iBAAiB,UACjBK,UAAS,uCAAE,WAAOovB,EAAeiE,EAAqBjC,GAA3C,eAAAz4B,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMu6B,sBAAsBN,SAClD,EAAK55B,SAAS,CACVk6B,sBAAuB,CACnBzK,MAAM,KAJP,SAODmK,EAAStC,EAAeiE,EAAqBjC,GAP5C,2CAAF,0DASTnxB,SAAU,WACN,EAAKnI,SAAS,CACVk6B,sBAAuB,CACnBzK,MAAM,MAIlB5c,KAAM3R,KAAKvB,MAAMu6B,sBAAsBrnB,OAI9C3R,KAAKvB,MAAMw6B,uBAAuB1K,MAC/B,cAAC8J,GAAD,CACItyB,OAAQ/F,KAAKvB,MAAMw6B,uBAAuB1K,KAC1CvoB,UAAW,WACP,EAAKlH,SAAS,CACVm6B,uBAAwB,CACpB1K,MAAM,MAIlBjoB,MAAK,oBAAetG,KAAKvB,MAAMw6B,uBAAuBn1B,OAAjD,KACL6C,iBAAiB,WACjBK,UAAS,uCAAE,WAAO0N,GAAP,eAAA/U,EAAA,6DACD+4B,EAAW,EAAKj6B,MAAMw6B,uBAAuBP,SACnD,EAAK55B,SAAS,CACVm6B,uBAAwB,CACpB1K,MAAM,KAJP,SAODmK,EAAShkB,GAPR,2CAAF,sDASTzN,SAAU,WACN,EAAKnI,SAAS,CACVm6B,uBAAwB,CACpB1K,MAAM,MAIlB5vB,QAASqB,KAAKvB,MAAMw6B,uBAAuBt6B,QAC3Ckd,mBAAoB7b,KAAKvB,MAAMw6B,uBAAuB5J,8BACtD11B,SAAU,S,2DAO9B,kDAAAgG,EAAA,+EAWkB6N,QAAQ8sB,IAAI,CAClBre,GAAEjK,MAAMG,oBAAoBnS,KAAKwrB,aACjCvP,GAAEvN,OAAOoG,iCACTmH,GAAEvN,OAAOqG,mCACTkH,GAAE1N,KAAK6E,uBACP6I,GAAErN,MAAMsH,mBACRlW,KAAKvB,MAAMy6B,UAAYjd,GAAEnN,KAAK8H,aAAa,GAAKpJ,QAAQC,aAAQhN,GAChET,KAAKvB,MAAM46B,UAAYpd,GAAEjN,KAAKwJ,YAAY,GAAKhL,QAAQC,aAAQhN,GAC/DT,KAAKvB,MAAM66B,kBAAoBrd,GAAEjN,KAAK0J,yBAAyB,KAAclL,QAAQC,aAAQhN,KAnBzG,OAwBQ,GAxBR,4BAGY8R,EAHZ,KAIY6U,EAJZ,KAKYxL,EALZ,KAMY7I,EANZ,KAOYnE,EAPZ,KAQYwmB,EARZ,KASYpmB,EATZ,KAUYkrB,EAVZ,KAwBYl6B,KAAKvB,MAAMy6B,UAGX,IAFA17B,EAAM,IAAIC,IAED2O,EAAI,EAAGA,EAAIgpB,EAAMh6B,SAAUgR,EAChC5O,EAAI+8B,IAAInF,EAAMhpB,GAAG4K,OAAQoe,EAAMhpB,IAOvCpM,KAAKlB,SAAS,CACVyT,YACA6U,0BACAZ,wBAAyBzT,EAASG,mBAAqBH,EAASC,aAChE4I,gCACAhN,MAAM,2BACCA,GADF,IAEDwN,gBAAiBH,GAAEnf,UAAU8R,MAAMxR,QACnC4V,aAAcD,EAASC,aACvBE,mBAAoBH,EAASG,oBAC1B+I,GAAE1N,KAAK8E,+BAEd+hB,MAAO53B,EACPwR,KAAMhP,KAAKvB,MAAM46B,UAAYrqB,OAAOvO,EACpCy5B,kBAAmBl6B,KAAKvB,MAAM66B,kBAAoBY,OAAoBz5B,IAjDlF,kDAoDQa,QAAQD,MAAR,MApDR,0D,iFAwDA,SAAcm5B,GACVx6B,KAAKlB,SAAS,CACVo6B,WAAYsB,EAAgBzf,GAAkBG,SAAWH,GAAkBG,MAC3Eke,WAAYoB,EAAgBzf,GAAkBI,SAAWJ,GAAkBI,MAC3Eke,WAAYmB,EAAgBzf,GAAkBK,SAAWL,GAAkBK,MAC3Eke,mBAAoBkB,EAAgBzf,GAAkBM,iBAAmBN,GAAkBM,kB,0BAKnG,WAAgB,IAAD,OACL1c,EAAUsd,GAAE/L,QAAQc,mBAAmBhR,KAAKvB,MAAMmQ,MAAM2N,mBACxD4H,EAAQ,GAmBd,OAjBAnkB,KAAKvB,MAAM22B,MAAMjC,SAAQ,SAAArkB,GACrBqV,EAAM5B,KACF,qBAAuBrb,UAAU,aAAjC,SACI,cAAC,GAAD,CACI4H,KAAMA,EACNnQ,QAASA,EACTkd,mBAAoB,EAAKpd,MAAM2oB,wBAC/B3P,IAAK,kBAAM,EAAK8hB,QAAQzqB,EAAKkI,SAC7Be,SAAU,kBAAM,EAAKyhB,aAAa1qB,EAAKkI,SACvCgB,MAAO,kBAAMiE,GAAEnN,KAAKkJ,MAAMlJ,EAAKkI,SAC/BI,oBAAqB,SAACD,EAAQ9F,GAAT,OAAmB4K,GAAEnN,KAAKoI,uBAAuBpI,EAAKkI,OAAQG,EAAQ9F,IAC3FkB,UAAW,EAAK9T,MAAM8T,aATpBzD,EAAKkI,YAehBmN,I,yDAIX,WAAWzP,EAAQuR,EAAa3Q,EAAWukB,GAA3C,eAAAl6B,EAAA,0DACQk6B,EADR,gCAEc5d,GAAEvN,OAAO0G,4BAA4BV,EAAQuR,EAAa3Q,GAFxE,8CAIkB2G,GAAErN,MAAM+H,qBAAqBsF,GAAE5N,QAAQK,OAAO1T,QAAQoC,QAAS6e,GAAE/L,QAAQwB,eAAegD,IAJ1G,oDAKkBuH,GAAEvN,OAAO8G,4BAA4Bd,EAAQuR,EAAa3Q,GAL5E,0CAUcojB,EAVd,+BAAA/4B,EAAA,MAUyB,sBAAAA,EAAA,sEACDsc,GAAErN,MAAM+H,qBAAqBsF,GAAE5N,QAAQK,OAAO1T,QAAQoC,QAAS6e,GAAE/L,QAAQwB,eAAegD,IADvF,iDAEHuH,GAAErN,MAAMyH,gBAFL,uBAKP4F,GAAEvN,OAAO8G,4BAA4Bd,EAAQuR,EAAa3Q,GALnD,2CAVzB,qDAkBQtV,KAAKlB,SAAS,CACV25B,wBAAyB,CACrBlK,MAAM,EACNmK,cArBhB,iD,sIA2BA,mCAAA/4B,EAAA,0DACQK,KAAKvB,MAAMmQ,MAAM6rB,sBADzB,gCAEcxe,GAAErN,MAAMwH,uBAFtB,iCAIapW,KAAKvB,MAAM22B,OAAmC,IAA1Bp1B,KAAKvB,MAAM22B,MAAMzvB,KAJlD,uBAKYrE,QAAQC,IAAI,kBALxB,0BAScm3B,EATd,+BAAA/4B,EAAA,MASyB,WAAOqX,EAAQQ,GAAf,SAAA7X,EAAA,sEACDsc,GAAEnN,KAAK6H,qBAAqB,EAAKlY,MAAMmQ,MAAM4N,qBAD5C,iCAET,EAAK1d,SAAS,CACV65B,sBAAuB,CACnBpK,MAAM,EACNmK,SAAS,WAAD,4BAAE,sBAAA/4B,EAAA,sEACAsc,GAAErN,MAAM2H,cADR,uBAEA0F,GAAEnN,KAAKsH,qBAAqBY,EAAQQ,GAFpC,OAIN,EAAK2hB,cAAcpe,GAAkBG,MAAQH,GAAkBI,OAJzD,2CAAF,kDAAC,MALR,sCAcHc,GAAEnN,KAAKsH,qBAAqBY,EAAQQ,GAdjC,OAgBT,EAAK2hB,cAAcpe,GAAkBG,MAAQH,GAAkBI,OAhBtD,2CATzB,wDA6BQnb,KAAKlB,SAAS,CACV85B,sBAAuB,CACnBrK,MAAM,EACN5vB,QAASsd,GAAE/L,QAAQgB,iBAAiBlR,KAAKvB,MAAMmQ,MAAM2N,mBACrDmc,cAjChB,iD,kHAuCA,WAAcgC,GAAd,sBAAA/6B,EAAA,sDACU+4B,EADV,+BAAA/4B,EAAA,MACqB,WAAOqX,EAAQrD,EAAa+D,EAAcF,EAASG,GAAnD,SAAAhY,EAAA,sEACDsc,GAAEnN,KAAK6H,qBAAqB,EAAKlY,MAAMmQ,MAAM4N,qBAD5C,iCAET,EAAK1d,SAAS,CACV65B,sBAAuB,CACnBpK,MAAM,EACNmK,SAAS,WAAD,4BAAE,sBAAA/4B,EAAA,sEACAsc,GAAErN,MAAM2H,cADR,uBAEA0F,GAAEnN,KAAK2I,IAAIT,EAAQrD,EAAa+D,EAAcF,EAASG,GAFvD,2CAAF,kDAAC,MALR,sCAYHsE,GAAEnN,KAAK2I,IAAIT,EAAQrD,EAAa+D,EAAcF,EAASG,GAZpD,2CADrB,8DAiBI3X,KAAKlB,SAAS,CACVg6B,kBAAmB,CACfvK,MAAM,EACNvX,OAAQ0jB,EACR/7B,QAASsd,GAAE/L,QAAQgB,iBAAiBlR,KAAKvB,MAAMmQ,MAAM2N,mBACrDmc,cAtBZ,gD,wHA2BA,WAAmBgC,GAAnB,sBAAA/6B,EAAA,sDACU+4B,EADV,+BAAA/4B,EAAA,MACqB,WAAOqX,EAAQQ,GAAf,SAAA7X,EAAA,sEACDsc,GAAEnN,KAAK6H,qBAAqB,EAAKlY,MAAMmQ,MAAM4N,qBAD5C,iCAET,EAAK1d,SAAS,CACV65B,sBAAuB,CACnBpK,MAAM,EACNmK,SAAS,WAAD,4BAAE,sBAAA/4B,EAAA,sEACAsc,GAAErN,MAAM2H,cADR,uBAEA0F,GAAEnN,KAAKiJ,SAASf,EAAQQ,GAFxB,2CAAF,kDAAC,MALR,sCAYHyE,GAAEnN,KAAKiJ,SAASf,EAAQQ,GAZrB,2CADrB,wDAiBIxX,KAAKlB,SAAS,CACV+5B,uBAAwB,CACpBtK,MAAM,EACNvX,OAAQ0jB,EACR/7B,QAASsd,GAAE/L,QAAQgB,iBAAiBlR,KAAKvB,MAAMmQ,MAAM2N,mBACrDmc,cAtBZ,gD,uHA2BA,WAAkBiC,EAAgBvL,GAAlC,wBAAAzvB,EAAA,sDACUgS,EAAO3R,KAAKvB,MAAMuQ,KAAK0f,MAAMiM,GAE7BjC,EAHV,+BAAA/4B,EAAA,MAGqB,WAAOy2B,EAAeiE,EAAqBjC,GAA3C,SAAAz4B,EAAA,sEACDsc,GAAEjN,KAAK2H,qBAAqBhF,EAAMymB,GADjC,iCAET,EAAKt5B,SAAS,CACVi6B,sBAAuB,CACnBxK,MAAM,EACNmK,SAAS,WAAD,4BAAE,4BAAA/4B,EAAA,6DACAQ,EAAS6M,GAAqBiP,GAAE9b,OAAQwR,EAAK2C,iBAAmB9F,EAAiBoH,GAAQjE,EAAKC,aAAahD,MAAO,CAAEN,KAAM2N,GAAEzb,UAD5H,SAGAyb,GAAEjN,KAAKuJ,YAAYpY,GAHnB,uBAIA8b,GAAEjN,KAAKqJ,QAAQsiB,EAAgBvE,EAAeiE,EAAqB1oB,GAJnE,2CAAF,kDAAC,MALR,sCAcHsK,GAAEjN,KAAKqJ,QAAQsiB,EAAgBvE,EAAeiE,EAAqB1oB,GAdhE,2CAHrB,0DAqBI3R,KAAKlB,SAAS,CACVk6B,sBAAuB,CACnBzK,MAAM,EACNzqB,OAAQmY,GAAEjN,KAAKiJ,sBAAsBtG,GACrChT,QAASsd,GAAE/L,QAAQ1V,QAAQmX,EAAK0K,cAAe1K,EAAKC,aAAaC,QAAQlY,UACzEy1B,iCACAzd,OACA+mB,cA5BZ,gD,0HAiCA,WAAmBiC,EAAgBtL,GAAnC,wBAAA1vB,EAAA,sDACUgS,EAAO3R,KAAKvB,MAAMuQ,KAAK0f,MAAMiM,GAE7BjC,EAHV,+BAAA/4B,EAAA,MAGqB,WAAO+U,GAAP,eAAA/U,EAAA,6DACPi7B,EAAc3e,GAAE/L,QAAQvU,MAAM+Y,EAAQ,EAAKjW,MAAMuQ,KAAKsJ,YAAYzG,QAAQlY,UADnE,SAEPsiB,GAAEjN,KAAK8J,SAAS6hB,EAAgBC,GAFzB,2CAHrB,sDAQI56B,KAAKlB,SAAS,CACVm6B,uBAAwB,CACpB1K,MAAM,EACNzqB,OAAQmY,GAAEjN,KAAKiJ,sBAAsBtG,GACrChT,QAASsd,GAAE/L,QAAQ1V,QAAQmX,EAAKke,eAAeG,SAAUhwB,KAAKvB,MAAMuQ,KAAKsJ,YAAYzG,QAAQlY,UAC7F01B,gCACAqJ,cAdZ,gD,8DA1zB8Br0B,aAAbi0B,GAKVtvB,aAAe,CAClB+B,cAAUtK,EACV04B,cAAepe,GAAkBG,OAPpBod,GAUV/rB,YAAcnO,E,IClCJy8B,G,kDAGjB,WAAYr8B,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTq8B,WAAW,GAJA,E,4FAQnB,sBAAAn7B,EAAA,sEACcK,KAAKyK,aADnB,kCAEQnJ,QAAQC,IAAI,mCAFpB,gD,6HAMA,WAAyBo4B,GAAzB,SAAAh6B,EAAA,sEACcK,KAAKyK,aADnB,kCAEQnJ,QAAQC,IAAI,oCAFpB,gD,sHAMA,sBAAA5B,EAAA,0DACQK,KAAK2K,eADb,0CAEe,GAFf,UAKI3K,KAAK2K,gBAAiB,EAL1B,UAQY3K,KAAKkJ,QAAQxM,QARzB,oBASgBsD,KAAKkJ,QAAQ5G,SAAUtC,KAAKkJ,QAAQ/I,OATpD,uBAUgB8b,GAAE7N,KAAKpO,KAAKkJ,SAV5B,mBAYuB,GAZvB,iCAiBe,GAjBf,uBAmBQlJ,KAAK2K,gBAAiB,EAnB9B,yE,0EAuBA,WAAU,IAAD,OACCjO,EAAUR,EAAcgE,oBACxB2J,EAAQ3N,EAAcU,SAASF,GAC/ByG,EAAY0G,EAAMvM,KAElB+F,EAAuBwG,EAAMhN,WAAWiH,OAExCi3B,GADyBlxB,EAAMhN,WAAWlD,SACjCuC,EAAcqG,UAAU7F,IAIvC,OACI,sBAAKwK,UAAU,mDAAf,UACI,oBAAIA,UAAU,uBAAd,gCAEA,sBAAKA,UAAU,0DAAf,UACI,sBAAMA,UAAU,4BAAhB,2BACA,+BAAO/D,IAEP,sBAAM+D,UAAU,iCAAhB,0BACA,+BAAO6zB,IAEP,sBAAM7zB,UAAU,iCAAhB,uBACA,+BAAOxK,IAEP,sBAAMwK,UAAU,iCAAhB,8BACA,+BAAO7D,IAEP,sBAAM6D,UAAU,iCAAhB,iCACA,+BAA2B,mBAG9BlH,KAAKkJ,QAAQxK,KAAKO,6BACf,qBAAKiI,UAAU,cAAf,SACI,wBACIK,KAAK,SACLL,UAAU,wCACVM,QAAO,sBAAE,sBAAA7H,EAAA,sEACC,EAAKD,2BADN,2CAHb,wCAYR,qBAAKwH,UAAU,oBAAf,SACI,wBACIQ,WAAUuU,GAAEzb,UAAYR,KAAKvB,MAAMq8B,WACnCvzB,KAAK,SACLL,UAAU,sCACVM,QAAO,sBAAE,8BAAA7H,EAAA,6DACL,EAAKb,SAAS,CACVg8B,WAAW,IAFV,SAKkB/D,MAA6C,6BAA8B,CAC9F71B,OAAQ,OACR81B,QAAS,CACL,eAAgB,oBAGpB5wB,KAAM2zB,KAAKC,UAAU,CACjBgB,GAAI/e,GAAEnf,UAAU8R,MAAMxR,QACtB69B,GAAIhf,GAAEnf,UAAU8R,MAAM9K,OACtBo3B,GAAIjf,GAAEnf,UAAU8R,MAAMjV,SACtBwhC,GAAIlf,GAAEzb,YAfT,cAKC02B,EALD,OAmBL,EAAKp4B,SAAS,CACVg8B,WAAW,IApBV,SAuBY5D,EAASC,OAvBrB,OAuBCiE,EAvBD,OAwBL95B,QAAQC,IAAI65B,GAEZtB,MAAMC,KAAKC,UAAUoB,EAAI,KAAM,MA1B1B,4CAJb,qC,6EAwChB,sCAAAz7B,EAAA,6DACUjD,EAAUR,EAAcgE,oBACxB2J,EAAQ3N,EAAcU,SAASF,GAC/ByG,EAAY0G,EAAMvM,UACGmD,EACrB4C,EAAuBwG,EAAMhN,WAAWiH,OACxCR,EAAyBuG,EAAMhN,WAAWlD,SAC1C4J,EAAU,CAACrH,EAAcqG,UAAU7F,SACf+D,OACTA,EATrB,UAWUT,KAAKkJ,QAAQxK,KAAKgB,yBACpBhD,EACAyG,EATuB1C,UAWvB4C,EACAC,EACAC,EATsB9C,UACTA,WATrB,iD,2DArI8B4D,aCenB,SAASg3B,KACpB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,GAAD,CAAMpC,cAAepe,GAAkBG,UAChE,cAAC,IAAD,CAAOogB,KAAK,QAAQC,QAAS,cAAC,GAAD,CAAMpC,cAAepe,GAAkBG,MAAQH,GAAkBI,UAC9F,cAAC,IAAD,CAAOmgB,KAAK,QAAQC,QAAS,cAAC,GAAD,CAAMpC,cAAepe,GAAkBG,MAAQH,GAAkBK,UAC9F,cAAC,IAAD,CAAOkgB,KAAK,WAAWC,QAAS,cAAC,GAAD,CAAMpC,cAAepe,GAAkBM,kBAEvE,cAAC,IAAD,CAAOigB,KAAK,QAAQC,QAAS,cAAC,GAAD,SC/B1B,SAASC,KACpB,OACI,qBAAKt0B,UAAU,aAAf,SACI,sBAAKA,UAAU,mEAAf,UACI,mBAAGiD,KAAK,6BAA6BC,OAAO,SAA5C,SACI,mBAAGlD,UAAU,oBAEjB,mBAAGiD,KAAK,sBAAsBC,OAAO,SAArC,SACI,mBAAGlD,UAAU,0BFAZ2zB,GACVtuB,YAAcnO,EGyBVq9B,OA1Bf,WACE,OAIE,aAHA,CAGC,IAAD,UACE,sBAAKv0B,UAAU,oCAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,iBAEjB,cAAC,EAAD,UACE,sBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAACmE,EAAD,IACA,cAACgwB,GAAD,OAEF,cAACG,GAAD,eCdGE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB34B,MAAK,YAAkD,IAA/C44B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.046e3c98.chunk.js","sourcesContent":["'use strict';\r\n\r\nvar BN = require('bn.js');\r\nvar numberToBN = require('number-to-bn');\r\n\r\nvar zero = new BN(0);\r\nvar negative1 = new BN(-1);\r\n\r\n/**\r\n * Returns value of unit in Wei\r\n *\r\n * @method getValueOfUnit\r\n * @param {String} unit the unit to convert to, default ether\r\n * @returns {BigNumber} value of the unit (in Wei)\r\n * @throws error if the unit is not correct:w\r\n */\r\nfunction getValueOfUnit(decimals) {\r\n    return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nfunction numberToString(arg) {\r\n    if (typeof arg === 'string') {\r\n        if (!arg.match(/^-?[0-9.]+$/)) {\r\n            throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\r\n        }\r\n        return arg;\r\n    } else if (typeof arg === 'number') {\r\n        return String(arg);\r\n    } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\r\n        if (arg.toPrecision) {\r\n            return String(arg.toPrecision());\r\n        } else {\r\n            // eslint-disable-line\r\n            return arg.toString(10);\r\n        }\r\n    }\r\n    throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\r\n}\r\n\r\nfunction fromWei(weiInput, decimals, optionsInput) {\r\n    var wei = numberToBN(weiInput); // eslint-disable-line\r\n    var negative = wei.lt(zero); // eslint-disable-line\r\n    var base = getValueOfUnit(decimals);\r\n    var baseLength = decimals;\r\n    var options = optionsInput || {};\r\n\r\n    if (negative) {\r\n        wei = wei.mul(negative1);\r\n    }\r\n\r\n    var fraction = wei.mod(base).toString(10); // eslint-disable-line\r\n\r\n    while (fraction.length < baseLength) {\r\n        fraction = '0' + fraction;\r\n    }\r\n\r\n    if (!options.pad) {\r\n        fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\r\n    }\r\n\r\n    var whole = wei.div(base).toString(10); // eslint-disable-line\r\n\r\n    if (options.commify) {\r\n        whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\r\n\r\n    if (negative) {\r\n        value = '-' + value;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction toWei(etherInput, decimals) {\r\n    var ether = numberToString(etherInput); // eslint-disable-line\r\n    var base = getValueOfUnit(decimals);\r\n    var baseLength = decimals;\r\n\r\n    // Is it negative?\r\n    var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\r\n    if (negative) {\r\n        ether = ether.substring(1);\r\n    }\r\n\r\n    if (ether === '.') {\r\n        throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\r\n    }\r\n\r\n    // Split it into a whole and fractional part\r\n    var comps = ether.split('.'); // eslint-disable-line\r\n    if (comps.length > 2) {\r\n        throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\r\n    }\r\n\r\n    var whole = comps[0],\r\n        fraction = comps[1]; // eslint-disable-line\r\n\r\n    if (!whole) {\r\n        whole = '0';\r\n    }\r\n    if (!fraction) {\r\n        fraction = '0';\r\n    }\r\n    if (fraction.length > baseLength) {\r\n        throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\r\n    }\r\n\r\n    while (fraction.length < baseLength) {\r\n        fraction += '0';\r\n    }\r\n\r\n    whole = new BN(whole);\r\n    fraction = new BN(fraction);\r\n    var wei = whole.mul(base).add(fraction); // eslint-disable-line\r\n\r\n    if (negative) {\r\n        wei = wei.mul(negative1);\r\n    }\r\n\r\n    return new BN(wei.toString(10), 10);\r\n}\r\n\r\nmodule.exports = {\r\n    numberToString: numberToString,\r\n    getValueOfUnit: getValueOfUnit,\r\n    fromWei: fromWei,\r\n    toWei: toWei\r\n};","import appsettings from \"./appsettings.json\";\r\n\r\nexport default class Configuration {\r\n    static getProjectName() {\r\n        return appsettings.projectName;\r\n    }\r\n\r\n    static getDefaultChainId() {\r\n        return appsettings.defaultChainId;\r\n    }\r\n\r\n    static getPercentageYieldInvestmentInStablecoin() {\r\n        return parseFloat(appsettings.percentageYieldInvestmentInStablecoin);\r\n    }\r\n\r\n    static getSlippageTolerance() {\r\n        return parseFloat(appsettings.slippageTolerance);\r\n    }\r\n\r\n    static getMoralisApiKey() {\r\n        return appsettings.moralisApiKey;\r\n    }\r\n\r\n    static getChain(chainId) {\r\n        return appsettings.chains[chainId];\r\n    }\r\n\r\n    getChain() { }\r\n\r\n    static getNativeCoin(chainId) {\r\n        return Configuration.getChain(chainId).nativeCoin;\r\n    }\r\n\r\n    static getContracts(chainId) {\r\n        return appsettings.chains[chainId].contracts;\r\n    }\r\n\r\n    getContracts() { }\r\n\r\n    static getNativeToken(chainId) {\r\n        return Configuration.getContracts(chainId).nativeToken;\r\n    }\r\n\r\n    static getStableToken(chainId) {\r\n        return Configuration.getContracts(chainId).stableToken;\r\n    }\r\n\r\n    static getSwapRouters(chainId) {\r\n        return Configuration.getContracts(chainId).swapRouters;\r\n    }\r\n\r\n    static getDefaultSwapRouter(chainId) {\r\n        return Configuration.getContracts(chainId).defaultSwapRouter;\r\n    }\r\n\r\n    getSwapRouters() {\r\n        // In order getSwapRouterName to be able to call the static getSwapRouters a non static getSwapRouters has to be defined.\r\n        // Interesting requirement.\r\n    }\r\n\r\n    static getSwapRouterName(chainId, address) {\r\n        return Configuration.getSwapRouters(chainId)[address].name ?? \"Unknown Router\";\r\n    }\r\n\r\n    static getSwapRouterSwapFee(chainId, address) {\r\n        return parseFloat(Configuration.getSwapRouters(chainId)[address].swapFee);\r\n    }\r\n\r\n    static getChains() {\r\n        const map = new Map();\r\n\r\n        for (const [key, value] of Object.entries(appsettings.chains)) {\r\n            map[parseInt(key)] = value.name;\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    static isSupportedChain(chainId) {\r\n        return Configuration.getChains()[chainId] ? true : false;\r\n    }\r\n\r\n    static getRpcUris() {\r\n        const map = new Map();\r\n\r\n        for (const [key, value] of Object.entries(appsettings.chains)) {\r\n            map[parseInt(key)] = value.rpcUri;\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    static getRpcUri(chainId) {\r\n        return Configuration.getRpcUris()[chainId];\r\n    }\r\n\r\n    static getBlockExplorerLinks() {\r\n        const map = new Map();\r\n\r\n        for (const [key, value] of Object.entries(appsettings.chains)) {\r\n            map[parseInt(key)] = value.blockExplorerLink;\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    getBlockExplorerLinks() { }\r\n\r\n    static getBlockExplorerLink(chainId) {\r\n        return Configuration.getBlockExplorerLinks()[chainId];\r\n    }\r\n\r\n    static getInitialLiquidity(chainId) {\r\n        return Configuration.getChain(chainId).initialLiquidity;\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nimport Configuration from \"../Configuration\";\r\n\r\nexport const WalletContext = React.createContext();\r\n\r\nexport default class WalletProvider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            self: this,\r\n            // account: \"0x0000000000000000000000000000000000000000\",\r\n            balance: 0,\r\n            setBalance: b => {\r\n                this.setState({ balance: b });\r\n            },\r\n        }\r\n\r\n        this.disconnect = this.disconnect.bind(this);\r\n        this.isInjectedProviderInstalled = this.isInjectedProviderInstalled.bind(this);\r\n        this.getProvider = this.getProvider.bind(this);\r\n        this.initializeProvider = this.initializeProvider.bind(this);\r\n        this.initializeWalletConnectProvider = this.initializeWalletConnectProvider.bind(this);\r\n\r\n        this.handleChainChanged = this.handleChainChanged.bind(this);\r\n        this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\r\n        this.handleChainChangedInternal = this.handleChainChangedInternal.bind(this);\r\n        this.handleDisconnect = this.handleDisconnect.bind(this);\r\n\r\n        this.addEthereumChain = this.addEthereumChain.bind(this);\r\n        this.switchOrAddEthereumChain = this.switchOrAddEthereumChain.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i.test(navigator.userAgent);\r\n        this.setState({ isMobileDevice });\r\n\r\n        if (this.isInjectedProviderInstalled()) {\r\n            await this.initializeInjectedProvider();\r\n\r\n            this.setState({\r\n                isInjectedProviderInstalled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isInjectedProviderInstalled: false\r\n            });\r\n\r\n            // Start with the default chain till the wallet connect is initialized.\r\n            this.handleChainChangedInternal(Configuration.getDefaultChainId());\r\n            await this.initializeWalletConnectProvider();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.signer && this.state.signer.givenProvider) {\r\n            this.unsubscribeProvider(this.state.signer.givenProvider);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WalletContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </WalletContext.Provider>\r\n        )\r\n    }\r\n\r\n    disconnect() {\r\n        this.handleDisconnect(410, \"User requested disconnect.\");\r\n\r\n        this.setState({\r\n            account: undefined,\r\n            balance: undefined\r\n        });\r\n    }\r\n\r\n    isInjectedProviderInstalled() {\r\n        return typeof window.ethereum !== \"undefined\" ? true : typeof window.web3 !== \"undefined\";\r\n    }\r\n\r\n    getProvider() {\r\n        if (typeof window.ethereum !== \"undefined\") {\r\n            return window.ethereum;\r\n        }\r\n\r\n        if (typeof window.web3 !== \"undefined\") {\r\n            return window.web3.currentProvider;\r\n        }\r\n\r\n        throw \"Provider not found.\";\r\n    }\r\n\r\n    async initializeProvider(provider) {\r\n        const signer = WalletProvider.createWeb3(provider);\r\n\r\n        this.setState({\r\n            provider: provider,\r\n            signer\r\n        });\r\n\r\n        this.subscribeProvider(provider);\r\n\r\n        const hexChainId = await provider.request({ method: \"eth_chainId\" });\r\n        this.handleChainChanged(hexChainId);\r\n\r\n        // Is already connected?\r\n        let accounts = await provider.request({ method: \"eth_accounts\" });\r\n\r\n        if (accounts.length === 0) {\r\n            try {\r\n                // Connect, MetaMask pop-up windows appears. Internally triggers \"accountsChanged\" event.\r\n                await provider.request({ method: \"eth_requestAccounts\" });\r\n            } catch (error) {\r\n                this.setState({ error });\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            this.handleAccountsChanged(accounts);\r\n        }\r\n    }\r\n\r\n    async initializeInjectedProvider() {\r\n        console.log(\"initializing Injected provider.\");\r\n\r\n        const provider = this.getProvider();\r\n        await this.initializeProvider(provider);\r\n    }\r\n\r\n    async initializeWalletConnectProvider() {\r\n        console.log(\"initializing WalletConnect provider.\");\r\n\r\n        const provider = new WalletConnectProvider({\r\n            rpc: Configuration.getRpcUris(),\r\n            qrcode: true,\r\n        });\r\n\r\n        provider.connector.on(\"display_uri\", (err, payload) => {\r\n            const uri = payload.params[0];\r\n            console.log(`WalletConnect QR code: ${uri}`);\r\n            //CustomQRCodeModal.display(uri);\r\n        });\r\n\r\n        try {\r\n            const accounts = await provider.enable();\r\n\r\n            console.log(accounts);\r\n            console.log(provider.walletMeta.name);\r\n\r\n            await this.initializeProvider(provider);\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    subscribeProvider(provider) {\r\n        if (!provider.on) {\r\n            console.log(\"Provider doesn't support events.\");\r\n            return;\r\n        }\r\n\r\n        provider.on(\"chainChanged\", this.handleChainChanged);\r\n        provider.on(\"accountsChanged\", this.handleAccountsChanged);\r\n        provider.on(\"disconnect\", this.handleDisconnect);\r\n    };\r\n\r\n    unsubscribeProvider(provider) {\r\n        if (!provider.on) {\r\n            console.log(\"Provider doesn't support events.\");\r\n            return;\r\n        }\r\n\r\n        provider.removeListener(\"chainChanged\", this.handleChainChanged);\r\n        provider.removeListener(\"accountsChanged\", this.handleAccountsChanged);\r\n        provider.removeListener(\"disconnect\", this.handleDisconnect);\r\n    }\r\n\r\n    updateReader(chainId) {\r\n        this.setState({\r\n            reader: WalletProvider.createWeb3(Configuration.getRpcUri(chainId))\r\n        });\r\n    }\r\n\r\n    handleChainChangedInternal(chainId) {\r\n        this.setState({\r\n            error: undefined,\r\n            chainId\r\n        });\r\n\r\n        if (!Configuration.isSupportedChain(chainId)) {\r\n            this.setState({\r\n                error: `Unsupported chain: ${chainId}`,\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.updateReader(chainId);\r\n    }\r\n\r\n    handleChainChanged(hexChainId) {\r\n        const chainId = Web3.utils.hexToNumber(hexChainId);\r\n        console.log(`chainChanged: ${chainId}`);\r\n        this.handleChainChangedInternal(chainId);\r\n    }\r\n\r\n    handleAccountsChanged(accounts) {\r\n        console.log(`accountsChanged: ${accounts.length}`);\r\n\r\n        if (accounts.length === 0) {\r\n            this.setState({\r\n                error: undefined,\r\n                connected: false,\r\n                account: undefined\r\n            });\r\n            // MetaMask is locked or the user has not connected any accounts\r\n            console.log(\"Please connect to MetaMask.\");\r\n        } else {\r\n            this.setState({\r\n                error: undefined,\r\n                connected: true,\r\n                account: accounts[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDisconnect(code, reason) {\r\n        console.log({ source: \"Disconnect handler.\", code, reason });\r\n\r\n        if (this.state.signer && this.state.signer.currentProvider) {\r\n            if (this.state.signer.currentProvider instanceof WalletConnectProvider) {\r\n                this.setState({\r\n                    signer: undefined\r\n                });\r\n                this.handleAccountsChanged([]);\r\n            } else {\r\n                if (this.state.signer.currentProvider.connected && this.state.signer.currentProvider.close) {\r\n                    this.state.signer.currentProvider.close()\r\n                        .then(() => {\r\n                            this.setState({\r\n                                signer: undefined\r\n                            })\r\n                            this.handleAccountsChanged([]);\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(\"Wallet close failed.\");\r\n                            console.log(error);\r\n                        });\r\n                } else {\r\n                    this.setState({\r\n                        signer: undefined\r\n                    })\r\n                    this.handleAccountsChanged([]);\r\n                }\r\n            }\r\n        } else {\r\n            this.setState({\r\n                signer: undefined\r\n            });\r\n            this.handleAccountsChanged([]);\r\n        }\r\n    }\r\n\r\n    async addEthereumChain(chainId, chainName, nativeCurrencyName, nativeCurrencySymbol, nativeCurrencyDecimals, rpcUrls, blockExplorerUrls, iconUrls) {\r\n        if (!this.state.provider) {\r\n            console.log(\"Provider not set.\");\r\n            return;\r\n        }\r\n\r\n        if (!Web3.utils.isHex(chainId)) {\r\n            chainId = Web3.utils.numberToHex(chainId);\r\n        }\r\n\r\n        const p = {\r\n            chainId: chainId,\r\n            chainName: chainName,\r\n            nativeCurrency: {\r\n                name: nativeCurrencyName,\r\n                symbol: nativeCurrencySymbol,\r\n                decimals: nativeCurrencyDecimals\r\n            },\r\n            rpcUrls: rpcUrls,\r\n            blockExplorerUrls: blockExplorerUrls,\r\n            iconUrls: iconUrls\r\n        };\r\n\r\n        // Returns null - The method returns null if the request was successful, and an error otherwise.\r\n        return this.state.provider.request({ method: \"wallet_addEthereumChain\", params: [p] });\r\n    }\r\n\r\n    async switchOrAddEthereumChain(chainId, chainName, nativeCurrencyName, nativeCurrencySymbol, nativeCurrencyDecimals, rpcUrls, blockExplorerUrls, iconUrls) {\r\n        if (!this.state.provider) {\r\n            console.log(\"Provider not set.\");\r\n            return;\r\n        }\r\n\r\n        if (!Web3.utils.isHexStrict(chainId)) {\r\n            chainId = Web3.utils.numberToHex(chainId);\r\n        }\r\n\r\n        console.log(`Switching to chain: ${chainId}`);\r\n\r\n        try {\r\n            await this.state.provider.request({\r\n                method: \"wallet_switchEthereumChain\",\r\n                params: [{ chainId: chainId }],\r\n            });\r\n        } catch (switchError) {\r\n            if (switchError.code === 4902/*For desktop MM*/ || switchError.code === -32603/*For iPhone MM*/) {\r\n                console.log(`Non-existent chain: ${chainId}. Trying to add.`);\r\n\r\n                try {\r\n                    await this.addEthereumChain(chainId, chainName, nativeCurrencyName, nativeCurrencySymbol, nativeCurrencyDecimals, rpcUrls, blockExplorerUrls, iconUrls);\r\n                } catch (addError) {\r\n                    this.setState({ error: addError.message });\r\n                    console.error(addError);\r\n                }\r\n            } else {\r\n                this.setState({ error: switchError.message });\r\n                console.error(switchError);\r\n            }\r\n        }\r\n    }\r\n\r\n    static createWeb3(provider) {\r\n        const web3 = new Web3(provider);\r\n\r\n        web3.eth.extend({\r\n            methods: [\r\n                {\r\n                    name: \"chainId\",\r\n                    call: \"eth_chainId\",\r\n                    outputFormatter: web3.utils.hexToNumber\r\n                }\r\n            ]\r\n        });\r\n\r\n        return web3;\r\n    }\r\n}\r\n","export function formatAccount(value) {\r\n    return `${value.substring(0, 6)}...${value.substring(value.length - 4)}`;\r\n}\r\n\r\nexport function formatDateTime(date) {\r\n    const parts = new Date(date).toISOString().split(\"T\");\r\n    return `${parts[0]} ${parts[1]}`;\r\n    // .toLocaleString(undefined, {\r\n    //     year: 'numeric',\r\n    //     month: '2-digit',\r\n    //     day: '2-digit',\r\n    //     hour: '2-digit',\r\n    //     hour12: false,\r\n    //     minute: '2-digit',\r\n    //     second: '2-digit'\r\n    // });\r\n}\r\n\r\nexport function formatTimespan(timespan) {\r\n    const h = parseInt(timespan / 3600);\r\n    const r = timespan % 3600;\r\n    const m = parseInt(r / 60);\r\n    const s = parseInt(r % 60);\r\n\r\n    const hh = h < 10 ? `0${h}` : `${h}`;\r\n    const mm = m < 10 ? `0${m}` : `${m}`;\r\n    const ss = s < 10 ? `0${s}` : `${s}`;\r\n\r\n    return `${hh}:${mm}:${ss}`;\r\n}\r\n\r\nfunction formatFloat(value) {\r\n    const parts = value.split(\".\");\r\n\r\n    return (\r\n        <span className=\"number\">\r\n            <span className=\"integer\">\r\n                {parts[0]}\r\n            </span>\r\n            {parts[1] &&\r\n                <span className=\"decimal\">\r\n                    .{parts[1]}\r\n                </span>\r\n            }\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction formatNumber(number, maxDecimals = 2, minDecimals = 0) {\r\n    const result = new Intl.NumberFormat([], {\r\n        maximumFractionDigits: maxDecimals,\r\n        minimumFractionDigits: minDecimals\r\n    }).format(number);\r\n\r\n    return result;\r\n}\r\n\r\nexport function formatInteger(number) {\r\n    return formatNumber(number, 0);\r\n}\r\n\r\nexport function formatPercentage(number, maxDecimals = 2, minDecimals = 0) {\r\n    console.assert(typeof number === \"number\", \"The 'number' is not of numeric type.\");\r\n    return formatNumberScaled(number * 100, maxDecimals, minDecimals);\r\n}\r\n\r\nexport function formatNumberScaled(number, maxDecimals = 2, minDecimals = 0) {\r\n    console.assert(typeof number === \"number\", \"The 'number' is not of numeric type.\");\r\n\r\n    if (number === 0)\r\n        return `${number}`;\r\n\r\n    if (number >= 10000) {\r\n        return formatNumber(number, Math.min(0, maxDecimals), 0);\r\n    }\r\n\r\n    if (number >= 1000) {\r\n        return formatNumber(number, Math.min(1, maxDecimals), 0);\r\n    }\r\n\r\n    if (number >= 100) {\r\n        return formatNumber(number, Math.min(2, maxDecimals), 0);\r\n    }\r\n\r\n    return formatNumber(number, maxDecimals, minDecimals);\r\n}\r\n\r\nexport function formatCurrency(number, currencyDecimals, maxDecimals = 4, minDecimals = 0) {\r\n    return formatNumberScaled(number, Math.min(currencyDecimals, maxDecimals), Math.min(currencyDecimals, minDecimals));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dialog } from \"@headlessui/react\";\r\n\r\nexport default class ModalDialog extends Component {\r\n    static propTypes = {\r\n        disableBackgroundCancel: PropTypes.bool,\r\n        size: PropTypes.string,\r\n        isVerticallyCentered: PropTypes.bool,\r\n        isScrollable: PropTypes.bool,\r\n        fullscreen: PropTypes.string,\r\n        contentStyle: PropTypes.string,\r\n        isOpen: PropTypes.bool,\r\n        setIsOpen: PropTypes.func,\r\n        header: PropTypes.object,\r\n        body: PropTypes.object,\r\n        footer: PropTypes.object,\r\n        title: PropTypes.string,\r\n        hideTitle: PropTypes.bool,\r\n        info: PropTypes.object,\r\n        hideCloseButton: PropTypes.bool,\r\n        description: PropTypes.string,\r\n        submitButtonText: PropTypes.string,\r\n        hideSubmitButton: PropTypes.bool,\r\n        isSubmitButtonDisabled: PropTypes.bool,\r\n        cancelButtonText: PropTypes.string,\r\n        hideCancelButton: PropTypes.bool,\r\n        submitted: PropTypes.func,\r\n        canceled: PropTypes.func,\r\n        result: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disableBackgroundCancel: false,\r\n        isVerticallyCentered: true,\r\n        isScrollable: true,\r\n        fullscreen: null,\r\n        contentStyle: \"card relative w-full max-w-md max-h-screen overflow-y-auto mx-auto bg-violet-50 text-gray-900\",\r\n        isOpen: false,\r\n        setIsOpen: value => {\r\n\r\n        },\r\n        hideTitle: false,\r\n        hideCloseButton: false,\r\n        submitButtonText: \"OK\",\r\n        hideSubmitButton: false,\r\n        isSubmitButtonDisabled: false,\r\n        cancelButtonText: \"Cancel\",\r\n        hideCancelButton: false,\r\n        submitted: async () => {\r\n        },\r\n        canceled: async () => {\r\n        },\r\n        result: async value => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            style: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { size, isVerticallyCentered, isScrollable, fullscreen } = this.props;\r\n\r\n        let style = \"text-dark\";\r\n\r\n        if (size) {\r\n            style += ` ${size}`;\r\n        }\r\n\r\n        if (isVerticallyCentered === true) {\r\n            style += \" modal-dialog-centered\";\r\n        }\r\n\r\n        if (isScrollable === true) {\r\n            style += \" modal-dialog-scrollable\";\r\n        }\r\n\r\n        if (fullscreen) {\r\n            style += ` ${fullscreen}`;\r\n        }\r\n\r\n        this.setState({ style });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isOpen,\r\n            setIsOpen,\r\n            disableBackgroundCancel,\r\n            contentStyle,\r\n            header,\r\n            body,\r\n            footer,\r\n            title,\r\n            hideTitle,\r\n            info,\r\n            hideCloseButton,\r\n            description,\r\n            submitButtonText,\r\n            hideSubmitButton,\r\n            isSubmitButtonDisabled,\r\n            cancelButtonText,\r\n            hideCancelButton,\r\n            submitted,\r\n            canceled,\r\n            result\r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n                open={isOpen}\r\n                onClose={() => {\r\n                    if (!disableBackgroundCancel) {\r\n                        setIsOpen(false);\r\n                    }\r\n                }}\r\n            >\r\n                <div className=\"flex items-center justify-center min-h-screen text-[16px]\">\r\n                    <Dialog.Overlay className=\"fixed inset-0 bg-black/50\" />\r\n\r\n                    <div className={`modal-content ${contentStyle} bg-gradient-to-r to-indigo-200 from-purple-200`}>\r\n                        {(header || !hideTitle || !hideCloseButton) &&\r\n                            <div className=\"modal-header grid grid-cols-1 gap-x-2 gap-y-3\">\r\n                                {header\r\n                                    ? { header }\r\n                                    : <div className=\"flex items-center justify-between\">\r\n                                        {!hideTitle &&\r\n                                            <Dialog.Title key=\"0\" className=\"\">\r\n                                                {title}\r\n                                            </Dialog.Title>\r\n                                        }\r\n                                        <div className=\"space-x-2\">\r\n                                            {info &&\r\n                                                <button key=\"1\" type=\"button\" className=\"btn text-[2em] leading-none shadow-none btn-close\" aria-label=\"Info\">\r\n                                                    {info}\r\n                                                </button>\r\n                                            }\r\n                                            {!hideCloseButton &&\r\n                                                <button key=\"2\" type=\"button\" className=\"btn text-[2em] leading-none shadow-none btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={async () => {\r\n                                                    await canceled();\r\n\r\n                                                    if (result) {\r\n                                                        result(false);\r\n                                                    }\r\n                                                }}>\r\n                                                    <i className=\"bi bi-x\" />\r\n                                                </button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n\r\n                        {description &&\r\n                            <Dialog.Description className=\"mt-3\">\r\n                                {description}\r\n                            </Dialog.Description>\r\n                        }\r\n\r\n                        <div className=\"modal-body mt-3\">\r\n                            {body}\r\n                        </div>\r\n\r\n                        {(footer || !hideSubmitButton || !hideCancelButton) &&\r\n                            <div className=\"modal-footer mt-8\">\r\n                                {footer\r\n                                    ? { footer }\r\n                                    : <div className=\"flex items-center justify-end space-x-2 text-violet-50 text-[80%]\">\r\n                                        {!hideSubmitButton &&\r\n                                            <button key=\"0\" type=\"button\" className=\"btn btn-green w-28 h-10\" onClick={async () => {\r\n                                                try {\r\n                                                    await submitted();\r\n                                                    console.log(\"Operation succeeded.\");\r\n\r\n                                                    if (result) {\r\n                                                        result(true);\r\n                                                    }\r\n                                                } catch (error) {\r\n                                                    console.error(\"Operation failed.\", error);\r\n\r\n                                                    if (result) {\r\n                                                        result({ error });\r\n                                                    }\r\n                                                }\r\n                                            }} disabled={isSubmitButtonDisabled}>\r\n                                                {submitButtonText}\r\n                                            </button>\r\n                                        }\r\n                                        {!hideCancelButton &&\r\n                                            <button key=\"1\" type=\"button\" className=\"btn btn-dark w-28 h-10\" data-bs-dismiss=\"modal\" aria-label=\"Cancel\" onClick={async () => {\r\n                                                await canceled();\r\n\r\n                                                if (result) {\r\n                                                    result(false);\r\n                                                }\r\n                                            }}>\r\n                                                {cancelButtonText}\r\n                                            </button>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TitleText({\r\n    title,\r\n    titleClassName,\r\n}) {\r\n    return (\r\n        <>\r\n            <span className={`opacity-50 uppercase tracking-wider overflow-ellipsis break-normal text-[0.6875em] ${titleClassName ?? \"\"}`}>\r\n                {title}\r\n            </span>\r\n        </>\r\n    );\r\n}\r\n\r\nTitleText.defaultProps = {\r\n};\r\n\r\nexport function MainText({\r\n    main,\r\n    mainClassName,\r\n    mainUnit,\r\n    mainUnitClassName,\r\n    isUnitOnTop\r\n}) {\r\n    return isUnitOnTop\r\n        ? (\r\n            <>\r\n                {mainUnit &&\r\n                    <span className={`uppercase block mb-1 opacity-75 text-[0.75em] ${mainUnitClassName ?? \"\"}`}>\r\n                        {mainUnit}\r\n                    </span>\r\n                }\r\n                {main &&\r\n                    <span className={`numeric text-[1.4em] ${mainClassName ?? \"\"}`}>\r\n                        {main}\r\n                    </span>\r\n                }\r\n            </>\r\n        )\r\n        : (\r\n            <>\r\n                {main &&\r\n                    <span className={`numeric text-[1.4em] ${mainClassName ?? \"\"}`}>\r\n                        {main}\r\n                    </span>\r\n                }\r\n                {mainUnit &&\r\n                    <span className={`uppercase ml-1 opacity-75 text-[0.75em] ${mainUnitClassName ?? \"\"}`}>\r\n                        {mainUnit}\r\n                    </span>\r\n                }\r\n            </>\r\n        );\r\n}\r\n\r\nMainText.defaultProps = {\r\n    isUnitOnTop: false\r\n};\r\n\r\nexport function DetailText({\r\n    detail,\r\n    detailClassName,\r\n    detailUnit,\r\n    detailUnitClassName\r\n}) {\r\n    return (\r\n        <>\r\n            {detail &&\r\n                <span className={`numeric opacity-75 text-[0.75em] ${detailClassName ?? \"\"}`}>\r\n                    {detail}\r\n                </span>\r\n            }\r\n            {detailUnit &&\r\n                <span className={`uppercase ml-1 opacity-50 text-[0.625em] ${detailUnitClassName ?? \"\"}`}>\r\n                    {detailUnit}\r\n                </span>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nDetailText.defaultProps = {\r\n};\r\n\r\nexport function InfoText({\r\n    info,\r\n    infoClassName\r\n}) {\r\n    return (\r\n        <>\r\n            {info &&\r\n                <div className={`numeric mt-2 text-[0.75em] ${infoClassName ?? \"\"}`}>\r\n                    {info}\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nInfoText.defaultProps = {\r\n    infoClassName: \"opacity-25\"\r\n};\r\n\r\nfunction InfoBox({\r\n    containerClassName,\r\n    lineHeight,\r\n    title,\r\n    titleClassName,\r\n    main,\r\n    detail,\r\n    info\r\n}) {\r\n    return (\r\n        <div className={`grid grid-cols-1 auto-rows-min text-center ${lineHeight ?? \"\"} ${containerClassName ?? \"\"}`}>\r\n            <TitleText title={title} titleClassName={titleClassName} />\r\n            {main && <>{main}</>}\r\n            {detail && <>{detail}</>}\r\n            {info && <>{info}</>}\r\n        </div>\r\n    );\r\n}\r\n\r\nInfoBox.defaultProps = {\r\n};\r\n\r\nexport function PriceBox({\r\n    containerClassName,\r\n    lineHeight,\r\n    title,\r\n    titleClassName,\r\n    mainRaw,\r\n    main,\r\n    mainClassName,\r\n    mainUnit,\r\n    mainUnitClassName,\r\n    isMainUnitOnTop,\r\n    detail,\r\n    detailClassName,\r\n    detailUnit,\r\n    detailUnitClassName,\r\n    info,\r\n    infoClassName\r\n}) {\r\n    return <InfoBox\r\n        containerClassName={containerClassName}\r\n        lineHeight={lineHeight}\r\n        title={title}\r\n        titleClassName={titleClassName}\r\n        main={mainRaw\r\n            ? <>{mainRaw}</>\r\n            : (main || mainUnit) &&\r\n            <div className=\"mt-2\">\r\n                <MainText\r\n                    main={main}\r\n                    mainClassName={mainClassName}\r\n                    mainUnit={mainUnit}\r\n                    mainUnitClassName={mainUnitClassName}\r\n                    isUnitOnTop={isMainUnitOnTop}\r\n                />\r\n            </div>}\r\n        detail={(detail || detailUnit) &&\r\n            <div className=\"mt-1\">\r\n                <DetailText\r\n                    detail={detail}\r\n                    detailClassName={detailClassName}\r\n                    detailUnit={detailUnit}\r\n                    detailUnitClassName={detailUnitClassName}\r\n                />\r\n            </div>\r\n        }\r\n        info={(\r\n            <InfoText info={info} infoClassName={infoClassName} />\r\n        )}\r\n    />;\r\n}\r\n\r\nPriceBox.defaultProps = {\r\n    lineHeight: \"leading-none\",\r\n    infoClassName: \"opacity-25\",\r\n    isMainUnitOnTop: false\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\nimport { formatAccount, formatCurrency } from \"../../../utils/Format\";\r\n\r\nimport { PriceBox } from \"../../InfoBox\";\r\n\r\nimport QRCode from \"qrcode\";\r\n\r\nexport default function WalletDialog({ isOpen, setIsOpen, context, canceled }) {\r\n    const [qrCode, setQrCode] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!context.account) {\r\n            setQrCode(undefined);\r\n            return;\r\n        }\r\n\r\n        QRCode.toDataURL(context.account, {\r\n            color: {\r\n                dark: \"#312e81\",\r\n                light: \"#0000\" // Transparent background\r\n            }\r\n        })\r\n            .then(url => {\r\n                setQrCode(url);\r\n                console.log(url);\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    }, [context.account]);\r\n\r\n    const chain = Configuration.getChain(context.chainId);\r\n    const nativeCoin = Configuration.getNativeCoin(context.chainId);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={\r\n                <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 items-center justify-center text-indigo-900\">\r\n                    {context.account &&\r\n                        <>\r\n                            <PriceBox\r\n                                containerClassName=\"col-span-2\"\r\n                                title=\"Connected Account\"\r\n                                main={context.account}\r\n                                mainClassName=\"numeric break-all\"\r\n                            />\r\n                            <img className=\"col-span-2 mx-auto\" src={qrCode} />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-indigo-right h-10 w-48 text-violet-50 text-[0.75em] justify-self-end\"\r\n                                onClick={async () => {\r\n                                    try {\r\n                                        await navigator.clipboard.writeText(context.account);\r\n                                        console.log(\"The wallet address is copied.\");\r\n                                    } catch (error) {\r\n                                        console.error(\"Failed to copy the wallet address: \", error);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <i className=\"bi bi-clipboard mr-1\" />Copy\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-indigo h-10 w-48 text-violet-50 text-[0.75em] justify-self-start\"\r\n                                onClick={() => {\r\n                                    context.self.disconnect();\r\n                                    setIsOpen(false);\r\n                                }}\r\n                            >\r\n                                Disconnect\r\n                            </button>\r\n                            <PriceBox\r\n                                title=\"Chain Id\"\r\n                                main={context.chainId}\r\n                                mainClassName=\"numeric\"\r\n                                detail={chain.name}\r\n                                detailClassName=\"font-display\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Balance\"\r\n                                main={formatCurrency(context.balance, nativeCoin.decimals)}\r\n                                mainUnit={nativeCoin.symbol}\r\n                                detail=\"&nbsp;\"\r\n                            />\r\n                            \r\n                            {/*\r\n                            <PriceBox\r\n                                title=\"Injected Provider\"\r\n                                main={context.isInjectedProviderInstalled ? \"Yes\" : \"No\"}\r\n                                detail={context.provider.isMetaMask ? \"MetaMask\" : context.provider?.walletMeta?.name ?? \"Unknown\"}\r\n                                detailClassName=\"font-display\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Web3 Version\"\r\n                                main={context.signer.version}\r\n                                mainClassName=\"numeric\"\r\n                                detail=\"&nbsp;\"\r\n                            />\r\n                            */}\r\n                        </>\r\n                    }\r\n                </div>\r\n            }\r\n            title=\"Wallet Info\"\r\n            hideSubmitButton={true}\r\n            cancelButtonText=\"Close\"\r\n            canceled={canceled}\r\n        />\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\nimport { formatAccount, formatCurrency } from \"../../../utils/Format\";\r\n\r\nimport { PriceBox } from \"../../InfoBox\";\r\n\r\nexport default function ConnectDialog({ isOpen, setIsOpen, context, canceled }) {\r\n    const chain = Configuration.getChain(context.chainId);\r\n    const nativeCoin = Configuration.getNativeCoin(context.chainId);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={\r\n                <div className=\"grid grid-cols-1 gap-x-4 gap-y-4 items-center justify-center text-indigo-900\">\r\n                    {context.self.isInjectedProviderInstalled()\r\n                        ?\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-red h-16 w-full text-violet-50 text-[0.75em]\"\r\n                            onClick={async () => {\r\n                                context.self.initializeInjectedProvider();\r\n                                setIsOpen(false);\r\n                            }}\r\n                        >\r\n                            Use Injected Provider\r\n                        </button>\r\n                        : <div className=\"h-16 w-full text-violet-900 text-center\">\r\n                            <p>\r\n                                <b>No injected provider found.</b>\r\n                            </p>\r\n                            <a href=\"https://metamask.io/download/\" target=\"_blank\">Install MetaMask <i className=\"bi bi-box-arrow-up-right\" /></a>\r\n                        </div>\r\n                    }\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-blue h-16 w-full text-violet-50 text-[0.75em]\"\r\n                        onClick={() => {\r\n                            context.self.initializeWalletConnectProvider();\r\n                            setIsOpen(false);\r\n                        }}\r\n                    >\r\n                        Use Wallet Connect Provider\r\n                    </button>\r\n                </div>\r\n            }\r\n            title=\"Connect to Wallet\"\r\n            hideSubmitButton={true}\r\n            cancelButtonText=\"Close\"\r\n            canceled={canceled}\r\n        />\r\n    );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../Configuration\";\r\n\r\nimport { WalletContext } from \"../contexts/WalletContext\";\r\n\r\nimport { fromWei } from \"../utils/Web3Converter\";\r\nimport { formatAccount, formatCurrency } from \"../utils/Format\";\r\n\r\nimport WalletDialog from \"./dapp/dialogs/WalletDialog\";\r\nimport ConnectDialog from \"./dapp/dialogs/ConnectDialog\";\r\n\r\nexport default class Wallet extends Component {\r\n    static propTypes = {\r\n        interval: PropTypes.number,\r\n    };\r\n\r\n    static defaultProps = {\r\n        interval: 1000,\r\n    };\r\n\r\n    static contextType = WalletContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            balance: undefined,\r\n            showWalletDialog: false,\r\n            showConnectDialog: false,\r\n        };\r\n\r\n        this.onTick = this.onTick.bind(this);\r\n        this.switchOrAddEthereumChain = this.switchOrAddEthereumChain.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (!this.context.chainId) {\r\n                return false;\r\n            } else if (!Configuration.isSupportedChain(this.context.chainId)) {\r\n                this.switchOrAddEthereumChain();\r\n                return false;\r\n            }\r\n\r\n            if (this.context.account && this.context.reader) {\r\n                if (!this.timerId) {\r\n                    this.startTimer();\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        this.timerId = setInterval(\r\n            async () => await this.onTick(),\r\n            this.props.interval\r\n        );\r\n        console.log(`Started timer: ${this.timerId}`);\r\n    }\r\n\r\n    stopTimer() {\r\n        const timerId = this.timerId;\r\n\r\n        if (timerId) {\r\n            clearInterval(timerId);\r\n            this.timerId = undefined;\r\n\r\n            console.log(`Stopped timer: ${timerId}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.context.connected && !this.context.error) {\r\n            return (\r\n                <Fragment key={0}>\r\n                    <div className=\"flex items-center\">\r\n                        <div className=\"rounded bg-gray-100/10 px-1 text-[0.875em]\">\r\n                            <span\r\n                                className=\"cursor-pointer\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        showConnectDialog: true,\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Connect to Wallet\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.state.showConnectDialog && (\r\n                        <ConnectDialog\r\n                            isOpen={this.state.showConnectDialog}\r\n                            setIsOpen={() => {\r\n                                this.setState({\r\n                                    showConnectDialog: false,\r\n                                });\r\n                            }}\r\n                            context={this.context}\r\n                            canceled={() => {\r\n                                this.setState({\r\n                                    showConnectDialog: false,\r\n                                });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        } else if (this.context.error) {\r\n            return (\r\n                <Fragment key={1}>\r\n                    <div className=\"flex items-center\">\r\n                        <div className=\"rounded bg-gray-100/10 px-1 text-[0.875em]\">\r\n                            <span className=\"text-red-500\">\r\n                                {this.context.error.code === -32002\r\n                                    ? \"Approve the chain switch\"\r\n                                    : this.context.error\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            if (!this.context.chainId || !Configuration.isSupportedChain(this.context.chainId)) {\r\n                return (\r\n                    <Fragment key={2}>\r\n                        <span className=\"text-red-500\">Unsupported chain.</span>\r\n                    </Fragment>\r\n                );\r\n            }\r\n\r\n            const nativeCoin = Configuration.getNativeCoin(this.context.chainId);\r\n            const chain = Configuration.getChain(this.context.chainId);\r\n\r\n            return (\r\n                <Fragment key={3}>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"hidden rounded bg-gray-100/10 px-1 py-0.5 text-[0.875em] xl:block\">\r\n                            <span>{chain.name}</span>\r\n                        </div>\r\n                        <div className=\"xs:block hidden rounded bg-gray-100/10 px-1 py-0.5 text-[0.875em]\">\r\n                            <div>\r\n                                <span className=\"numeric\">\r\n                                    {this.state.balance\r\n                                        ? formatCurrency(this.state.balance, nativeCoin.decimals)\r\n                                        : \"-\"\r\n                                    }\r\n                                </span>\r\n                                <span className=\"numeric-unit text-[0.75em]\">\r\n                                    {nativeCoin.symbol}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {this.context.account &&\r\n                            <div className=\"cursor-pointer rounded bg-gray-100/[0.15] px-1 py-0.5 text-[0.875em]\">\r\n                                <span\r\n                                    className=\"numeric\"\r\n                                    onClick={async () => {\r\n                                        this.setState({\r\n                                            showWalletDialog: true,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {formatAccount(this.context.account)}\r\n                                </span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {this.state.showWalletDialog && (\r\n                        <WalletDialog\r\n                            isOpen={this.state.showWalletDialog}\r\n                            setIsOpen={() => {\r\n                                this.setState({\r\n                                    showWalletDialog: false,\r\n                                });\r\n                            }}\r\n                            context={this.context}\r\n                            canceled={() => {\r\n                                this.setState({\r\n                                    showWalletDialog: false,\r\n                                });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    async onTick() {\r\n        if (this.context.chainId && Configuration.isSupportedChain(this.context.chainId) && this.context.account) {\r\n            const result = await this.context.reader.eth.getBalance(this.context.account);\r\n            const nativeCoin = Configuration.getNativeCoin(this.context.chainId);\r\n            const balance = parseFloat(fromWei(result, nativeCoin.decimals));\r\n\r\n            this.context.setBalance(balance);\r\n            this.setState({ balance });\r\n        }\r\n    }\r\n\r\n    async switchOrAddEthereumChain() {\r\n        const chainId = Configuration.getDefaultChainId();\r\n        const chain = Configuration.getChain(chainId);\r\n        const chainName = chain.name;\r\n        const nativeCurrencyName = undefined;\r\n        const nativeCurrencySymbol = chain.nativeCoin.symbol;\r\n        const nativeCurrencyDecimals = chain.nativeCoin.decimals;\r\n        const rpcUrls = [Configuration.getRpcUri(chainId)];\r\n        const blockExplorerUrls = undefined;\r\n        const iconUrls = undefined;\r\n\r\n        await this.context.self.switchOrAddEthereumChain(\r\n            chainId,\r\n            chainName,\r\n            nativeCurrencyName,\r\n            nativeCurrencySymbol,\r\n            nativeCurrencyDecimals,\r\n            rpcUrls,\r\n            blockExplorerUrls,\r\n            iconUrls\r\n        );\r\n    }\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Links() {\r\n  return (\r\n    <>\r\n      <NavLink className=\"nav-link\" to=\"/\" activeclassname=\"active\">Home</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Games\" activeclassname=\"active\">Games</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Farms\" activeclassname=\"active\">Farms</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Observer\" activeclassname=\"active\">Observer</NavLink>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport Wallet from \"./Wallet\";\r\nimport Links from \"./Links\";\r\n\r\nexport default function Navbar() {\r\n    const [isNavbarCollapsed, setIsNavbarCollapsed] = useState(true);\r\n\r\n    function toggleNavbar() {\r\n        setIsNavbarCollapsed(!isNavbarCollapsed);\r\n    }\r\n\r\n    function getRoot(uri) {\r\n        const index = uri.indexOf(\"//\");\r\n\r\n        if (index == -1) {\r\n            return undefined;\r\n        }\r\n\r\n        let result = uri.substring(0, index + 2);\r\n        const right = uri.substring(index + 2);\r\n        const parts = right.split(\".\");\r\n\r\n        if (parts.length < 2) {\r\n            return uri;\r\n        }\r\n\r\n        let delimiter = \"\";\r\n\r\n        for (let i = parts.length - 2; i < parts.length; i++) {\r\n            result += delimiter;\r\n            result += parts[i];\r\n            delimiter = \".\";\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"flex h-[64px] items-center justify-between\">\r\n                <div className=\"flex items-center lg:space-x-16\">\r\n                    <Link className=\"navbar-brand flex items-center gap-2\" to=\"/\">\r\n                        {/* <div className=\"bg-weeb-logo hidden h-[1200px] max-h-[64px] w-[1200px] max-w-[64px] bg-left-top bg-no-repeat sm:inline-block\"></div>\r\n                        <div className=\"bg-weeb-text h-[464px] max-h-[48px] w-[908px] max-w-[94px] bg-left-top bg-no-repeat\"></div> */}\r\n\r\n                        <div className=\"bg-weeb-logo hidden max-h-[43px] max-w-[43px] h-[43px] w-[43px] bg-left-top bg-no-repeat sm:inline-block\"></div>\r\n                        <div className=\"bg-weeb-text h-[52px] max-h-[52px] w-[102px] max-w-[102px] bg-left-top bg-no-repeat self-end\"></div>\r\n                    </Link>\r\n                    <div className=\"hidden lg:flex lg:space-x-4\">\r\n                        <Links />\r\n                        <NavLink className=\"nav-link text-red-300\" to=\"/Test\" activeclassname=\"active\">Test</NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-end space-x-4\">\r\n                    <Wallet />\r\n                    <button type=\"button\" className={`lg:hidden rounded-md ring-4 focus:outline-none ${isNavbarCollapsed\r\n                        ? \"text-gray-100/75 ring-gray-100/5 hover:bg-gray-100/10 hover:text-gray-100 hover:ring-gray-100/25\"\r\n                        : \"bg-gray-100/10 text-gray-100 ring-gray-100/25\"\r\n                        }`}\r\n                        onClick={toggleNavbar}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className={`h-10 w-12 fill-current p-1`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`lg:hidden ${isNavbarCollapsed\r\n                ? \"hidden\"\r\n                : \"mt-2 grid w-full grid-cols-2 gap-2 rounded-lg bg-gray-100/10\"\r\n                }`}\r\n            >\r\n                <div className=\"flex flex-col p-2 gap-1\">\r\n                    <Links />\r\n                </div>\r\n                <div className=\"flex flex-col p-2 gap-1 justify-between\">\r\n                    {/* <NavLink className=\"nav-link\" to=\"/\" activeclassname=\"active\">\r\n                        <i className=\"bi bi-file-earmark-text mr-1\" />\r\n                        Documentation\r\n                    </NavLink> */}\r\n                    {/* <NavLink className=\"nav-link\" to={getRoot(window.location.href)} activeclassname=\"active\">\r\n                        <i className=\"bi bi-box-arrow-right mr-1\" />\r\n                        Exit App\r\n                    </NavLink> */}\r\n\r\n                    {/* <a className=\"nav-link\" href={getRoot(window.location.href)}>\r\n                        Documentation\r\n                    </a> */}\r\n\r\n                    <NavLink className=\"nav-link text-right text-red-300\" to=\"/Test\" activeclassname=\"active\">Test</NavLink>\r\n\r\n                    <a className=\"nav-link text-right\" href={getRoot(window.location.href)}>\r\n                        <i className=\"bi bi-box-arrow-right mr-1\" />\r\n                        Exit App\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Spinner({ title, type }) {\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n            {title &&\r\n                <span className=\"mb-2\">{title}</span>\r\n            }\r\n            {type === \"spinner\" &&\r\n                <svg className=\"animate-spin mx-auto h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n            }\r\n            {type === \"cloud\" &&\r\n                <div className=\"animate-bounce mx-auto\">\r\n                    <i className=\"bi bi-cloud-arrow-down text-[1.875em]\" />\r\n                </div>\r\n            }\r\n            <div role=\"status\">\r\n                {title &&\r\n                    <span className=\"hidden\">{title}</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSpinner.propTypes = {\r\n    type: PropTypes.string\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    type: \"spinner\"\r\n};\r\n","import IUniswapV2Pair from \"../abi/IUniswapV2Pair.json\";\r\nimport IUniswapV2Router02 from \"../abi/IUniswapV2Router02.json\";\r\nimport TokenFinder from \"../abi/TokenFinder.json\";\r\nimport IziSwap from \"../abi/IziSwap.json\";\r\nimport WeebToken from \"../abi/WeebToken.json\";\r\nimport WeebGame from \"../abi/WeebGame.json\";\r\nimport WeebFarm from \"../abi/WeebFarm.json\";\r\n\r\nexport function createReaderContract(reader, abi, address, options) {\r\n    return new reader.eth.Contract(abi, address, options);\r\n}\r\n\r\nexport function createSignerContract(signer, abi, address, options) {\r\n    return new signer.eth.Contract(abi, address, options);\r\n}\r\n\r\nexport function createReaders(reader, account, contracts) {\r\n    const options = {\r\n        from: account ?? \"0x0000000000000000000000000000000000000000\" /* Fix for hardhat which keeps returning data of previous account when a request comes from an empty account. */\r\n    };\r\n\r\n    return {\r\n        pair: createReaderContract(reader, IUniswapV2Pair, contracts.liquidityToken, options),\r\n        router: createReaderContract(reader, IUniswapV2Router02, contracts.defaultSwapRouter, options),\r\n        token: createReaderContract(reader, WeebToken, contracts.token.address, options),\r\n        game: createReaderContract(reader, WeebGame, contracts.game, options),\r\n        farm: createReaderContract(reader, WeebFarm, contracts.farm, options),\r\n        tokenFinder: createReaderContract(reader, TokenFinder, contracts.tokenFinder, options),\r\n        iziSwap: createReaderContract(reader, IziSwap, contracts.iziSwap, options),\r\n    };\r\n}\r\n\r\nexport function createSigners(signer, account, contracts) {\r\n    const options = {\r\n        from: account\r\n    };\r\n\r\n    return {\r\n        router: createSignerContract(signer, IUniswapV2Router02, contracts.defaultSwapRouter, options),\r\n        token: createSignerContract(signer, WeebToken, contracts.token.address, options),\r\n        game: createSignerContract(signer, WeebGame, contracts.game, options),\r\n        farm: createSignerContract(signer, WeebFarm, contracts.farm, options),\r\n        iziSwap: createSignerContract(signer, IziSwap, contracts.iziSwap, options),\r\n    };\r\n}","export const MAX_UINT256 = \"115792089237316195423570985008687907853269984665640564039457584007913129639935\";\r\n\r\nexport const cmpi = (str1, str2) => str1.localeCompare(str2, undefined, { sensitivity: \"accent\" });\r\nexport const equals = (str1, str2) => cmpi(str1, str2) === 0;\r\n\r\nexport function contains(str1, str2) {\r\n    return (new RegExp(str2, \"i\")).test(str1);\r\n}\r\n\r\nexport function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function promisify(inner) {\r\n    return new Promise((resolve, reject) =>\r\n        inner((err, res) => {\r\n            if (err) {\r\n                reject(err);\r\n            } else {\r\n                resolve(res);\r\n            }\r\n        })\r\n    );\r\n}\r\n\r\nexport async function waitMined(web3, txHash, interval = 500) {\r\n    while (true) {\r\n        const receipt = await promisify(cb => web3.eth.getTransactionReceipt(txHash, cb));\r\n\r\n        if (receipt == null) {\r\n            await sleep(interval);\r\n        }\r\n        else {\r\n            return receipt;\r\n        }\r\n    }\r\n}\r\n\r\nfunction createClamp(minWidthPx, maxWidthPx, minFontSizePx, maxFontSizePx, pixelsPerRem = 16) {\r\n    const minWidth = minWidthPx / pixelsPerRem;\r\n    const maxWidth = maxWidthPx / pixelsPerRem;\r\n\r\n    const minFontSize = minFontSizePx / pixelsPerRem;\r\n    const maxFontSize = maxFontSizePx / pixelsPerRem;\r\n\r\n    const slope = (maxFontSize - minFontSize) / (maxWidth - minWidth);\r\n    const yAxisIntersection = -minWidth * slope + minFontSize\r\n\r\n    return `clamp(${minFontSize}rem, ${yAxisIntersection}rem + ${slope * 100}vw, ${maxFontSize}rem)`;\r\n}\r\n\r\nfunction createClamp2(minWidthPx, maxWidthPx, minFontSizePx, maxFontSizePx, pixelsPerRem = 16) {\r\n    const scale = 1.40;\r\n    return createClamp(minWidthPx, maxWidthPx, minFontSizePx * scale, maxFontSizePx * scale, pixelsPerRem)\r\n}\r\n\r\nexport function createClamps() {\r\n    let classes = \"\";\r\n\r\n    classes += \".getMainSize {font-size: \" + createClamp(360, 1280, 16, 30) + \";\\r\\n\" + \"}\\r\\n\";\r\n\r\n    // classes += \".text-title {font-size: \" + createClamp(360, 1536, 12, 14) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-main {font-size: \" + createClamp(360, 1536, 20, 40) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-mainUnit {font-size: \" + createClamp(360, 1536, 12, 16) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-detail {font-size: \" + createClamp(360, 1536, 13, 17) + \";\\r\\n\" + \"}\\r\\n\";\r\n    // classes += \".text-detailUnit {font-size: \" + createClamp(360, 1536, 10, 14) + \";\\r\\n\" + \"}\\r\\n\";\r\n\r\n    // classes += \".text-8_10 {font-size: \" + createClamp(360, 1536, 8, 10) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 10) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_11 {font-size: \" + createClamp(360, 1536, 8, 11) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 11) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_12 {font-size: \" + createClamp(360, 1536, 8, 12) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 12) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_13 {font-size: \" + createClamp(360, 1536, 8, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-8_14 {font-size: \" + createClamp(360, 1536, 8, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 8, 14) + \";\"*/ + \"}\\r\\n\";\r\n    \r\n    // classes += \".text-9_11 {font-size: \" + createClamp(360, 1536, 9, 11) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 11) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_12 {font-size: \" + createClamp(360, 1536, 9, 12) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 12) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_13 {font-size: \" + createClamp(360, 1536, 9, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_14 {font-size: \" + createClamp(360, 1536, 9, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 14) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-9_15 {font-size: \" + createClamp(360, 1536, 9, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 9, 15) + \";\"*/ + \"}\\r\\n\";\r\n\r\n    // classes += \".text-10_12 {font-size: \" + createClamp(360, 1536, 10, 12) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 12) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_13 {font-size: \" + createClamp(360, 1536, 10, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_14 {font-size: \" + createClamp(360, 1536, 10, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 14) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_15 {font-size: \" + createClamp(360, 1536, 10, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 15) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-10_16 {font-size: \" + createClamp(360, 1536, 10, 16) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 10, 16) + \";\"*/ + \"}\\r\\n\";\r\n    \r\n    // classes += \".text-11_13 {font-size: \" + createClamp(360, 1536, 11, 13) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 13) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_14 {font-size: \" + createClamp(360, 1536, 11, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 14) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_15 {font-size: \" + createClamp(360, 1536, 11, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 15) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_16 {font-size: \" + createClamp(360, 1536, 11, 16) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 16) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-11_17 {font-size: \" + createClamp(360, 1536, 11, 17) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 11, 17) + \";\"*/ + \"}\\r\\n\";\r\n    \r\n    // classes += \".text-12_14 {font-size: \" + createClamp(360, 1536, 12, 14) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 14)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_15 {font-size: \" + createClamp(360, 1536, 12, 15) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 15)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_16 {font-size: \" + createClamp(360, 1536, 12, 16) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 16)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_17 {font-size: \" + createClamp(360, 1536, 12, 17) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 17)+ \";\"*/  + \"}\\r\\n\";\r\n    // classes += \".text-12_18 {font-size: \" + createClamp(360, 1536, 12, 18) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 18)+ \";\"*/  + \"}\\r\\n\";\r\n \r\n    // classes += \".text-12_24 {font-size: \" + createClamp(360, 1536, 12, 24) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 24) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-12_36 {font-size: \" + createClamp(360, 1536, 12, 36) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 12, 36) + \";\"*/ + \"}\\r\\n\";\r\n\r\n    // classes += \".text-14_36 {font-size: \" + createClamp(360, 1536, 14, 36) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 14, 36) + \";\"*/ + \"}\\r\\n\";\r\n    // classes += \".text-14_40 {font-size: \" + createClamp(360, 1536, 14, 40) + \";\\r\\n\" /*+ \"line-height: \" + createClamp(360, 1536, 14, 40) + \";\"*/ + \"}\\r\\n\";\r\n\r\n    return classes;\r\n}","import Web3 from \"web3\";\r\n\r\nimport IERC20 from \"../abi/IERC20.json\";\r\nimport IUniswapV2Pair from \"../abi/IUniswapV2Pair.json\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\nimport { fromWei, toWei } from \"../../../utils/Web3Converter\";\r\nimport {\r\n    formatAccount,\r\n    formatDateTime,\r\n    formatTimespan,\r\n    formatInteger,\r\n    formatPercentage,\r\n    formatNumberScaled,\r\n    formatCurrency\r\n} from \"../../../utils/Format\";\r\nimport { MAX_UINT256, promisify, waitMined } from \"../../../utils/Utils\";\r\n\r\nimport { createReaderContract, createReaders, createSigners } from \"./Contracts\";\r\n\r\nexport default (function Services() {\r\n    const self = {\r\n        init: (context) => {\r\n            if (!context.chainId || !Configuration.isSupportedChain(context.chainId)) {\r\n                console.log(\"Can not initialize services due to unsupported chain.\");\r\n                return;\r\n            }\r\n\r\n            self.chainId = context.chainId;\r\n            self.account = context.account;\r\n\r\n            self.nativeCoin = Configuration.getNativeCoin(context.chainId);\r\n            self.contracts = Configuration.getContracts(context.chainId);\r\n\r\n            if (context.reader) {\r\n                self.reader = context.reader;\r\n                self.readers = createReaders(context.reader, context.account, self.contracts);\r\n            }\r\n\r\n            if (context.signer) {\r\n                self.signer = context.signer;\r\n                self.signers = createSigners(context.signer, context.account, self.contracts);\r\n            }\r\n        },\r\n        settings: {\r\n            slippageToleranceKey: \"slippageTolerance\",\r\n            getSlippageTolerance: () => parseFloat(window.localStorage.getItem(self.settings.slippageToleranceKey) ?? Configuration.getSlippageTolerance()),\r\n            setSlippageTolerance: (value) => {\r\n                if (value) {\r\n                    window.localStorage.setItem(self.settings.slippageToleranceKey, value);\r\n                }\r\n            },\r\n            getTokenListUri: () => {\r\n                const chainId = Web3.utils.toHex(self.chainId == 31337 ? 1 : self.chainId);\r\n                return `https://deep-index.moralis.io/api/v2/${self.account}/erc20?chain=${chainId}`;\r\n            },\r\n        },\r\n        convert: {\r\n            formatAccount: value => formatAccount(value),\r\n            formatDateTime: value => formatDateTime(value),\r\n            formatTimespan: value => formatTimespan(value),\r\n            formatInteger: value => formatInteger(value),\r\n            formatPercentage: (value, maxDecimals = 2, minDecimals = 0) => formatPercentage(value, maxDecimals, minDecimals),\r\n            formatNumberScaled: (value, maxDecimals = 2, minDecimals = 0) => formatNumberScaled(value, maxDecimals, minDecimals),\r\n            fromWei: (value, decimals) => parseFloat(fromWei(value, decimals)),\r\n            fromWeiNativeCoin: value => self.convert.fromWei(value, self.nativeCoin.decimals),\r\n            fromWeiNativeToken: value => self.convert.fromWei(value, self.contracts.nativeToken.decimals),\r\n            fromWeiStableToken: value => self.convert.fromWei(value, self.contracts.stableToken.decimals),\r\n            fromWeiMainToken: value => self.convert.fromWei(value, self.contracts.token.decimals),\r\n            trimToDecimals: (value, decimals) => {\r\n                if (typeof value === \"number\") {\r\n                    return parseFloat(value.toFixed(decimals));\r\n                }\r\n\r\n                const index = value.indexOf(\".\");\r\n\r\n                if (index != -1) {\r\n                    const count = value.length - (index + 1) - decimals;\r\n\r\n                    if (count > 0) {\r\n                        value = value.substr(0, value.length - count);\r\n                    }\r\n                }\r\n\r\n                return value;\r\n            },\r\n            toWei: (value, decimals) => toWei(self.convert.trimToDecimals(value, decimals), decimals),\r\n            toWeiNativeCoin: value => self.convert.toWei(value, self.nativeCoin.decimals),\r\n            toWeiNativeToken: value => self.convert.toWei(value, self.contracts.nativeToken.decimals),\r\n            toWeiStableToken: value => self.convert.toWei(value, self.contracts.stableToken.decimals),\r\n            toWeiMainToken: value => self.convert.toWei(value, self.contracts.token.decimals),\r\n            formatCurrency: (value, currencyDecimals) => formatCurrency(value, currencyDecimals),\r\n            formatCurrency: (value, currencyDecimals, maxDecimals, minDecimals) => formatCurrency(value, currencyDecimals, maxDecimals, minDecimals),\r\n            formatNativeCoin: value => self.convert.formatCurrency(value, self.nativeCoin.decimals),\r\n            formatNativeCoin: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.nativeCoin.decimals, maxDecimals, minDecimals),\r\n            formatNativeToken: value => self.convert.formatCurrency(value, self.contracts.nativeToken.decimals),\r\n            formatNativeToken: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.contracts.nativeToken.decimals, maxDecimals, minDecimals),\r\n            formatStableToken: value => self.convert.formatCurrency(value, self.contracts.stableToken.decimals),\r\n            formatStableToken: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.contracts.stableToken.decimals, maxDecimals, minDecimals),\r\n            formatMainToken: value => self.convert.formatCurrency(value, self.contracts.token.decimals),\r\n            formatMainToken: (value, maxDecimals, minDecimals) => self.convert.formatCurrency(value, self.contracts.token.decimals, maxDecimals, minDecimals),\r\n            formatDepositToken: (value, pool) => self.convert.formatCurrency(value, pool.depositToken.details.decimals),\r\n            formatDepositToken: (value, pool, maxDecimals, minDecimals) => self.convert.formatCurrency(value, pool.depositToken.details.decimals, maxDecimals, minDecimals),\r\n        },\r\n        format: decimals => {\r\n            const _format = {\r\n                fromWei: (value) => self.convert.fromWei(value, decimals),\r\n                formatCurrency: (value, maxDecimals = 4, minDecimals = 0) => self.convert.formatCurrency(value, decimals, maxDecimals, minDecimals),\r\n                formatToken: (value, maxDecimals = 4, minDecimals = 0) => _format.formatCurrency(value, maxDecimals, minDecimals),\r\n            };\r\n\r\n            return _format;\r\n        },\r\n        block: {\r\n            getBlock: (blockId) => promisify(cb => self.reader.eth.getBlock(blockId, cb)),\r\n            getAverageBlockTime: async count => {\r\n                const blockF = await self.block.getBlock(\"latest\");\r\n                const now = Date.now() / 1000;\r\n                const blockI = await self.block.getBlock(blockF.number - count);\r\n                const blockTime = (blockF.timestamp - blockI.timestamp) / count;\r\n                console.log(`Block Time: ${blockTime} s; F: ${blockF.timestamp} - I: ${blockI.timestamp} = ${blockF.timestamp - blockI.timestamp} s. Lag: ${now - blockF.timestamp} s.`);\r\n\r\n                return blockTime;\r\n            }\r\n        },\r\n        pair: {\r\n            getTokenReserves: async (tokenAddress, decimals) => {\r\n                // Check the order of pair tokens.\r\n                const isTokenFirst = Web3.utils.toBN(tokenAddress).cmp(Web3.utils.toBN(self.contracts.nativeToken.address)) === -1;\r\n                const reserves = await promisify(cb => self.readers.pair.methods.getReserves().call(cb));\r\n\r\n                return isTokenFirst\r\n                    ? {\r\n                        tokenReserve: self.convert.fromWei(reserves.reserve0, decimals),\r\n                        nativeTokenReserve: self.convert.fromWei(reserves.reserve1, self.contracts.nativeToken.decimals)\r\n                    }\r\n                    : {\r\n                        tokenReserve: self.convert.fromWei(reserves.reserve1, decimals),\r\n                        nativeTokenReserve: self.convert.fromWei(reserves.reserve0, self.contracts.nativeToken.decimals)\r\n                    };\r\n            },\r\n            getMainTokenReserves: () => self.pair.getTokenReserves(self.contracts.token.address, self.contracts.token.decimals),\r\n            getMainTokenInitialReserves: () => {\r\n                const initialLiquidity = Configuration.getInitialLiquidity(self.chainId);\r\n\r\n                return {\r\n                    initialTokenReserve: self.convert.fromWeiMainToken(initialLiquidity.tokenReserve),\r\n                    initialNativeTokenReserve: self.convert.fromWeiNativeToken(initialLiquidity.nativeTokenReserve)\r\n                };\r\n            }\r\n        },\r\n        iziSwap: {\r\n            quote: (sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken) => promisify(cb => self.readers.iziSwap.methods.quote(sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken).call(cb)),\r\n            swap: async (sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken, to, deadline, amountOutMin) => waitMined(self.reader, await promisify(cb => self.signers.iziSwap.methods.swap(sourceRouter, sourceToken, isSourceLiquidityToken, sourceTokenAmount, targetRouter, targetToken, isTargetLiquidityToken, to, deadline, amountOutMin).send(cb))),\r\n            getTokenPriceInStableToken: async (\r\n                depositToken,\r\n                decimals,\r\n                isLiquidityToken\r\n            ) => {\r\n                const depositRouter = Configuration.getDefaultSwapRouter(self.chainId);\r\n                const creditRouter = depositRouter;\r\n                const amount = await self.iziSwap.quote(depositRouter, depositToken, isLiquidityToken, self.convert.toWei(1, decimals), creditRouter, self.contracts.stableToken.address, false);\r\n\r\n                return self.convert.fromWeiStableToken(amount);\r\n            },\r\n            getTokenPriceInMainToken: async (\r\n                depositToken,\r\n                decimals,\r\n                isLiquidityToken\r\n            ) => {\r\n                const depositRouter = Configuration.getDefaultSwapRouter(self.chainId);\r\n                const creditRouter = depositRouter;\r\n                const amount = await self.iziSwap.quote(depositRouter, depositToken, isLiquidityToken, self.convert.toWei(1, decimals), creditRouter, self.contracts.token.address, false);\r\n\r\n                return self.convert.fromWeiMainToken(amount);\r\n            }\r\n        },\r\n        router: {\r\n            getTokenPriceInStableToken: async (tokenAddress, decimals) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWei(1, decimals), [\r\n                    tokenAddress,\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.stableToken.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiStableToken(amounts[amounts.length - 1]);\r\n            },\r\n            getMainTokenPriceInStableToken: () => {\r\n                return self.router.getTokenPriceInStableToken(self.contracts.token.address, self.contracts.token.decimals);\r\n            },\r\n            getNativeTokenPriceInStableToken: async () => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWei(1, self.contracts.nativeToken.decimals), [\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.stableToken.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiStableToken(amounts[amounts.length - 1]);\r\n            },\r\n            getTokenPriceInMainToken: async (tokenAddress, decimals) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWei(1, decimals), [\r\n                    tokenAddress,\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.token.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiMainToken(amounts[amounts.length - 1]);\r\n            },\r\n            getMainTokenAmountFromNativeCoin: async (nativeCoinAmountIn) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWeiNativeCoin(nativeCoinAmountIn), [\r\n                    self.contracts.nativeToken.address,\r\n                    self.contracts.token.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiMainToken(amounts[amounts.length - 1]);\r\n            },\r\n            getNativeCoinAmountFromMainToken: async (mainTokenAmountIn) => {\r\n                const amounts = await promisify(cb => self.readers.router.methods.getAmountsOut(self.convert.toWeiMainToken(mainTokenAmountIn), [\r\n                    self.contracts.token.address,\r\n                    self.contracts.nativeToken.address\r\n                ]).call(cb));\r\n\r\n                return self.convert.fromWeiNativeCoin(amounts[amounts.length - 1]);\r\n            },\r\n            swapNativeTokenForMainToken: async (nativeCoinAmountIn, tokenAmountOutMin, recipient) => {\r\n                return waitMined(self.reader,\r\n                    await promisify(cb => self.signers.router.methods.swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n                        self.convert.toWeiMainToken(tokenAmountOutMin),\r\n                        [self.contracts.nativeToken.address, self.contracts.token.address],\r\n                        recipient ? recipient : self.account,\r\n                        parseInt((Date.now() / 1000) + 3600)\r\n                    ).send({ value: self.convert.toWeiNativeCoin(nativeCoinAmountIn) }, cb)));\r\n            },\r\n            swapMainTokenForNativeToken: async (mainTokenAmountIn, amountNativeTokenOutMin, recipient) => {\r\n                return waitMined(self.reader,\r\n                    await promisify(cb => self.signers.router.methods.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                        self.convert.toWeiMainToken(mainTokenAmountIn),\r\n                        self.convert.toWeiNativeCoin(amountNativeTokenOutMin),\r\n                        [self.contracts.token.address, self.contracts.nativeToken.address],\r\n                        recipient ? recipient : self.account,\r\n                        parseInt((Date.now() / 1000) + 3600)\r\n                    ).send(cb)));\r\n            },\r\n        },\r\n        token: {\r\n            balanceOf: async (tokenAddress) => {\r\n                const reader = createReaderContract(self.reader, IERC20, tokenAddress, { from: self.account });\r\n                return promisify(cb => reader.methods.balanceOf(self.account).call(cb));\r\n            },\r\n            transfer: async (recipient, amount) => waitMined(self.reader, await promisify(cb => self.signers.token.methods.transfer(recipient, amount).send(cb))),\r\n            getAllowance: (owner, spender) => promisify(cb => self.readers.token.methods.allowance(owner, spender).call(cb)),\r\n            getTokenSnapshot: () => promisify(cb => self.readers.token.methods.senderTokenSnapshot().call(cb)),\r\n            harvestPendingReward: async () => waitMined(self.reader, await promisify(cb => self.readers.token.methods.harvestPendingReward().send(cb))),\r\n            approveRouter: async () => waitMined(self.reader, await promisify(cb => self.signers.token.methods.approve(self.readers.router.options.address, MAX_UINT256).send(cb))),\r\n            approveGame: async () => waitMined(self.reader, await promisify(cb => self.signers.token.methods.approve(self.readers.game.options.address, MAX_UINT256).send(cb))),\r\n            isAllowed: async (minAmount, allowance) => allowance.eq(Web3.utils.toBN(0)) ? false : allowance.cmp(Web3.utils.toBN(minAmount)) >= 0,\r\n            isAllowanceSatisfied: async (spender, minAmount) => {\r\n                console.log(`minAmount: ${minAmount}`);\r\n                const allowance = Web3.utils.toBN(await self.token.getAllowance(self.account, spender));\r\n                return self.token.isAllowed(minAmount, allowance);\r\n            },\r\n        },\r\n        game: {\r\n            getAllowance: () => self.token.getAllowance(self.account, self.readers.game.options.address),\r\n            getSnapshots: (isEnabled) => promisify(cb => self.readers.game.methods.senderGameSnapshots(isEnabled).call(cb)),\r\n            getSenderBetPoolCount: (gameId) => promisify(cb => self.readers.game.methods.senderBetPoolCount(gameId).call(cb)),\r\n            getSenderPoolSnapshots: (gameId, offset, count) => promisify(cb => self.readers.game.methods.senderPoolSnapshots(gameId, offset, count).call(cb)),\r\n            getSenderBetPools: (gameId) => promisify(cb => self.readers.game.methods.senderBetPools(gameId).call(cb)),\r\n            betMainToken: async (gameId, amount, outcome) => {\r\n                console.log(\"bet main\");\r\n                return waitMined(self.reader, await promisify(cb => self.signers.game.methods.bet(gameId, amount, outcome).send(cb)));\r\n            },\r\n            bet: async (gameId, sourceToken, sourceAmount, outcome, gameTokenInfo) => {\r\n                const sourceAmountInWei = self.convert.toWei(sourceAmount, sourceToken.info.details.decimals);\r\n                const amountOut = self.convert.fromWei(await self.iziSwap.quote(sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, sourceAmountInWei, gameTokenInfo.router, gameTokenInfo.token, false), gameTokenInfo.details.decimals);\r\n                const amountMin = amountOut * self.settings.getSlippageTolerance() / 10000;\r\n                const amountOutMin = amountOut - amountMin;\r\n\r\n                return waitMined(self.reader, await promisify(cb => self.signers.game.methods.bet(gameId, sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, self.convert.toWei(amountOut, gameTokenInfo.details.decimals), self.convert.toWei(amountOutMin, gameTokenInfo.details.decimals), outcome).send(cb)));\r\n            },\r\n            compound: async (gameId, outcome) => waitMined(self.reader, await promisify(cb => self.signers.game.methods.compound(gameId, outcome).send(cb))),\r\n            claim: async (gameId) => waitMined(self.reader, await promisify(cb => self.signers.game.methods.claim(gameId).send(cb))),\r\n            harvestPendingReward: (gameId, outcome) => self.game.betMainToken(gameId, 0, outcome),\r\n            isAllowanceSatisfied: async (minAmount) => {\r\n                const allowance = Web3.utils.toBN(await self.game.getAllowance());\r\n                return self.token.isAllowed(minAmount, allowance);\r\n            },\r\n        },\r\n        farm: {\r\n            getDepositTokenSymbol: (pool) => pool.isLiquidityToken ? `${pool.token0Details.symbol}/${pool.token1Details.symbol}` : pool.depositToken.details.symbol,\r\n            conversionRateOf: (depositRouter, depositToken, isLiquidityToken, deposit, creditRouter, creditToken) => promisify(cb => self.readers.farm.methods.conversionRateOf(depositRouter, depositToken, isLiquidityToken, deposit, creditRouter, creditToken).call(cb)),\r\n            getAllowance: (reader) => promisify(cb => reader.methods.allowance(self.account, self.readers.farm.options.address).call(cb)),\r\n            approveFarm: async (signer) => waitMined(self.reader, await promisify(cb => signer.methods.approve(self.readers.farm.options.address, MAX_UINT256).send(cb))),\r\n            getSnapshot: (isEnabled) => promisify(cb => self.readers.farm.methods.senderFarmSnapshot(isEnabled).call(cb)),\r\n            getLiquidatablesSnapshot: (isEnabled) => promisify(cb => self.readers.farm.methods.senderFarmLiquidatablesSnapshot(isEnabled).call(cb)),\r\n            REMOVE_deposit: async (poolId, amount) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.deposit(poolId, amount, self.settings.getSlippageTolerance()).send(cb))),\r\n            deposit: async (poolId, sourceToken, sourceAmount, pool) => {\r\n                const sourceAmountInWei = self.convert.toWei(sourceAmount, sourceToken.info.details.decimals);\r\n                const amountOut = self.convert.fromWei(await self.iziSwap.quote(sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, sourceAmountInWei, pool.depositToken.router, pool.depositToken.token, pool.isLiquidityToken), pool.depositToken.details.decimals);\r\n                const amountMin = amountOut * self.settings.getSlippageTolerance() / 10000;\r\n                const amountOutMin = amountOut - amountMin;\r\n\r\n                return waitMined(self.reader, await promisify(cb => self.signers.farm.methods.deposit(poolId, sourceToken.info.router, sourceToken.info.token, sourceToken.isLiquidityToken, self.convert.toWei(amountOut, pool.depositToken.details.decimals), self.convert.toWei(amountOutMin, pool.depositToken.details.decimals)).send(cb)));\r\n            },\r\n            withdraw: async (poolId, amount) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.withdraw(poolId, amount).send(cb))),\r\n            rebalance: async (poolId) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.rebalance(poolId).send(cb))),\r\n            liquidate: async (poolId) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.liquidateSenderUnchecked(poolId, self.settings.getSlippageTolerance()).send(cb))),\r\n            liquidateAccount: async (poolId, investor) => waitMined(self.reader, await promisify(cb => self.signers.farm.methods.liquidateAccount(poolId, investor, self.settings.getSlippageTolerance()).send(cb))),\r\n            isAllowanceSatisfied: async (pool, minAmount) => {\r\n                const reader = createReaderContract(self.reader, pool.isLiquidityToken ? IUniswapV2Pair : IERC20, pool.depositToken.token, { from: self.account });\r\n                const allowance = Web3.utils.toBN(await self.farm.getAllowance(reader));\r\n                return self.token.isAllowed(minAmount, allowance);\r\n            },\r\n            getTokenPriceInDepositToken: async (token, pool) => {\r\n                const amount = await self.iziSwap.quote(token.info.router, token.info.token, token.isLiquidityToken, self.convert.toWei(1, token.info.details.decimals), pool.depositToken.router, pool.depositToken.token, pool.isLiquidityToken);\r\n\r\n                return self.convert.fromWei(amount, pool.depositToken.details.decimals);\r\n            },\r\n        },\r\n        tokenFinder: {\r\n            findAll: (tokenAddress) => promisify(cb => self.readers.tokenFinder.methods.findAll(tokenAddress).call(cb)),\r\n        }\r\n    };\r\n\r\n    return self;\r\n})();","// import BN from \"bn.js\";\r\n\r\nexport const DAYS_IN_WEEK = 7;\r\nexport const DAYS_IN_MONTH = 30.4167;\r\nexport const DAYS_IN_YEAR = 365;\r\n\r\n// export function getAnnualPercentageYieldBigDecimal(rewardPerBlock, blockTime, totalStaked, investment) {\r\n//     var rate = getRewardRatePerDay(rewardPerBlock, blockTime, totalStaked, investment);\r\n//     return BN.pow(1 + rate, 365) - 1;\r\n// }\r\n\r\n/// <summary>\r\n///     https://www.thecalculatorsite.com/finance/calculators/daily-compound-interest.php\r\n/// </summary>\r\n\r\nexport function getDurationPercentageYield2(rewardPerBlock, blockTime, totalStaked, investment, duration) {\r\n    var rate = getRewardRatePerDay(rewardPerBlock, blockTime, totalStaked, investment);\r\n    return Math.pow(1 + rate, duration) - 1;\r\n}\r\n\r\n// If user wants to invest \"investment\" amount of to the existing \"totalStaked\".\r\nexport function getRewardRatePerDay(rewardPerBlock, blockTime, totalStaked, investment) {\r\n    return _getRewardPerDay(rewardPerBlock, blockTime) / (totalStaked + investment);\r\n}\r\n\r\n// This is compounded interest. The reward earned increases user's balance and totalStaked as well which renders constantish daily earned reward for the user.\r\nexport function getDurationPercentageYield(rewardPerBlock, blockTime, totalStaked, investment, duration) {\r\n    const rpd = getRewardPerDay(rewardPerBlock, blockTime, totalStaked + investment, investment);\r\n    return (rpd * duration) / investment;\r\n}\r\n\r\nexport function getRewardPerDay(rewardPerBlock, blockTime, totalStaked, balance) {\r\n    return _getRewardPerDay(rewardPerBlock, blockTime) * balance / totalStaked;\r\n}\r\n\r\nexport function getRewardPerDuration(rewardPerBlock, blockTime, duration) {\r\n    return _getRewardPerDay(rewardPerBlock, blockTime) * duration;\r\n}\r\n\r\nfunction _getRewardPerDay(rewardPerBlock, blockTime) {\r\n    return 60 * 60 * 24 * rewardPerBlock / blockTime;\r\n}\r\n\r\nexport function getRewards(rewardPerBlock, blockTime, totalStaked, balance, duration, compound) {\r\n    const rewardPerDay = _getRewardPerDay(rewardPerBlock, blockTime);\r\n    const dailyRewards = [];\r\n\r\n    for (let i = 0; i < duration; ++i) {\r\n        let reward = rewardPerDay * balance / totalStaked;\r\n        totalStaked += rewardPerDay;\r\n\r\n        if (compound) {\r\n            balance += reward;\r\n        } else {\r\n            totalStaked -= reward;\r\n        }\r\n\r\n        if (i > 0) {\r\n            reward += dailyRewards[i - 1];\r\n        }\r\n\r\n        dailyRewards.push(reward);\r\n    }\r\n\r\n    console.log(`Final balance: ${balance}`);\r\n    console.log(`Total staked : ${totalStaked}`);\r\n    console.log(dailyRewards);\r\n\r\n    const str = dailyRewards.join(\"\\r\\n\");\r\n    console.log(str);\r\n\r\n    return dailyRewards;\r\n}\r\n\r\nexport function getRewardsOfIncrementedBalance(rewardPerBlock, blockTime, totalStaked, balance, duration, compound, balanceIncrement, balanceIncrementPeriod) {\r\n    const rewardPerDay = _getRewardPerDay(rewardPerBlock, blockTime);\r\n    const dailyRewards = [];\r\n\r\n    for (let i = 0; i < duration; ++i) {\r\n        let reward = rewardPerDay * balance / totalStaked;\r\n        totalStaked += rewardPerDay;\r\n\r\n        if (compound) {\r\n            balance += reward;\r\n        } else {\r\n            totalStaked -= reward;\r\n        }\r\n\r\n        if (i > 0) {\r\n            reward += dailyRewards[i - 1];\r\n\r\n            if ((i + 1) % balanceIncrementPeriod === 0) {\r\n                balance += balanceIncrement;\r\n                totalStaked += balanceIncrement;\r\n            }\r\n        }\r\n\r\n        dailyRewards.push(reward);\r\n    }\r\n\r\n    console.log(`Final balance: ${balance}`);\r\n    console.log(`Total staked : ${totalStaked}`);\r\n    console.log(dailyRewards);\r\n\r\n    const str = dailyRewards.join(\"\\r\\n\");\r\n    console.log(str);\r\n\r\n    return dailyRewards;\r\n}","import { useState } from \"react\";\r\nimport { Portal, Popover } from \"@headlessui/react\";\r\nimport { usePopper } from \"react-popper\";\r\n\r\nexport function StyledPopover({ isTooltip, children, icon }) {\r\n    const [referenceElement, setReferenceElement] = useState();\r\n    const [popperElement, setPopperElement] = useState();\r\n\r\n    const { styles, attributes } = usePopper(referenceElement, popperElement);\r\n\r\n    return (\r\n        <Popover as=\"span\">\r\n            <Popover.Button as=\"i\" ref={setReferenceElement} className={`bi ${isTooltip ? icon ?? \"bi-question-circle\" : icon ?? \"bi-three-dots\"} cursor-pointer hover:animate-pulse`}>\r\n            </Popover.Button>\r\n\r\n            <Portal>\r\n                <Popover.Panel ref={setPopperElement} style={styles.popper} {...attributes.popper} className=\"z-10 card popover rounded-lg shadow w-full max-w-md\">\r\n                    {children}\r\n                </Popover.Panel>\r\n            </Portal>\r\n        </Popover>\r\n    );\r\n}\r\n","export const ShowComponentType = Object.freeze({\r\n    All: 255,\r\n    Token: 1,\r\n    Games: 2,\r\n    Farms: 4,\r\n    Liquidatables: 8\r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { DAYS_IN_WEEK, DAYS_IN_MONTH, DAYS_IN_YEAR, getDurationPercentageYield, getRewardRatePerDay, getRewardPerDay, getRewardPerDuration } from \"../../utils/InterestExtensions\";\r\n\r\nimport { PriceBox } from \"../InfoBox\";\r\nimport { StyledPopover } from \"../StyledPopover\";\r\n\r\nimport { ShowComponentType } from \"./Enums\";\r\n\r\n/*\r\n{\r\n    card,\r\n    borderBottom,\r\n    showCompact,\r\n    showHeader,\r\n    showHarvestButton,\r\n    token,\r\n    priceInNativeToken,\r\n    priceInStableToken,\r\n    harvestPendingReward,\r\n    blockTime\r\n}\r\n*/\r\nexport default class Token extends Component {\r\n    static propTypes = {\r\n        card: PropTypes.string,\r\n        borderBottom: PropTypes.string,\r\n        showCompact: PropTypes.bool,\r\n        showHeader: PropTypes.bool,\r\n        showHarvestButton: PropTypes.bool,\r\n        harvestPendingReward: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        card: \"card-t1\",\r\n        borderBottom: \"border-bottom-t1\",\r\n        showCompact: false,\r\n        showHeader: true,\r\n        showHarvestButton: true,\r\n        harvestPendingReward: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isDetailed: !(props.showCompact && props.showHeader),\r\n            isInteractionDisabled: false\r\n        };\r\n\r\n        this.toggleDetailedVisibility = this.toggleDetailedVisibility.bind(this);\r\n        this.execute = this.execute.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const nativeTokenPriceInStableToken = this.props.priceInStableToken / this.props.priceInNativeToken;\r\n        const swapRouterName = Configuration.getSwapRouterName($.chainId, Configuration.getDefaultSwapRouter($.chainId));\r\n        const tokenExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/token/${this.props.token.contractAddress}`;\r\n        const senderBalance = $.convert.fromWeiMainToken(this.props.token.senderBalance);\r\n        const senderLockedBalance = $.convert.fromWeiMainToken(this.props.token.senderLockedBalance);\r\n        const senderFreeBalance = $.convert.fromWeiMainToken(this.props.token.senderFreeBalance);\r\n        const senderPendingReward = $.convert.fromWeiMainToken(this.props.token.senderPendingReward);\r\n        const maximumSupply = $.convert.fromWeiMainToken(this.props.token.maximumSupply);\r\n        const initialSupply = $.convert.fromWeiMainToken(this.props.token.initialSupply);\r\n        const totalSupply = $.convert.fromWeiMainToken(this.props.token.totalSupply);\r\n        const senderBalanceShare = totalSupply === 0 ? 0 : senderBalance / totalSupply;\r\n        const totalLockedSupply = $.convert.fromWeiMainToken(this.props.token.totalLockedSupply);\r\n        const totalStaked = $.convert.fromWeiMainToken(this.props.token.totalStaked);\r\n        const senderStakeShare = totalStaked === 0 ? 0 : senderBalance / totalStaked;\r\n        const supplyInContracts = $.convert.fromWeiMainToken(this.props.token.supplyInContracts);\r\n        const supplyInNonrewardables = $.convert.fromWeiMainToken(this.props.token.supplyInNonrewardables);\r\n        const totalRewarded = $.convert.fromWeiMainToken(this.props.token.totalRewarded);\r\n        const totalTransacted = $.convert.fromWeiMainToken(this.props.token.totalTransacted.total);\r\n        const seigniorageFee = parseFloat(this.props.token.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = $.convert.fromWeiMainToken(this.props.token.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.token.seigniory}`;\r\n        const reducedEmissionHolderLimit = parseInt(this.props.token.reducedEmissionHolderLimit);\r\n        const isRegularEmission = (reducedEmissionHolderLimit == 0 || parseInt(this.props.token.holders) > reducedEmissionHolderLimit);\r\n        const baseRewardPerBlock = $.convert.fromWeiMainToken(this.props.token.baseRewardPerBlock);\r\n        const maximumRewardPerBlock = $.convert.fromWeiMainToken(this.props.token.maximumRewardPerBlock);\r\n        const currentRewardPerBlock = $.convert.fromWeiMainToken(this.props.token.currentRewardPerBlock);\r\n        const transferBurnRate = parseFloat(this.props.token.transferBurnRate) / 10000;\r\n        const salesBaseBurnRate = parseFloat(this.props.token.salesBaseBurnRate) / 10000;\r\n        const salesMaximumBurnRate = parseFloat(this.props.token.salesMaximumBurnRate) / 10000;\r\n        const currentSalesBurnRate = parseFloat(this.props.token.currentSalesBurnRate) / 10000;\r\n        const rebatableBurnRate = parseFloat(this.props.token.rebatableBurnRate) / 10000;\r\n        const rebateMaximizingShare = parseFloat(this.props.token.rebateMaximizingShare) / 10000;\r\n        const rebateShareStepsize = parseFloat(this.props.token.rebateShareStepsize) / 10000;\r\n        const regulationInterval = parseInt(this.props.token.regulationInterval);\r\n        const regulationTimestamp = parseInt(this.props.token.regulationTimestamp);\r\n        const timeToRegulation = (regulationTimestamp + regulationInterval) - now;\r\n        const priceAverage = $.convert.fromWeiMainToken(this.props.token.priceAverage);\r\n        const rewardMultiplier = parseFloat(this.props.token.rewardMultiplier) / 10000;\r\n        const burnMultiplier = parseFloat(this.props.token.burnMultiplier) / 10000;\r\n        const senderRebateRate = parseFloat(this.props.token.senderRebateRate) / 10000;\r\n        const senderTransferBurnRate = transferBurnRate - (transferBurnRate * rebatableBurnRate * senderRebateRate);\r\n        const senderSalesBurnRate = currentSalesBurnRate - (currentSalesBurnRate * rebatableBurnRate * senderRebateRate);\r\n        const senderTotalRebated = $.convert.fromWeiMainToken(this.props.token.senderTotalRebated.total);\r\n        const senderTotalBurnt = $.convert.fromWeiMainToken(this.props.token.senderTotalBurnt.total);\r\n\r\n        const maxRewardPerD = getRewardPerDuration(maximumRewardPerBlock, this.props.blockTime, 1);\r\n        const maxRewardPerW = maxRewardPerD * DAYS_IN_WEEK;\r\n        const maxRewardPerM = maxRewardPerD * DAYS_IN_MONTH;\r\n        const maxRewardPerY = maxRewardPerD * DAYS_IN_YEAR;\r\n        const currentRewardPerD = getRewardPerDuration(currentRewardPerBlock, this.props.blockTime, 1);\r\n        const currentRewardPerW = currentRewardPerD * DAYS_IN_WEEK;\r\n        const currentRewardPerM = currentRewardPerD * DAYS_IN_MONTH;\r\n        const currentRewardPerY = currentRewardPerD * DAYS_IN_YEAR;\r\n\r\n        const senderMaxRewardPerD = getRewardPerDay(maximumRewardPerBlock, this.props.blockTime, totalStaked, senderBalance);\r\n        const senderMaxRewardPerW = senderMaxRewardPerD * DAYS_IN_WEEK;\r\n        const senderMaxRewardPerM = senderMaxRewardPerD * DAYS_IN_MONTH;\r\n        const senderMaxRewardPerY = senderMaxRewardPerD * DAYS_IN_YEAR;\r\n        const senderCurrentRewardPerD = getRewardPerDay(currentRewardPerBlock, this.props.blockTime, totalStaked, senderBalance);\r\n        const senderCurrentRewardPerW = senderCurrentRewardPerD * DAYS_IN_WEEK;\r\n        const senderCurrentRewardPerM = senderCurrentRewardPerD * DAYS_IN_MONTH;\r\n        const senderCurrentRewardPerY = senderCurrentRewardPerD * DAYS_IN_YEAR;\r\n\r\n        const pendingPoolReward = $.convert.fromWeiMainToken(this.props.token.pendingPoolReward);\r\n        const rewardLastDistributedBlock = parseInt(this.props.token.rewardLastDistributedBlock);\r\n        const blocksFromRewardLastDistributed = rewardLastDistributedBlock > 0 ? (parseInt(this.props.token.currentBlock) - rewardLastDistributedBlock) : 0;\r\n        const timeFromRewardLastDistributed = blocksFromRewardLastDistributed * this.props.blockTime;\r\n\r\n        const senderTotalHarvested = $.convert.fromWeiMainToken(this.props.token.senderTotalHarvested.total);\r\n        const totalRebated = $.convert.fromWeiMainToken(this.props.token.totalRebated.total);\r\n        const totalBurnt = $.convert.fromWeiMainToken(this.props.token.totalBurnt.total);\r\n        const totalHarvested = $.convert.fromWeiMainToken(this.props.token.totalHarvested.total);\r\n\r\n        const valueInStableToken = Configuration.getPercentageYieldInvestmentInStablecoin() / this.props.priceInStableToken;\r\n\r\n        const cdpy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, 1);\r\n        const cwpy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, DAYS_IN_WEEK);\r\n        const cmpy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, DAYS_IN_MONTH);\r\n        const capy = getDurationPercentageYield(currentRewardPerBlock, this.props.blockTime, totalStaked, valueInStableToken, DAYS_IN_YEAR);\r\n\r\n        const tooltipTotalLockedSupplyText = (<span className=\"tooltip text-[80%]\">\r\n            Temporary addition to circulating supply. Passive supply which can generate yield but can not be sold.\r\n        </span>);\r\n        const tooltipRewardMaximizingHoldersText = (<span className=\"tooltip text-[80%]\">\r\n            The number of holders required for maximum reward per block emission to avoid liquidity concentration.\r\n        </span>);\r\n        const tooltipSenderTotalRebatedText = (<span className=\"tooltip text-[80%]\">\r\n            Rebates earned from burns by holding higher balance share.\r\n        </span>);\r\n        const tooltipSeigniorageFeeText = (<span className=\"tooltip text-[80%]\">\r\n            Fee paid to the seignory (token owner) from burns.\r\n        </span>);\r\n\r\n        // 1. popoverSenderBalanceRef\r\n        const popoverSenderBalanceContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Locked Balance\"\r\n                    main={$.convert.formatMainToken(senderLockedBalance)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderLockedBalance * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Free Balance\"\r\n                    main={$.convert.formatMainToken(senderFreeBalance)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderFreeBalance * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Balance Share\"\r\n                    main={$.convert.formatPercentage(senderBalanceShare)}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Stake Share\"\r\n                    main={$.convert.formatPercentage(senderStakeShare)}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 2a. popoverSenderBurnRateRef\r\n        const popoverSenderTransferBurnRateContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Rebatable Burn Rate (RBR)\"\r\n                    main={$.convert.formatPercentage(rebatableBurnRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(transferBurnRate * rebatableBurnRate)}\r\n                    detailUnit=\"% from TBR\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Maximizing Share\"\r\n                    main={$.convert.formatPercentage(rebateMaximizingShare)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Share Stepsize\"\r\n                    main={$.convert.formatPercentage(rebateShareStepsize)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Your Rebate Rate of RBR\"\r\n                    main={$.convert.formatPercentage(senderRebateRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(transferBurnRate * rebatableBurnRate * senderRebateRate)}\r\n                    detailUnit=\"% of TBR\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 2b. popoverSenderBurnRateRef\r\n        const popoverSenderSalesBurnRateContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Rebatable Burn Rate (RBR)\"\r\n                    main={$.convert.formatPercentage(rebatableBurnRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(currentSalesBurnRate * rebatableBurnRate)}\r\n                    detailUnit=\"% from CSBR\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Maximizing Share\"\r\n                    main={$.convert.formatPercentage(rebateMaximizingShare)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Rebate Share Stepsize\"\r\n                    main={$.convert.formatPercentage(rebateShareStepsize)}\r\n                    mainUnit=\"%\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Your Rebate Rate of RBR\"\r\n                    main={$.convert.formatPercentage(senderRebateRate)}\r\n                    mainUnit=\"%\"\r\n                    detail={$.convert.formatPercentage(currentSalesBurnRate * rebatableBurnRate * senderRebateRate)}\r\n                    detailUnit=\"% of CSBR\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 3. popoverMaxRewardPerBlockRef\r\n        const popoverMaxRewardPerBlockContent = (\r\n            <div className=\"grid grid-cols-12 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Day\"\r\n                    main={$.convert.formatMainToken(maxRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Week\"\r\n                    main={$.convert.formatMainToken(maxRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Month\"\r\n                    main={$.convert.formatMainToken(maxRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Maximum Reward Per Year\"\r\n                    main={$.convert.formatMainToken(maxRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(maxRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n\r\n                <div className={`col-span-12 ${this.props.borderBottom}`}></div>\r\n\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Day\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Week\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Month\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-6\"\r\n                    title=\"Your Maximum Reward Per Year\"\r\n                    main={$.convert.formatMainToken(senderMaxRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderMaxRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        // 4. popoverCurrentRewardPerBlockRef\r\n        const popoverCurrentRewardPerBlockContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title={(<><span className=\"mr-1\">Reward Maximizing Holders</span><StyledPopover isTooltip={true} children={tooltipRewardMaximizingHoldersText} /></>)}\r\n                    main={$.convert.formatInteger(this.props.token.reducedEmissionHolderLimit)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Current Holders\"\r\n                    main={$.convert.formatInteger(this.props.token.holders)}\r\n                    detail={(<span className=\"font-display\">{isRegularEmission ? \"Regular Reward Emission\" : \"Reduced Reward Emission\"}</span>)}\r\n                    detailClassName=\"uppercase text-red-500\"\r\n                />\r\n\r\n                <span className=\"group-title light-box opacity-75 col-span-2\">Pool's Current Reward</span>\r\n                <PriceBox\r\n                    title=\"Per Day\"\r\n                    main={$.convert.formatMainToken(currentRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Week\"\r\n                    main={$.convert.formatMainToken(currentRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Month\"\r\n                    main={$.convert.formatMainToken(currentRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Year\"\r\n                    main={$.convert.formatMainToken(currentRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(currentRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n\r\n                <span className=\"group-title light-box opacity-75 col-span-2\">Your Current Reward</span>\r\n                <PriceBox\r\n                    title=\"Per Day\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerD)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerD * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Week\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerW)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerW * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Month\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerM)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerM * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n                <PriceBox\r\n                    title=\"Per Year\"\r\n                    main={$.convert.formatMainToken(senderCurrentRewardPerY)}\r\n                    mainUnit={this.props.token.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderCurrentRewardPerY * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        const lastHarvest = parseInt(this.props.token.senderTotalHarvested.timestamp) === 0 ? \"-\" : $.convert.formatTimespan(now - parseInt(this.props.token.senderTotalHarvested.timestamp));\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-1 gap-y-2\">\r\n                <div className={`card bg-weeb-card1/60 bg-diagonal-lines`}>\r\n                    {this.props.showHeader &&\r\n                        <>\r\n                            <div className=\"grid grid-cols-1 gap-x-2 gap-y-0.5\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <span className=\"card-header-title-text opacity-75 cursor-pointer\" onClick={this.toggleDetailedVisibility}>\r\n                                        <i className={`bi ${(this.state.isDetailed ? \"bi-caret-down-fill\" : \"bi-caret-right-fill\")} mr-1`} />\r\n                                        {this.props.token.details.name}\r\n                                    </span>\r\n                                    <div className=\"card-header-item-text truncate opacity-25 2xs:ml-4\">\r\n                                        <i className=\"bi bi-clipboard mr-1 cursor-pointer\" onClick={async () => {\r\n                                            try {\r\n                                                await navigator.clipboard.writeText(this.props.token.contractAddress);\r\n                                                console.error(\"The token contract address copied.\");\r\n                                            } catch (error) {\r\n                                                console.error(\"Failed to copy the token contract address: \", error);\r\n                                            }\r\n                                        }} />\r\n                                        <a href={tokenExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric hover:select-all\">{this.props.token.contractAddress}</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"flex items-center justify-between card-header-item-text\">\r\n                                    <span className=\"opacity-25\">{swapRouterName}</span>\r\n                                    <span className=\"numeric opacity-25\">\r\n                                        <i className=\"bi bi-box mr-1\" />\r\n                                        {$.convert.formatInteger(this.props.token.currentBlock)}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className={`mt-0.5 mb-3 ${this.props.borderBottom} border-2`}></div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    {/* Header View*/}\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4\">\r\n                        <PriceBox\r\n                            title=\"Price\"\r\n                            main={$.convert.formatStableToken(this.props.priceInStableToken)}\r\n                            mainUnit={$.contracts.stableToken.symbol}\r\n                            detail={$.convert.formatNativeToken(1 / this.props.priceInNativeToken)}\r\n                            detailUnit={`${this.props.token.details.symbol}/${$.contracts.nativeToken.symbol}`}\r\n                        />\r\n                        <PriceBox\r\n                            title={(<><span className=\"mr-1\">Balance</span><StyledPopover children={popoverSenderBalanceContent} /></>)}\r\n                            main={$.convert.formatMainToken(senderBalance)}\r\n                            mainUnit={this.props.token.details.symbol}\r\n                            detail={$.convert.formatMainToken(senderBalance * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Pending Reward\"\r\n                            main={$.convert.formatMainToken(senderPendingReward, 4, 4)}\r\n                            mainUnit={this.props.token.details.symbol}\r\n                            detail={this.props.token.isSenderNonrewardable ? \"Nonrewardable\" : $.convert.formatStableToken(senderPendingReward * this.props.priceInStableToken, 2, 2)}\r\n                            detailUnit={this.props.token.isSenderNonrewardable ? null : $.contracts.stableToken.symbol}\r\n                            mainClassName=\"neon\"\r\n                            detailClassName={`${this.props.token.isSenderNonrewardable ? \"uppercase text-red-400\" : \"\"}`}\r\n                        />\r\n                        <PriceBox\r\n                            containerClassName=\"auto-rows-auto\"\r\n                            title={(\r\n                                <>\r\n                                    Last Harvest\r\n                                    {this.props.token.isDirectHarvestingEnabled\r\n                                        ? (<i className=\"bi bi-lightning-charge-fill text-green-500\" />)\r\n                                        : null}\r\n                                    {this.props.token.isSenderDirectHarvester\r\n                                        ? (<i className=\"bi bi-lightning-charge-fill text-red-500\" />)\r\n                                        : null}\r\n                                </>\r\n                            )}\r\n                            main={this.props.showHarvestButton && lastHarvest}\r\n                            info={!this.props.showHarvestButton && lastHarvest}\r\n                            detail={(\r\n                                <>\r\n                                    {this.props.showHarvestButton &&\r\n                                        <div className=\"sm:container font-display mt-1\">\r\n                                            <button\r\n                                                autoFocus={true}\r\n                                                type=\"button\"\r\n                                                className=\"w-full h-9 btn btn-green\"\r\n                                                disabled={this.state.isInteractionDisabled || senderPendingReward === 0}\r\n                                                onClick={async () => {\r\n                                                    await this.execute(() => this.props.harvestPendingReward());\r\n                                                }}\r\n                                            >\r\n                                                Harvest the Reward\r\n                                            </button>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            )}\r\n                            mainClassName={this.props.showHarvestButton ? \"text-[0.875em]\" : \"\"}\r\n                            infoClassName={!this.props.showHarvestButton ? \"text-[1.4em] self-end\" : \"\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {(this.state.isDetailed && this.props.showHeader) &&\r\n                    <>\r\n                        {/* Supply View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-2 sm:col-span-4\">Supply Details</span>\r\n                                <PriceBox\r\n                                    title=\"Circulating Supply\"\r\n                                    main={$.convert.formatMainToken(totalSupply)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Market Cap.\"\r\n                                    main={$.convert.formatStableToken(totalSupply * this.props.priceInStableToken)}\r\n                                    mainUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Initial Supply\"\r\n                                    main={$.convert.formatMainToken(initialSupply)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(initialSupply * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                {(maximumSupply > 0)\r\n                                    ? <PriceBox\r\n                                        title=\"Maximum Supply\"\r\n                                        main={$.convert.formatMainToken(maximumSupply)}\r\n                                        mainUnit={this.props.token.details.symbol}\r\n                                        detail={$.convert.formatStableToken(maximumSupply * this.props.priceInStableToken)}\r\n                                        detailUnit={$.contracts.stableToken.symbol}\r\n                                    />\r\n                                    : <PriceBox\r\n                                        title=\"Maximum Supply\"\r\n                                        main=\"Dynamic\"\r\n                                        mainClassName=\"font-display\"\r\n                                    />\r\n                                }\r\n\r\n                                <div className={`col-span-2 sm:col-span-4 ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    title={(<><span className=\"mr-1\">Total Locked Supply</span><StyledPopover isTooltip={true} children={(<span>{tooltipTotalLockedSupplyText}</span>)} /></>)}\r\n                                    main={$.convert.formatMainToken(totalLockedSupply)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalLockedSupply * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Staked\"\r\n                                    main={$.convert.formatMainToken(totalStaked)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalStaked * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Supply in Contracts\"\r\n                                    main={$.convert.formatMainToken(supplyInContracts)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(supplyInContracts * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Supply in Nonrewardables\"\r\n                                    main={$.convert.formatMainToken(supplyInNonrewardables)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(supplyInNonrewardables * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Reward View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-6 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-6\">Token Emission</span>\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Reward Per Block [Min, Max]\"\r\n                                    main={`[${$.convert.formatMainToken(baseRewardPerBlock)}, ${maximumRewardPerBlock === 0 ? \"-\" : $.convert.formatMainToken(maximumRewardPerBlock)}]`}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Reward Multiplier\"\r\n                                    main={$.convert.formatNumberScaled(1 + rewardMultiplier)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"sm:hidden\">Avg. </span><span className=\"hidden sm:inline\">Average </span>Block Time</>)}\r\n                                    main={this.props.blockTime}\r\n                                    mainUnit=\"s\"\r\n                                />\r\n                                {/* <PriceBox\r\n                                    title={(<><span className=\"mr-1\">Maximum Reward Per Block</span>{!isRegularEmission && <StyledPopover children={popoverMaxRewardPerBlockContent} />}</>)}\r\n                                    main={$.convert.formatMainToken(maximumRewardPerBlock)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(maximumRewardPerBlock * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    mainClassName=\"glow\"\r\n                                /> */}\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"mr-1 hidden sm:inline\">Current Reward Per Block</span><span className=\"mr-1 sm:hidden\">Current Reward/Block</span><StyledPopover children={popoverCurrentRewardPerBlockContent} /></>)}\r\n                                    main={$.convert.formatMainToken(currentRewardPerBlock)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(currentRewardPerBlock * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    mainClassName=\"neon\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Pending Pool Reward\"\r\n                                    main={$.convert.formatMainToken(pendingPoolReward, 4, 4)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(pendingPoolReward * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    // info={this.getActivity2(blocksFromRewardLastDistributed, timeFromRewardLastDistributed)}\r\n                                    info={(<span><i className=\"bi bi-calendar2-check mr-1\" />{$.convert.formatInteger(rewardLastDistributedBlock)} / {$.convert.formatInteger(blocksFromRewardLastDistributed)}</span>)}\r\n                                    infoClassName=\"opacity-25 light-box\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Your Total Harvested\"\r\n                                    main={$.convert.formatMainToken(senderTotalHarvested)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(senderTotalHarvested * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.senderTotalHarvested.count, this.props.token.senderTotalHarvested.timestamp, now)}\r\n                                />\r\n\r\n                                <div className={`col-span-6 ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Transfer Burn Rate (TBR)\"\r\n                                    main={$.convert.formatPercentage(transferBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"mr-1\">Your Transfer Burn Rate</span><StyledPopover children={popoverSenderTransferBurnRateContent} /></>)}\r\n                                    main={this.props.token.isSenderNonburnable ? (<s>{$.convert.formatPercentage(senderTransferBurnRate)}</s>) : $.convert.formatPercentage(senderTransferBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                    info={this.props.token.isSenderNonburnable ? (<span className=\"font-display\">You're Burn Free</span>) : null}\r\n                                    infoClassName=\"opacity-75 font-semibold uppercase text-red-500\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Sales Burn Rates [Min, Max]\"\r\n                                    main={`[${$.convert.formatPercentage(salesBaseBurnRate)}, ${salesMaximumBurnRate === 0 ? \"-\" : $.convert.formatPercentage(salesMaximumBurnRate)}]`}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Sales Burn Multiplier\"\r\n                                    main={$.convert.formatNumberScaled(1 + burnMultiplier)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Current Sales Burn Rate (CSBR)\"\r\n                                    main={$.convert.formatPercentage(currentSalesBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title={(<><span className=\"mr-1\">Your Sales Burn Rate</span><StyledPopover children={popoverSenderSalesBurnRateContent} /></>)}\r\n                                    main={this.props.token.isSenderNonburnable ? (<s>{$.convert.formatPercentage(senderSalesBurnRate)}</s>) : $.convert.formatPercentage(senderSalesBurnRate)}\r\n                                    mainUnit=\"%\"\r\n                                    info={this.props.token.isSenderNonburnable ? (<span className=\"font-display\">You're Burn Free</span>) : null}\r\n                                    infoClassName=\"opacity-75 font-semibold uppercase text-red-500\"\r\n                                />\r\n\r\n                                <div className={`col-span-6 ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3\"\r\n                                    title={(<><span className=\"mr-1\">Your Total Rebated</span><StyledPopover isTooltip={true} children={(<span>{tooltipSenderTotalRebatedText}</span>)} /></>)}\r\n                                    main={$.convert.formatMainToken(senderTotalRebated)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(senderTotalRebated * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.senderTotalRebated.count, this.props.token.senderTotalRebated.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3\"\r\n                                    title=\"Your Total Burnt\"\r\n                                    main={$.convert.formatMainToken(senderTotalBurnt)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(senderTotalBurnt * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.senderTotalBurnt.count, this.props.token.senderTotalBurnt.timestamp, now)}\r\n                                />\r\n\r\n                                <span className=\"group-title light-box opacity-75 col-span-6\">Inflation Regulator</span>\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Time From Last Regulation\"\r\n                                    main={$.convert.formatTimespan(now - regulationTimestamp)}\r\n                                    mainClassName={now - regulationTimestamp > regulationInterval ? \"text-red-500\" : null}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Regulation Interval\"\r\n                                    main={$.convert.formatTimespan(regulationInterval)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-2\"\r\n                                    title=\"Interval Average Price\"\r\n                                    main={$.convert.formatStableToken(priceAverage * nativeTokenPriceInStableToken)}\r\n                                    mainUnit={$.contracts.stableToken.symbol}\r\n                                    detail={priceAverage == 0 ? \"-\" : $.convert.formatNativeToken(1 / priceAverage)}\r\n                                    detailUnit={`${this.props.token.details.symbol}/${$.contracts.nativeToken.symbol}`}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Info View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-4\">Current Percentage Yield</span>\r\n                                <PriceBox\r\n                                    title=\"Daily\"\r\n                                    main={$.convert.formatPercentage(cdpy, 4)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Weekly\"\r\n                                    main={$.convert.formatPercentage(cwpy, 3)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Monthly\"\r\n                                    main={$.convert.formatPercentage(cmpy)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Annual\"\r\n                                    main={$.convert.formatPercentage(capy)}\r\n                                    mainUnit=\"%\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* General View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-6 sm:grid-cols-5 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-6 sm:col-span-5\">Liquidity & Others</span>\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-1\"\r\n                                    title=\"Total Liquidity\"\r\n                                    main={$.convert.formatMainToken(this.props.token.tokenReserve)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatNativeToken(this.props.token.nativeTokenReserve)}\r\n                                    detailClassName=\"text-[1.4em] before:content-['+'] before:block before:text-[0.75em]\"\r\n                                    detailUnit={$.contracts.nativeToken.symbol}\r\n                                    detailUnitClassName=\"text-[0.75em]\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-3 sm:col-span-1\"\r\n                                    title=\"Initial Liquidity\"\r\n                                    main={$.convert.formatMainToken(this.props.token.initialTokenReserve)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatNativeToken(this.props.token.initialNativeTokenReserve)}\r\n                                    detailClassName=\"text-[1.4em] before:content-['+'] before:block before:text-[0.75em]\"\r\n                                    detailUnit={$.contracts.nativeToken.symbol}\r\n                                    detailUnitClassName=\"text-[0.75em]\"\r\n                                />\r\n\r\n                                <div className={`col-span-6 sm:hidden ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-2 sm:col-span-1\"\r\n                                    title={(<><span className=\"mr-1\">Seigniorage Fee</span><StyledPopover isTooltip={true} children={(<span>{tooltipSeigniorageFeeText}</span>)} /></>)}\r\n                                    main={$.convert.formatPercentage(seigniorageFee)}\r\n                                    mainUnit=\"%\"\r\n                                    detail={(<a href={seignioryExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric\">{$.convert.formatAccount(this.props.token.seigniory)}</a>)}\r\n                                    info={this.props.token.isSenderSeignory ? (<span className=\"font-display\">You're Seignory</span>) : null}\r\n                                    infoClassName=\"opacity-75 light-box font-semibold uppercase text-red-500\"\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-2 sm:col-span-1\"\r\n                                    title=\"Transfers\"\r\n                                    main={$.convert.formatInteger(this.props.token.transfers)}\r\n                                />\r\n                                <PriceBox\r\n                                    containerClassName=\"col-span-2 sm:col-span-1\"\r\n                                    title=\"Holders\"\r\n                                    main={$.convert.formatInteger(this.props.token.holders)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Totals View */}\r\n                        <div className={`card bg-weeb-card1/40 bg-diagonal-lines`}>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-3 xl:grid-cols-6 gap-x-2 gap-y-4 text-[80%]\">\r\n                                <span className=\"group-title light-box opacity-75 col-span-2 md:col-span-3 xl:col-span-6\">Statistics</span>\r\n                                <PriceBox\r\n                                    title={(<>Total Transacted<span className=\"hidden sm:inline\"> Volume</span></>)}\r\n                                    main={$.convert.formatMainToken(totalTransacted)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalTransacted * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalTransacted.count, this.props.token.totalTransacted.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Seigniorage Collected\"\r\n                                    main={$.convert.formatMainToken(seigniorageFeeCollected)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(seigniorageFeeCollected * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.seigniorageFee.collected.count, this.props.token.seigniorageFee.collected.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Rebated\"\r\n                                    main={$.convert.formatMainToken(totalRebated)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalRebated * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalRebated.count, this.props.token.totalRebated.timestamp, now)}\r\n                                />\r\n\r\n                                <div className={`hidden md:block md:col-span-3 xl:hidden ${this.props.borderBottom}`}></div>\r\n\r\n                                <PriceBox\r\n                                    title=\"Total Burnt\"\r\n                                    main={$.convert.formatMainToken(totalBurnt)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalBurnt * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalBurnt.count, this.props.token.totalBurnt.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Rewarded\"\r\n                                    main={$.convert.formatMainToken(totalRewarded)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalRewarded * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Total Harvested\"\r\n                                    main={$.convert.formatMainToken(totalHarvested)}\r\n                                    mainUnit={this.props.token.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalHarvested * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.token.totalHarvested.count, this.props.token.totalHarvested.timestamp, now)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Content generators\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActivity2(count, timespan) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-calendar2-check mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timespan > 0 ? $.convert.formatTimespan(timespan) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSimulatedRewardPerBlockValues(rewardPerBlock, reducedEmissionHolderLimit) {\r\n        const values = [];\r\n\r\n        for (let i = 0; i <= reducedEmissionHolderLimit;) {\r\n            values.push({\r\n                holder: i,\r\n                rewardPerBlock: rewardPerBlock * i / reducedEmissionHolderLimit\r\n            });\r\n\r\n            i += 100;\r\n\r\n            // if (i <= 10) {\r\n            //     i += 1;\r\n            // } else if (i <= 100) {\r\n            //     i += 10;\r\n            // } else {\r\n            //     i += 100;\r\n            // }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    // Actions\r\n    toggleDetailedVisibility() {\r\n        this.setState({ isDetailed: !this.state.isDetailed });\r\n    }\r\n\r\n    async execute(func) {\r\n        this.setState({ isInteractionDisabled: true });\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.setState({ isInteractionDisabled: false });\r\n        }\r\n    }\r\n}\r\n","export function getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf(factor, reserveQuoteAsset) {\r\n    return (Math.sqrt(factor) - 1) * reserveQuoteAsset;\r\n}\r\n\r\nexport function getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf(factor, reserveBaseAsset) {\r\n    return (1 / Math.sqrt(factor) - 1) * reserveBaseAsset;\r\n}\r\n\r\nexport function getPriceIncreaseFactorFromQuoteAssetInflow(inflowQuoteAssetAmount, reserveQuoteAsset) {\r\n    return Math.pow((inflowQuoteAssetAmount / reserveQuoteAsset + 1), 2);\r\n}\r\n\r\nexport function getPriceDecreaseFactorFromBaseAssetOutflow(outflowBaseAssetAmount, reserveBaseAsset) {\r\n    return Math.pow(1 / (outflowBaseAssetAmount / reserveBaseAsset + 1), 2);\r\n}\r\n\r\nexport function getAmountOut(amount0In, reserve0, reserve1) {\r\n    return amount0In * reserve1 / (amount0In + reserve0);\r\n}","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MainText } from \"../../../InfoBox\";\r\n\r\nexport default function RangeInput({\r\n    isDisabled,\r\n    min,\r\n    max,\r\n    decimals,\r\n    percentages,\r\n    valueClassName,\r\n    rangeClassName,\r\n    buttonClassName,\r\n    setValue,\r\n    setPercentage\r\n}) {\r\n    const [value, setValueInternal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const v = parseFloat(value);\r\n        const m = parseFloat(max);\r\n\r\n        if (v > m) {\r\n            updateValues(m);\r\n        }\r\n    }, [max]);\r\n\r\n    function format(x) {\r\n        return x ? parseFloat(parseFloat(x).toFixed(decimals)) : 0;\r\n    }\r\n\r\n    function getStep() {\r\n        return !isNaN(decimals) ? Math.pow(10, -decimals) : 0;\r\n    }\r\n\r\n    function updateValues(n) {\r\n        const mx = parseFloat(max);\r\n        const mn = parseFloat(min);\r\n\r\n        if (n > mx) {\r\n            n = mx;\r\n        }\r\n\r\n        if (n < mn) {\r\n            n = mn;\r\n        }\r\n\r\n        setValueInternal(n);\r\n        setValue(n);\r\n\r\n        // Update the percentage.\r\n        const r = mx - mn;\r\n        setPercentage(r !== 0 ? n / r : 0);\r\n    }\r\n\r\n    function onValueChanged(e) {\r\n        updateValues(e.target.value != null ? format(e.target.value) : 0);\r\n    }\r\n\r\n    function setPercentageFormatted(percentage) {\r\n        const mx = parseFloat(max);\r\n        const mn = parseFloat(min);\r\n\r\n        const n = mn + (mx - mn) * percentage / 100;\r\n        updateValues(n);\r\n    }\r\n\r\n    function getSelectablePercentages() {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < percentages.length; ++i) {\r\n            const percentage = percentages[i];\r\n\r\n            items.push((\r\n                <button key={i}\r\n                    type=\"button\"\r\n                    className={`${buttonClassName} ${i < 2 ? \"hidden lg:inline\" : \"\"}`}\r\n                    onClick={() => setPercentageFormatted(percentage)}\r\n                >\r\n                    <MainText\r\n                        sizeCount={1}\r\n                        main={percentage}\r\n                        mainUnit=\"%\"\r\n                        mainClassName=\"!text-[0.875em]\"\r\n                        mainUnitClassName=\"!text-[0.6875em] ml-0.5\"\r\n                    />\r\n                </button>\r\n            ));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-y-1\">\r\n            <input\r\n                disabled={isDisabled}\r\n                type=\"number\"\r\n                className={`text-[2em] numeric text-right h-fit ${valueClassName}`}\r\n                min={format(min)}\r\n                max={format(max)}\r\n                step={format(getStep())}\r\n                value={format(value)}\r\n                onInput={onValueChanged}\r\n            />\r\n            <input\r\n                disabled={isDisabled}\r\n                type=\"range\"\r\n                list=\"tickmarks\"\r\n                className={`border-0 focus:border-0 ring-0 focus:ring-0 ${rangeClassName}`}\r\n                min={format(min)}\r\n                max={format(max)}\r\n                step={format(getStep())}\r\n                value={format(value)}\r\n                onInput={onValueChanged}\r\n            />\r\n            {/* <datalist id=\"tickmarks\">\r\n                <option value=\"0\" label=\"0%\"></option>\r\n                <option value=\"10\"></option>\r\n                <option value=\"20\"></option>\r\n                <option value=\"30\"></option>\r\n                <option value=\"40\"></option>\r\n                <option value=\"50\" label=\"50%\"></option>\r\n                <option value=\"60\"></option>\r\n                <option value=\"70\"></option>\r\n                <option value=\"80\"></option>\r\n                <option value=\"90\"></option>\r\n                <option value=\"100\" label=\"100%\"></option>\r\n            </datalist> */}\r\n            <div className=\"flex items-center justify-center space-x-2 lg:justify-evenly\">\r\n                {getSelectablePercentages()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nRangeInput.propTypes = {\r\n    percentages: PropTypes.array,\r\n    buttonClassName: PropTypes.string\r\n};\r\n\r\nRangeInput.defaultProps = {\r\n    percentages: [1, 2, 5, 10, 25, 50, 75, 100],\r\n    buttonClassName: \"btn btn-indigo text-violet-50 numeric w-11 h-7\"\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function DelayedInput({\r\n    delay,\r\n    type,\r\n    id,\r\n    className,\r\n    defaultValue,\r\n    placeholder,\r\n    list,\r\n    min,\r\n    max,\r\n    step,\r\n    onInput\r\n}) {\r\n    const [input, setInput] = useState();\r\n\r\n    useEffect(() => {\r\n        //if (!input) {\r\n            setInput(defaultValue);\r\n        //}\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => onInput(input), delay);\r\n        return () => clearTimeout(timerId);\r\n    }, [input]);\r\n\r\n    return (\r\n        <input\r\n            type={type}\r\n            autoComplete=\"off\"\r\n            id={id}\r\n            className={className}\r\n            value={input ? type === \"number\" && isNaN(input) ? \"\" : input : \"\"}\r\n            placeholder={placeholder}\r\n            list={list}\r\n            min={min}\r\n            max={max}\r\n            step={step}\r\n            onChange={e => setInput(e.target.value)}\r\n        />\r\n    )\r\n}\r\n\r\nDelayedInput.propTypes = {\r\n    delay: PropTypes.number,\r\n    type: PropTypes.string,\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    defaultValue: PropTypes.any,\r\n    placeholder: PropTypes.string,\r\n    list: PropTypes.string,\r\n    step: PropTypes.any,\r\n    onInput: PropTypes.func\r\n}\r\n\r\nDelayedInput.defaultProps = {\r\n    delay: 400,\r\n    type: \"search\",\r\n    placeholder: \"Search here...\",\r\n    onInput: () => {\r\n    }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Switch } from \"@headlessui/react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { getAmountOut } from \"../../utils/PriceExtensions\";\r\n\r\nimport RangeInput from \"./dialogs/core/RangeInput\";\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\n\r\nimport { MainText, PriceBox } from \"../InfoBox\";\r\nimport Configuration from \"../../Configuration\";\r\n\r\nexport default function Swap({\r\n    isDarkTheme,\r\n    nativeCoinBalance,\r\n    token,\r\n    nativeTokenPriceInStableToken,\r\n    swap\r\n}) {\r\n    const Mode = Object.freeze({\r\n        Buy: 0,\r\n        Sell: 1\r\n    });\r\n\r\n    const [showSlippageTolerance, setShowSlippageTolerance] = useState(false);\r\n    const [isInteractionDisabled, setIsInteractionDisabled] = useState(false);\r\n\r\n    const [mode, setMode] = useState(Mode.Buy);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [recipient, setRecipient] = useState();\r\n\r\n    const [maxReceived, setMaxReceived] = useState(0);\r\n    const [minReceived, setMinReceived] = useState(0);\r\n    const [maxPriceImpact, setMaxPriceImpact] = useState(0);\r\n    const [minPriceImpact, setMinPriceImpact] = useState(0);\r\n\r\n    const tokenBalance = $.convert.fromWeiMainToken(token.senderFreeBalance);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (amount > 0) {\r\n                const tokenPriceInNativeToken = token.nativeTokenReserve / token.tokenReserve;\r\n                const swapFee = Configuration.getSwapRouterSwapFee($.chainId, Configuration.getDefaultSwapRouter($.chainId)) / 10000;\r\n\r\n                console.log({ tokenReserve: token.tokenReserve, nativeTokenReserve: token.nativeTokenReserve });\r\n                console.log(`initial price: ${nativeTokenPriceInStableToken * tokenPriceInNativeToken}`);\r\n\r\n                if (mode === Mode.Buy) {\r\n                    // const max = await $.router.getMainTokenAmountFromNativeCoin(amount);\r\n                    // setMaxReceived(max);\r\n\r\n                    const max = getAmountOut(amount * (1 - swapFee), token.nativeTokenReserve, token.tokenReserve);\r\n                    setMaxReceived(max);\r\n\r\n                    const min = max - max * $.settings.getSlippageTolerance() / 10000;\r\n                    setMinReceived(min);\r\n\r\n                    let finalTokenPriceInNativeToken = (amount * (1 - swapFee) + token.nativeTokenReserve) / (token.tokenReserve - max);\r\n                    let priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMaxPriceImpact(priceImpact);\r\n\r\n                    finalTokenPriceInNativeToken = (amount * (1 - swapFee) + token.nativeTokenReserve) / (token.tokenReserve - min);\r\n                    priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMinPriceImpact(priceImpact);\r\n\r\n                    console.log(`mainTokenOut: ${max}; price: ${nativeTokenPriceInStableToken * finalTokenPriceInNativeToken}`);\r\n                } else {\r\n                    // const max = await $.router.getNativeCoinAmountFromMainToken(amount);\r\n                    // setMaxReceived(max);\r\n\r\n                    const max = getAmountOut(amount * (1 - swapFee), token.tokenReserve, token.nativeTokenReserve);\r\n                    setMaxReceived(max);\r\n\r\n                    const min = max - max * $.settings.getSlippageTolerance() / 10000;\r\n                    setMinReceived(min);\r\n\r\n                    let finalTokenPriceInNativeToken = (token.nativeTokenReserve - max) / (token.tokenReserve + amount * (1 - swapFee));\r\n                    let priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMaxPriceImpact(priceImpact);\r\n\r\n                    finalTokenPriceInNativeToken = (token.nativeTokenReserve - min) / (token.tokenReserve + amount * (1 - swapFee));\r\n                    priceImpact = (finalTokenPriceInNativeToken - tokenPriceInNativeToken) / tokenPriceInNativeToken;\r\n                    setMinPriceImpact(priceImpact);\r\n\r\n                    console.log(`nativeTokenOut: ${max}; price: ${nativeTokenPriceInStableToken * finalTokenPriceInNativeToken}`);\r\n                }\r\n            }\r\n        })();\r\n    }, [amount, token.tokenReserve, token.nativeTokenReserve]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-y-3\">\r\n                <div className=\"flex items-center justify-between group-title light-box opacity-75 h-9 px-2\">\r\n                    <Switch.Group>\r\n                        <div className=\"flex items-center\">\r\n                            <Switch\r\n                                checked={mode === Mode.Buy}\r\n                                onChange={toggleMode}\r\n                                className={`${isDarkTheme ? \"bg-violet-900/80\" : \"bg-violet-300\"} relative inline-flex items-center h-5 rounded-full w-11 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-violet-300/50`}\r\n                            >\r\n                                <span className=\"sr-only\">Swap mode</span>\r\n                                <span className={`${mode === Mode.Buy ? \"translate-x-6\" : \"translate-x-1\"} inline-block w-4 h-4 transform ${isDarkTheme ? \"bg-violet-300\" : \"bg-slate-800\"} rounded-full transition-transform`} />\r\n                            </Switch>\r\n                            <Switch.Label className=\"leading-6 ml-1.5\">\r\n                                {mode === Mode.Buy ? \"Buy\" : \"Sell\"} {$.contracts.token.symbol}\r\n                            </Switch.Label>\r\n                        </div>\r\n                    </Switch.Group>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                    <div className=\"flex items-center justify-between leading-6\">\r\n                        <span className=\"input-label\">\r\n                            Amount:\r\n                            <span className=\"ml-1\">\r\n                                (\r\n                                <MainText\r\n                                    main={$.convert.formatPercentage(percentage)}\r\n                                    mainUnit=\"%\"\r\n                                    mainClassName=\"text-[1em]\"\r\n                                    mainUnitClassName=\"ml-0.5\"\r\n                                />\r\n                                )\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"input-label\">\r\n                            Balance:\r\n                            <MainText\r\n                                main={mode === Mode.Buy ? nativeCoinBalance ? $.convert.formatNativeCoin(nativeCoinBalance) : \"-\" : tokenBalance ? $.convert.formatMainToken(tokenBalance) : \"-\"}\r\n                                mainUnit={mode === Mode.Buy ? $.nativeCoin.symbol : $.contracts.token.symbol}\r\n                                mainClassName=\"text-[1em] ml-1\"\r\n                                mainUnitClassName=\"ml-0.5\"\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                    <div className={`${isDarkTheme ? \"accent-violet-300\" : \"\"}`}>\r\n                        <RangeInput\r\n                            min={0}\r\n                            max={mode === Mode.Buy ? nativeCoinBalance ? nativeCoinBalance : 0 : tokenBalance ? tokenBalance : 0}\r\n                            decimals={Math.min(mode === Mode.Buy ? $.nativeCoin.decimals : $.contracts.token.decimals, 4)}\r\n                            setValue={setAmount}\r\n                            setPercentage={setPercentage}\r\n                            valueClassName={`${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                            rangeClassName={`${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                            buttonClassName={`btn btn-violet text-indigo-50 numeric w-11 h-7 ${isDarkTheme ? \"bg-violet-900/80\" : \"bg-violet-900/20\"} hover:text-violet-900 focus:hover:text-violet-200`}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 gap-y-1\">\r\n                    <label htmlFor=\"recipient\" className=\"flex leading-6\">\r\n                        <span className=\"input-label\">Recipient:</span>\r\n                    </label>\r\n                    <DelayedInput\r\n                        delay={400}\r\n                        type=\"search\"\r\n                        id=\"recipient\"\r\n                        className={`numeric !text-[1em] text-right ${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                        placeholder={`Enter recipient address${$.account ? \" or leave blank if it's you\" : \"\"}`}\r\n                        onInput={value => setRecipient(value)}\r\n                    />\r\n                </div>\r\n                <div className=\"flex items-start justify-between\">\r\n                    <div className=\"lg:col-span-2 justify-self-start\">\r\n                        <span\r\n                            className=\"cursor-pointer text-[1.125em] leading-none shadow-none\"\r\n                            onClick={() => {\r\n                                toggleSlippageTolerance();\r\n                            }}\r\n                        >\r\n                            {showSlippageTolerance\r\n                                ? <i className=\"bi bi-gear-fill\" />\r\n                                : <i className=\"bi bi-gear\" />\r\n                            }\r\n                        </span>\r\n                        <span className=\"ml-2\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className={`w-20 numeric !text-[1em] text-right transition origin-left ${showSlippageTolerance ? \"scale-x-100\" : \"scale-x-0\"} ${isDarkTheme ? \"bg-violet-900/80\" : \"\"}`}\r\n                                defaultValue={$.settings.getSlippageTolerance() / 100}\r\n                                placeholder=\"Enter slippage tolerance\"\r\n                                min={0}\r\n                                step={0.01}\r\n                                onChange={e => {\r\n                                    $.settings.setSlippageTolerance(parseFloat(e.target.value) * 100);\r\n                                }}\r\n                            />\r\n                            <span className={`ml-1 numeric transition ${showSlippageTolerance ? null : \"hidden\"}`}>%</span>\r\n                        </span>\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`lg:col-span-2 w-28 h-9 text-[0.75em] btn btn-green justify-self-end ${isDarkTheme ? \"text-violet-50\" : \"\"}`}\r\n                        disabled={isInteractionDisabled || amount === 0 || !(recipient ? Web3.utils.isAddress(recipient.toLowerCase()) : true)}\r\n                        onClick={async () => {\r\n                            await execute(() => swap(amount, minReceived, recipient, mode === Mode.Buy));\r\n                        }}>\r\n                        {mode === Mode.Buy ? \"Buy\" : \"Sell\"}\r\n                    </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-y-4 gap-x-2 items-center text-[80%]\">\r\n                    <PriceBox\r\n                        title=\"To be Received (Min, Max)\"\r\n                        main={mode === Mode.Buy ? $.convert.formatNativeCoin(minReceived) : $.convert.formatMainToken(minReceived)}\r\n                        mainUnit={mode === Mode.Buy ? $.contracts.token.symbol : $.nativeCoin.symbol}\r\n                        detail={mode === Mode.Buy ? $.convert.formatNativeCoin(maxReceived) : $.convert.formatMainToken(maxReceived)}\r\n                        detailUnit={mode === Mode.Buy ? $.contracts.token.symbol : $.nativeCoin.symbol}\r\n                        detailClassName=\"opacity-100 text-[1.4em]\"\r\n                        detailUnitClassName=\"!opacity-75 !text-[0.75em]\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Price Impact (Min, Max)\"\r\n                        detail={$.convert.formatPercentage(maxPriceImpact, 4, 2)}\r\n                        detailUnit=\"%\"\r\n                        main={$.convert.formatPercentage(minPriceImpact, 4, 2)}\r\n                        mainUnit=\"%\"\r\n                        detailClassName=\"opacity-100 text-[1.4em]\"\r\n                        detailUnitClassName=\"!opacity-75 !text-[0.75em]\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    function toggleMode() {\r\n        if (mode === Mode.Buy) {\r\n            setMode(Mode.Sell);\r\n        } else {\r\n            setMode(Mode.Buy);\r\n        }\r\n    }\r\n\r\n    function toggleSlippageTolerance() {\r\n        setShowSlippageTolerance(!showSlippageTolerance);\r\n    }\r\n\r\n    async function execute(func) {\r\n        setIsInteractionDisabled(true);\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setIsInteractionDisabled(false);\r\n        }\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport RangeInput from \"./dialogs/core/RangeInput\";\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\n\r\nimport { MainText } from \"../InfoBox\";\r\n\r\nimport { MAX_UINT256 } from \"../../utils/Utils\";\r\n\r\nexport default function Transfer({\r\n    balance\r\n}) {\r\n    const [isInteractionDisabled, setIsInteractionDisabled] = useState(false);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [recipient, setRecipient] = useState();\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-y-3 items-center\">\r\n            <div className=\"flex items-center justify-center group-title light-box opacity-75 h-9 px-2\">\r\n                <span>\r\n                    Transfer {$.contracts.token.symbol}\r\n                </span>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                <div className=\"flex items-center justify-between leading-6\">\r\n                    <span className=\"input-label\">\r\n                        Amount:\r\n                        <span className=\"ml-1\">\r\n                            (\r\n                            <MainText\r\n                                main={$.convert.formatPercentage(percentage)}\r\n                                mainUnit=\"%\"\r\n                                mainClassName=\"text-[1em]\"\r\n                                mainUnitClassName=\"ml-0.5\"\r\n                            />\r\n                            )\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"input-label\">\r\n                        Balance:\r\n                        <MainText\r\n                            main={balance ? $.convert.formatMainToken(balance) : \"-\"}\r\n                            mainUnit={$.contracts.token.symbol}\r\n                            mainClassName=\"text-[1em] ml-1\"\r\n                            mainUnitClassName=\"ml-0.5\"\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <RangeInput\r\n                        min={0}\r\n                        max={balance ? balance : 0}\r\n                        decimals={Math.min($.contracts.token.decimals, 4)}\r\n                        setValue={setAmount}\r\n                        setPercentage={setPercentage}\r\n                        buttonClassName=\"btn btn-violet text-indigo-50 numeric w-11 h-7 bg-violet-900/20 hover:text-violet-900 focus:hover:text-violet-200\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 gap-y-1\">\r\n                <label htmlFor=\"recipient\" className=\"flex leading-6\">\r\n                    <span className=\"input-label\">Recipient:</span>\r\n                </label>\r\n                <DelayedInput\r\n                    delay={400}\r\n                    type=\"search\"\r\n                    id=\"recipient\"\r\n                    className=\"numeric !text-[1em] text-right\"\r\n                    placeholder=\"Enter recipient address\"\r\n                    onInput={value => setRecipient(value)}\r\n                />\r\n            </div>\r\n            <div className=\"flex items-start justify-end\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"w-28 h-9 text-[0.75em] btn btn-green\"\r\n                    disabled={isInteractionDisabled || !(recipient && Web3.utils.isAddress(recipient.toLowerCase())) || amount === 0}\r\n                    onClick={async () => {\r\n                        const value = amount === balance ? MAX_UINT256 : $.convert.toWeiMainToken(amount);\r\n                        await execute(() => $.token.transfer(recipient, value));\r\n                    }}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    async function execute(func) {\r\n        setIsInteractionDisabled(true);\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setIsInteractionDisabled(false);\r\n        }\r\n    }\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox } from \"../InfoBox\";\r\n\r\nimport { getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf, getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf } from \"../../utils/PriceExtensions\";\r\n\r\nexport default function InflowOutflowCalculator({\r\n    tokenReserve,\r\n    nativeTokenReserve,\r\n    tokenPriceInStableToken,\r\n    nativeTokenPriceInStableToken\r\n}) {\r\n    const Mode = Object.freeze({\r\n        None: 0,\r\n        Inflow: 1,\r\n        Outflow: 2\r\n    });\r\n\r\n    const [targetPrice, setTargetPrice] = useState(0);\r\n    const [mode, setMode] = useState(Mode.None);\r\n    const [assetAmountRequired, setAssetAmountRequired] = useState();\r\n\r\n    useEffect(() => {\r\n        const factor = targetPrice / tokenPriceInStableToken;\r\n\r\n        if (targetPrice > tokenPriceInStableToken) {\r\n            const quoteAssetAmountRequired = getQuoteAssetInflowRequiredToIncreaseThePriceByFactorOf(factor, nativeTokenReserve);\r\n            setAssetAmountRequired(quoteAssetAmountRequired);\r\n            setMode(Mode.Inflow);\r\n        } else if (targetPrice < tokenPriceInStableToken) {\r\n            const baseAssetAmountRequired = getBaseAssetOutflowRequiredToDecreaseThePriceByFactorOf(factor, tokenReserve);\r\n            setAssetAmountRequired(baseAssetAmountRequired);\r\n            setMode(Mode.Outflow);\r\n        } else {\r\n            setAssetAmountRequired(undefined);\r\n            setMode(Mode.None);\r\n        }\r\n    }, [tokenReserve, nativeTokenReserve, tokenPriceInStableToken, nativeTokenPriceInStableToken, targetPrice]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                <div>\r\n                    <span className=\"text-[0.5em] text-violet-100/50 light-box block mb-4 min-h-[5.5em] xs:min-h-[4em]\">\r\n                        Calculates the amount of inflow or outflow required to bring the price to the desired level.\r\n                    </span>\r\n                    <div className=\"grid grid-cols-1 gap-y-1\">\r\n                        <label htmlFor=\"price\" className=\"flex leading-6\">\r\n                            <span className=\"input-label\">Target price</span>\r\n                        </label>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"number\"\r\n                            id=\"price\"\r\n                            className=\"numeric !text-[1em] text-right\"\r\n                            defaultValue={$.convert.formatStableToken(tokenPriceInStableToken * 2, 4, 0)}\r\n                            placeholder={`${$.contracts.token.symbol} price in ${$.contracts.stableToken.symbol}`}\r\n                            min={0}\r\n                            step={1}\r\n                            onInput={value => setTargetPrice(parseFloat(value))}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-[80%]\">\r\n                    {mode === Mode.Inflow &&\r\n                        <PriceBox\r\n                            title=\"Required Inflow\"\r\n                            main={$.convert.formatNativeToken(assetAmountRequired)}\r\n                            mainUnit={$.contracts.nativeToken.symbol}\r\n                            detail={$.convert.formatStableToken(assetAmountRequired * nativeTokenPriceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            mainUnitClassName=\"neon\"\r\n                        />\r\n                    }\r\n                    {mode === Mode.Outflow &&\r\n                        <PriceBox\r\n                            title=\"Required Outflow\"\r\n                            main={$.convert.formatMainToken(assetAmountRequired)}\r\n                            mainUnit={$.contracts.token.symbol}\r\n                            detail={$.convert.formatStableToken(assetAmountRequired * tokenPriceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            mainUnitClassName=\"glow\"\r\n                        />\r\n                    }\r\n                    {mode === Mode.None && <p>No change</p>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nInflowOutflowCalculator.propTypes = {\r\n    tokenReserve: PropTypes.number,\r\n    nativeTokenReserve: PropTypes.number,\r\n    tokenPriceInStableToken: PropTypes.number,\r\n    nativeTokenPriceInStableToken: PropTypes.number\r\n}\r\n\r\nInflowOutflowCalculator.defaultProps = {\r\n\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Switch } from \"@headlessui/react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox } from \"../InfoBox\";\r\n\r\nimport { getPriceIncreaseFactorFromQuoteAssetInflow, getPriceDecreaseFactorFromBaseAssetOutflow } from \"../../utils/PriceExtensions\";\r\n\r\nexport default function TargetPriceCalculator({\r\n    tokenReserve,\r\n    nativeTokenReserve,\r\n    tokenPriceInStableToken,\r\n    nativeTokenPriceInStableToken\r\n}) {\r\n    const Mode = Object.freeze({\r\n        Inflow: 0,\r\n        Outflow: 1\r\n    });\r\n\r\n    const [mode, setMode] = useState(Mode.Inflow);\r\n    const [assetAmount, setAssetAmount] = useState(1);\r\n    const [targetPrice, setTargetPrice] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const factor = mode === Mode.Inflow\r\n            ? getPriceIncreaseFactorFromQuoteAssetInflow(assetAmount, nativeTokenReserve)\r\n            : getPriceDecreaseFactorFromBaseAssetOutflow(assetAmount, tokenReserve);\r\n        setTargetPrice(tokenPriceInStableToken * factor);\r\n    }, [tokenReserve, nativeTokenReserve, tokenPriceInStableToken, nativeTokenPriceInStableToken, mode, assetAmount]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                <div>\r\n                    <span className=\"text-[0.5em] text-violet-100/50 light-box block mb-4 min-h-[5.5em] xs:min-h-[4em]\">\r\n                        Calculates the level to which the given inflow or outflow amount brings the price.\r\n                    </span>\r\n                    <div className=\"grid grid-cols-1 gap-y-1\">\r\n                        <Switch.Group>\r\n                            <div className=\"flex items-center\">\r\n                                <Switch\r\n                                    checked={mode === Mode.Inflow}\r\n                                    onChange={toggleMode}\r\n                                    className=\"bg-violet-300 relative inline-flex items-center w-10 h-[1em] rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-violet-300/50\"\r\n                                >\r\n                                    <span className=\"sr-only\">Flow mode</span>\r\n                                    <span className={`${mode === Mode.Inflow ? \"translate-x-6\" : \"translate-x-1\"} inline-block w-[0.75em] h-[0.75em] transform bg-slate-800 rounded-full transition-transform`} />\r\n                                </Switch>\r\n                                <Switch.Label className=\"input-label leading-6 ml-1.5\">\r\n                                    {mode === Mode.Inflow ? `Inflow ${$.contracts.nativeToken.symbol}` : `Outflow ${$.contracts.token.symbol}`}\r\n                                </Switch.Label>\r\n                            </div>\r\n                        </Switch.Group>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"number\"\r\n                            id=\"assetAmount\"\r\n                            className=\"numeric !text-[1em] text-right\"\r\n                            defaultValue={assetAmount}\r\n                            placeholder=\"Asset amount\"\r\n                            min={0}\r\n                            step={1}\r\n                            onInput={value => setAssetAmount(parseFloat(value))} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-[80%]\">\r\n                    <PriceBox\r\n                        title=\"Target Price\"\r\n                        main={isNaN(targetPrice) ? \"-\" : $.convert.formatStableToken(targetPrice)}\r\n                        mainUnit={$.contracts.stableToken.symbol}\r\n                        detail={isNaN(targetPrice) ? \"-\" : $.convert.formatNativeToken(targetPrice / nativeTokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.nativeToken.symbol}\r\n                        mainUnitClassName=\"glow\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    function toggleMode() {\r\n        if (mode === Mode.Inflow) {\r\n            setMode(Mode.Outflow);\r\n        } else {\r\n            setMode(Mode.Inflow);\r\n        }\r\n    }\r\n}\r\n\r\nTargetPriceCalculator.propTypes = {\r\n    tokenReserve: PropTypes.number,\r\n    nativeTokenReserve: PropTypes.number,\r\n    tokenPriceInStableToken: PropTypes.number,\r\n    nativeTokenPriceInStableToken: PropTypes.number\r\n}\r\n\r\nTargetPriceCalculator.defaultProps = {\r\n\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { DAYS_IN_WEEK, DAYS_IN_MONTH, DAYS_IN_YEAR, getRewardPerDay } from \"../../utils/InterestExtensions\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox } from \"../InfoBox\";\r\n\r\nexport default function RewardCalculator({\r\n    senderBalance,\r\n    totalStaked,\r\n    currentRewardPerBlock,\r\n    maxRewardPerBlock,\r\n    isMaximizedEmission,\r\n    blockTime,\r\n    tokenPriceInStableToken\r\n}) {\r\n    const [targetBalance, setTargetBalance] = useState();\r\n    const [currentRewards, setCurrentRewards] = useState([0, 0, 0, 0]);\r\n    const [maxRewards, setMaxRewards] = useState([0, 0, 0, 0]);\r\n\r\n    useEffect(() => {\r\n        if (!targetBalance) {\r\n            setTargetBalance(parseFloat(senderBalance));\r\n        }\r\n    }, [senderBalance]);\r\n\r\n    useEffect(() => {\r\n        const currentRewardPerD = getRewardPerDay(currentRewardPerBlock, blockTime, totalStaked, targetBalance);\r\n        const currentRewardPerW = currentRewardPerD * DAYS_IN_WEEK;\r\n        const currentRewardPerM = currentRewardPerD * DAYS_IN_MONTH;\r\n        const currentRewardPerY = currentRewardPerD * DAYS_IN_YEAR;\r\n\r\n        const maxRewardPerD = getRewardPerDay(maxRewardPerBlock, blockTime, totalStaked, targetBalance);\r\n        const maxRewardPerW = maxRewardPerD * DAYS_IN_WEEK;\r\n        const maxRewardPerM = maxRewardPerD * DAYS_IN_MONTH;\r\n        const maxRewardPerY = maxRewardPerD * DAYS_IN_YEAR;\r\n\r\n        setCurrentRewards([currentRewardPerD, currentRewardPerW, currentRewardPerM, currentRewardPerY]);\r\n        setMaxRewards([maxRewardPerD, maxRewardPerW, maxRewardPerM, maxRewardPerY]);\r\n    }, [totalStaked, currentRewardPerBlock, blockTime, targetBalance]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                <div>\r\n                    <span className=\"text-[0.5em] text-violet-100/50 light-box block mb-4 min-h-[5.5em] xs:min-h-[4em]\">\r\n                        Calculates potential reward levels (daily, weekly, monthly, yearly) for the given balance.\r\n                    </span>\r\n                    <div className=\"grid grid-cols-1 gap-y-1\">\r\n                        <div className=\"flex items-center justify-between leading-6\">\r\n                            <label htmlFor=\"balance\" className=\"flex leading-6\">\r\n                                <span className=\"input-label\">Target balance</span>\r\n                            </label>\r\n                            <span\r\n                                className=\"cursor-pointer text-[1.125em] leading-none shadow-none\"\r\n                                onClick={() => {\r\n                                    setTargetBalance(parseFloat(senderBalance));\r\n                                }}\r\n                            >\r\n                                <i className=\"bi bi-arrow-clockwise\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"number\"\r\n                            id=\"balance\"\r\n                            className=\"numeric !text-[1em] text-right\"\r\n                            defaultValue={targetBalance}\r\n                            placeholder=\"Balance in WEEB\"\r\n                            min={0}\r\n                            step={1}\r\n                            onInput={value => setTargetBalance(parseFloat(value))}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                    <span className=\"group-title opacity-75 col-span-2 sm:col-span-4 light-box\">Current Target Reward</span>\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Day\"\r\n                        main={isNaN(currentRewards[0]) ? \"\" : $.convert.formatMainToken(currentRewards[0])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[0]) ? \"\" : $.convert.formatStableToken(currentRewards[0] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Week\"\r\n                        main={isNaN(currentRewards[1]) ? \"\" : $.convert.formatMainToken(currentRewards[1])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[1]) ? \"\" : $.convert.formatStableToken(currentRewards[1] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Month\"\r\n                        main={isNaN(currentRewards[2]) ? \"\" : $.convert.formatMainToken(currentRewards[2])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[2]) ? \"\" : $.convert.formatStableToken(currentRewards[2] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n                    <PriceBox\r\n                        sizeCount={1}\r\n                        title=\"Per Year\"\r\n                        main={isNaN(currentRewards[3]) ? \"\" : $.convert.formatMainToken(currentRewards[3])}\r\n                        mainUnit={$.contracts.token.symbol}\r\n                        detail={isNaN(currentRewards[3]) ? \"\" : $.convert.formatStableToken(currentRewards[3] * tokenPriceInStableToken)}\r\n                        detailUnit={$.contracts.stableToken.symbol}\r\n                    />\r\n\r\n                    {!isMaximizedEmission &&\r\n                        <>\r\n                            <span className=\"group-title opacity-75 col-span-2 sm:col-span-4 light-box\">Maximum Target Reward</span>\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Day\"\r\n                                main={isNaN(maxRewards[0]) ? \"\" : $.convert.formatMainToken(maxRewards[0])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[0]) ? \"\" : $.convert.formatStableToken(maxRewards[0] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Week\"\r\n                                main={isNaN(maxRewards[1]) ? \"\" : $.convert.formatMainToken(maxRewards[1])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[1]) ? \"\" : $.convert.formatStableToken(maxRewards[1] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Month\"\r\n                                main={isNaN(maxRewards[2]) ? \"\" : $.convert.formatMainToken(maxRewards[2])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[2]) ? \"\" : $.convert.formatStableToken(maxRewards[2] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                            <PriceBox\r\n                                sizeCount={1}\r\n                                title=\"Per Year\"\r\n                                main={isNaN(maxRewards[3]) ? \"\" : $.convert.formatMainToken(maxRewards[3])}\r\n                                mainUnit={$.contracts.token.symbol}\r\n                                detail={isNaN(maxRewards[3]) ? \"\" : $.convert.formatStableToken(maxRewards[3] * tokenPriceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                            />\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nRewardCalculator.propTypes = {\r\n    senderBalance: PropTypes.number,\r\n    totalStaked: PropTypes.number,\r\n    currentRewardPerBlock: PropTypes.number,\r\n    blockTime: PropTypes.number,\r\n    tokenPriceInStableToken: PropTypes.number\r\n}\r\n\r\nRewardCalculator.defaultProps = {\r\n\r\n};\r\n","import { fromWei } from \"../../utils/Web3Converter\";\r\n\r\nimport InflowOutflowCalculator from \"./InflowOutflowCalculator\";\r\nimport TargetPriceCalculator from \"./TargetPriceCalculator\";\r\nimport RewardCalculator from \"./RewardCalculator\";\r\n\r\nexport default function TokenCalculators({\r\n    token,\r\n    priceInNativeToken,\r\n    priceInStableToken,\r\n    blockTime\r\n}) {\r\n    const nativeTokenPriceInStableToken = priceInStableToken / priceInNativeToken;\r\n    const senderBalance = fromWeiToken(token.senderBalance);\r\n    const totalStaked = fromWeiToken(token.totalStaked);\r\n    const maxRewardPerBlock = fromWeiToken(token.maximumRewardPerBlock);\r\n    const currentRewardPerBlock = fromWeiToken(token.currentRewardPerBlock);\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-x-2 xs:gap-x-5 gap-y-5 text-center\">\r\n            <div className={`card bg-weeb-card1/30 bg-diagonal-lines`}>\r\n                <InflowOutflowCalculator\r\n                    tokenReserve={token.tokenReserve}\r\n                    nativeTokenReserve={token.nativeTokenReserve}\r\n                    tokenPriceInStableToken={priceInStableToken}\r\n                    nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                />\r\n            </div>\r\n            <div className={`card bg-weeb-card1/30 bg-diagonal-lines`}>\r\n                <TargetPriceCalculator\r\n                    tokenReserve={token.tokenReserve}\r\n                    nativeTokenReserve={token.nativeTokenReserve}\r\n                    tokenPriceInStableToken={priceInStableToken}\r\n                    nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                />\r\n            </div>\r\n            <div className={`card bg-weeb-card1/30 bg-diagonal-lines col-span-2`}>\r\n                <RewardCalculator\r\n                    senderBalance={senderBalance}\r\n                    totalStaked={totalStaked}\r\n                    currentRewardPerBlock={currentRewardPerBlock}\r\n                    maxRewardPerBlock={maxRewardPerBlock}\r\n                    isMaximizedEmission={token.isInflationRegulated}\r\n                    blockTime={blockTime}\r\n                    tokenPriceInStableToken={priceInStableToken}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // Helpers\r\n    function fromWeiToken(value) {\r\n        return parseFloat(fromWei(value, token.details.decimals));\r\n    }\r\n}\r\n","export const BYTE_MAX_VALUE = 255;\r\n\r\nexport function getOutcomeText(outcomeCount, outcome) {\r\n    if (outcome === BYTE_MAX_VALUE) {\r\n        return \"Unknown\";\r\n    }\r\n\r\n    if (outcome > outcomeCount) {\r\n        throw `Outcome \"${outcome}\" is greater than outcome count: ${outcomeCount}`;\r\n    }\r\n\r\n    if (outcomeCount === 2) {\r\n        if (outcome === 0) {\r\n            return \"Heads\";\r\n        }\r\n\r\n        if (outcome === 1) {\r\n            return \"Tails\";\r\n        }\r\n    }\r\n\r\n    return `${outcome + 1}`;\r\n}\r\n\r\nexport function getOutcomeImage(outcomeCount, outcome) {\r\n    if (outcome === BYTE_MAX_VALUE) {\r\n        return \"Unknown\";\r\n    }\r\n\r\n    if (outcome > outcomeCount) {\r\n        throw `Outcome \"${outcome}\" is greater than outcome count: ${outcomeCount}`;\r\n    }\r\n\r\n    // https://miro.medium.com/max/1838/1*p-SahjISD2_mdOf_e-uF5A.png\r\n    if (outcomeCount === 2) {\r\n        if (outcome === 0) {\r\n            return (<img src=\"./images/heads-200px.png\" width=\"140\" height=\"140\" />);\r\n        }\r\n\r\n        if (outcome === 1) {\r\n            return (<img src=\"./images/tails-200px.png\" width=\"140\" height=\"140\" />);\r\n        }\r\n    } else if (outcomeCount === 6) {\r\n        return (<i className={`bi bi-dice-${outcome + 1} text-[2.5rem] sm:text-[3.5rem]`}></i>);\r\n    }\r\n\r\n    return `${outcome}`;\r\n}\r\n\r\nexport function getRandomizeText(outcomeCount) {\r\n    if (outcomeCount === 2) {\r\n        return \"Flip\";\r\n    }\r\n\r\n    if (outcomeCount === 6) {\r\n        return \"Roll\";\r\n    }\r\n\r\n    return \"Randomize\";\r\n}\r\n\r\nexport function getRandomInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport { PriceBox } from \"../InfoBox\";\r\nimport { StyledPopover } from \"../StyledPopover\";\r\n\r\nimport { BYTE_MAX_VALUE, getOutcomeText, getRandomizeText } from \"./GameExtensions\";\r\n\r\n/*\r\n{\r\n    game,\r\n    balance,\r\n    priceInStableToken,\r\n    bet,\r\n    compound,\r\n    claim,\r\n    senderPoolSnapshots\r\n    blockTime\r\n}\r\n*/\r\nexport default class Game extends Component {\r\n    static propTypes = {\r\n        bet: PropTypes.func,\r\n        claim: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        bet: async () => {\r\n        },\r\n        claim: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isInteractionDisabled: false,\r\n            showLastBetPool: false,\r\n            showSenderLastBetPool: false,\r\n            isPoolTotalsVisibile: false,\r\n            showYourBetHistory: false,\r\n            senderBetPools: [],\r\n            isLoading: false\r\n        };\r\n\r\n        this.format = $.format(this.props.game.tokenInfo.details.decimals);\r\n\r\n        this.toggleLastBetPoolVisibility = this.toggleLastBetPoolVisibility.bind(this);\r\n        this.toggleSenderLastBetPoolVisibility = this.toggleSenderLastBetPoolVisibility.bind(this);\r\n        this.togglePoolTotalsVisibility = this.togglePoolTotalsVisibility.bind(this);\r\n        this.toggleYourBetHistoryVisibility = this.toggleYourBetHistoryVisibility.bind(this);\r\n        this.loadSenderBetPools = this.loadSenderBetPools.bind(this);\r\n\r\n        this.execute = this.execute.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const tokenExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/token/${this.props.game.tokenInfo.token}`;\r\n        const swapRouterName = Configuration.getSwapRouterName($.chainId, Configuration.getDefaultSwapRouter($.chainId));\r\n        const minimumBet = this.props.game.isPercentage ? parseFloat(this.props.game.minimumBet) / 10000 : this.format.fromWei(this.props.game.minimumBet);\r\n\r\n        const unclaimedBalance = this.format.fromWei(this.props.game.unclaimedBalance);\r\n        const seigniorageFee = parseFloat(this.props.game.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = this.format.fromWei(this.props.game.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.game.seigniory}`;\r\n\r\n        const zero = Web3.utils.toBN(0);\r\n        const senderUnclaimedPrizeBN = Web3.utils.toBN(this.props.game.senderUnclaimedPrize.winningBet).add(Web3.utils.toBN(this.props.game.senderUnclaimedPrize.prize));\r\n        const isPrizeClaimable = senderUnclaimedPrizeBN.cmp(zero) === 1; // > 0\r\n        const senderUnclaimedPrize = this.format.fromWei(senderUnclaimedPrizeBN);\r\n        const currentBetPoolWinningPrize = this.format.fromWei(this.props.game.currentBetPool.statement.senderPrize);\r\n        const currentBetPoolPot = this.format.fromWei(this.props.game.currentBetPool.statement.allAggregatedBets.total);\r\n        const drawBlock = parseInt(this.props.game.currentPoolId) + parseInt(this.props.game.blockLength);\r\n        const blocksToDraw = drawBlock - parseInt(this.props.game.currentBlock);\r\n        const timeToDraw = blocksToDraw * this.props.blockTime;\r\n\r\n        const totalPlacedBets = this.format.fromWei(this.props.game.totalPosition.placedBets.total);\r\n        const totalClaimedBets = this.format.fromWei(this.props.game.totalPosition.claimedBets.total);\r\n        const totalClaimedPrizes = this.format.fromWei(this.props.game.totalPosition.claimedPrizes.total);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(this.props.game.currentBetPool.statement.senderAggregatedBets.total);\r\n        const senderLosingBets = this.format.fromWei(this.props.game.currentBetPool.statement.senderLosingBets.total);\r\n        const senderPrize = this.format.fromWei(this.props.game.currentBetPool.statement.senderPrize);\r\n        const hasOpponent = this.isWinner(this.props.game.currentBetPool) > 0;\r\n        const senderPnL = hasOpponent ? (senderPrize - senderLosingBets) : senderAggregatedBets;\r\n\r\n        const tooltipSeigniorageFeeText = (<span className=\"tooltip\">Fee paid to the seignory (game owner) from claimed prize.</span>);\r\n\r\n        // 1. popoverGameRef\r\n        const popoverGameContent = (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Bet Token\"\r\n                    main={(<a href={tokenExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"font-display\">{this.props.game.tokenInfo.details.symbol}</a>)}\r\n                    detailUnit={swapRouterName}\r\n                />\r\n                <PriceBox\r\n                    title=\"Minimum Bet\"\r\n                    main={this.props.game.isPercentage ? $.convert.formatPercentage(minimumBet) : this.format.formatToken(minimumBet)}\r\n                    mainUnit={this.props.game.isPercentage ? \"%\" : this.props.game.tokenInfo.details.symbol}\r\n                    detail={this.props.game.isPercentage ? \"\" : $.convert.formatStableToken(minimumBet * this.props.priceInStableToken)}\r\n                    detailUnit={this.props.game.isPercentage ? /*this.props.game.tokenInfo.details.symbol*/\"Of Pending Reward\" : $.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Outcome Count\"\r\n                    main={$.convert.formatInteger(this.props.game.outcomeCount)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Unclaimed Balance\"\r\n                    main={this.format.formatToken(unclaimedBalance)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(unclaimedBalance * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title={(<><span className=\"mr-1\">Seigniorage Fee</span><StyledPopover isTooltip={true} children={tooltipSeigniorageFeeText} /></>)}\r\n                    main={$.convert.formatPercentage(seigniorageFee)}\r\n                    mainUnit=\"%\"\r\n                    detail={(<a href={seignioryExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric\">{$.convert.formatAccount(this.props.game.seigniory)}</a>)}\r\n                    info={this.props.game.isSenderSeignory ? (<span className=\"font-display\">You're Seignory</span>) : null}\r\n                    infoClassName=\"opacity-75 light-box font-semibold uppercase text-red-500\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Seigniorage Collected\"\r\n                    main={this.format.formatToken(seigniorageFeeCollected)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(seigniorageFeeCollected * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={this.getActivity(this.props.game.seigniorageFee.collected.count, this.props.game.seigniorageFee.collected.timestamp, now)}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        const isCurrentBetPoolSenderUnderWin = this.isSenderUnderWin(this.props.game.currentBetPool.statement);\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-1 gap-y-3\">\r\n                <div className={`card bg-indigo-900/25 bg-diagonal-lines`}>\r\n                    <div className=\"grid grid-cols-12 gap-x-2 gap-y-0.5\">\r\n                        <div className=\"col-span-5\">\r\n                            <span className=\"card-header-title-text opacity-75\">\r\n                                <span className=\"mr-1\">{this.props.game.name}</span>\r\n                                <StyledPopover children={popoverGameContent} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-7 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"uppercase opacity-50\">Time to Draw</span>\r\n                            <span className=\"numeric opacity-75 ml-1 glow\">{$.convert.formatTimespan(timeToDraw)}</span>\r\n                            <span className=\"2xs:hidden xs:block numeric opacity-75 ml-2\">{blocksToDraw}</span>\r\n                            <span className=\"2xs:hidden xs:block uppercase opacity-50 ml-1\">blocks</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-8 flex items-center justify-start card-header-item-text\">\r\n                            <span className=\"2xs:hidden xs:block opacity-25\">Draws every</span>\r\n                            <span className=\"2xs:hidden xs:block numeric opacity-50 ml-1\">{this.props.game.blockLength}</span>\r\n                            <span className=\"2xs:hidden xs:block opacity-25 ml-1 mr-2\">blocks.</span>\r\n                            <span className=\"uppercase opacity-50\">Pool Id</span>\r\n                            <span className=\"numeric opacity-25 ml-1\">{$.convert.formatInteger(this.props.game.currentBetPool.poolId)}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-4 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"numeric opacity-25\">\r\n                                <i className=\"bi bi-box mr-1\" />\r\n                                {$.convert.formatInteger(this.props.game.currentBlock)}\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-12 mt-0.5 mb-3 border-bottom-t2 border-2\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 gap-y-3\">\r\n                        <div className=\"grid grid-cols-2 gap-x-2\">\r\n                            <PriceBox\r\n                                title=\"Your Unclaimed Prize\"\r\n                                main={this.format.formatToken(senderUnclaimedPrize)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(senderUnclaimedPrize * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                mainClassName=\"glow\"\r\n                            />\r\n                            <div className=\"grid grid-cols-2 gap-x-2 gap-y-3 leading-none auto-rows-auto text-[0.75em]\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"w-full h-full justify-self-end self-end btn btn-green\"\r\n                                    disabled={this.state.isInteractionDisabled || !isPrizeClaimable} onClick={async () => {\r\n                                        await this.execute(() => this.props.claim());\r\n                                    }}\r\n                                >\r\n                                    <span className=\"xs:hidden\">Claim Prize</span>\r\n                                    <span className=\"hidden xs:inline-block\">Claim the Prize</span>\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"w-full h-full justify-self-start self-end btn btn-blue\"\r\n                                    disabled={this.state.isInteractionDisabled || !isPrizeClaimable} onClick={async () => {\r\n                                        await this.execute(() => this.props.compound());\r\n                                    }}\r\n                                >\r\n                                    <span className=\"xs:hidden\">Bet Prize</span>\r\n                                    <span className=\"hidden xs:inline-block\">Bet the Prize</span>\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"w-full h-full justify-self-center self-start col-span-2 btn btn-red\"\r\n                                    disabled={this.state.isInteractionDisabled || this.props.balance === 0} onClick={async () => {\r\n                                        await this.execute(() => this.props.bet());\r\n                                    }}\r\n                                >\r\n                                    Place a Bet\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"border-bottom-t2\"></div>\r\n\r\n                        <div className=\"grid grid-cols-2 xl:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                            <PriceBox\r\n                                title=\"Winning Outcome\"\r\n                                main={getOutcomeText(parseInt(this.props.game.outcomeCount), parseInt(this.props.game.currentBetPool.outcome))}\r\n                                detailUnit={parseInt(this.props.game.currentBetPool.outcome) === BYTE_MAX_VALUE ? (<><span className=\"animate-pulse\">Place a Bet</span></>) : (<><span className=\"animate-pulse\">Bet to Change</span></>)}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"font-display neon\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Pot\"\r\n                                main={this.format.formatToken(currentBetPoolPot)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(currentBetPoolPot * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                // info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(this.props.game.currentBetPool.statement.allAggregatedBets.count)}</span>)}\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n\r\n                            <PriceBox\r\n                                title=\"Potential Prize\"\r\n                                main={this.format.formatToken(currentBetPoolWinningPrize)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(currentBetPoolWinningPrize * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                info={isCurrentBetPoolSenderUnderWin ? \"Under Win\" : null}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"neon\"\r\n                                infoClassName={`glow ${isCurrentBetPoolSenderUnderWin ? \" blinker\" : null}}`}\r\n                            />\r\n                            <PriceBox\r\n                                title=\"PnL\"\r\n                                main={this.format.formatToken(senderPnL)}\r\n                                mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                detail={$.convert.formatStableToken(senderPnL * this.props.priceInStableToken)}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"glow\"\r\n                            />\r\n\r\n                            <div className=\"col-span-2 xl:col-span-4\">\r\n                                {this.getBetInfo(this.props.game.currentBetPool, this.props.game.outcomeCount)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"border-bottom-t2\"></div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-x-2 text-[0.75em]\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"w-full h-9 btn btn-dark\"\r\n                                disabled={parseInt(this.props.game.lastBetPool.poolId) === 0}\r\n                                onClick={this.toggleLastBetPoolVisibility}>\r\n                                Last Bet Pool{this.state.showLastBetPool && <i className=\"bi bi-caret-down-fill ml-1\" />}\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"w-full h-9 btn btn-dark\"\r\n                                disabled={parseInt(this.props.game.senderLastBetPool.poolId) === 0}\r\n                                onClick={this.toggleSenderLastBetPoolVisibility}>\r\n                                Your Last Bet Pool{this.state.showSenderLastBetPool && <i className=\"bi bi-caret-down-fill ml-1\" />}\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"border-bottom-t2\"></div>\r\n\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <span className=\"card-header-item-text uppercase opacity-75 cursor-pointer\" onClick={this.togglePoolTotalsVisibility}><i className={`bi ${(this.state.isPoolTotalsVisibile ? \"bi-caret-down-fill\" : \"bi-caret-right-fill\")} mr-1`} />\r\n                                Pool Totals\r\n                            </span>\r\n                            <span className={`card-header-item-text opacity-25 ${parseInt(this.props.game.senderBetPoolCount) === 0 ? \"disabled\" : \"cursor-pointer\"}`} onClick={() => {\r\n                                if (parseInt(this.props.game.senderBetPoolCount) > 0) {\r\n                                    this.toggleYourBetHistoryVisibility();\r\n                                }\r\n                            }}>\r\n                                <i className=\"bi bi-calendar3 mr-1\" />\r\n                                Your Bet History (<span className=\"numeric\">{$.convert.formatInteger(this.props.game.senderBetPoolCount)}</span>)\r\n                            </span>\r\n                        </div>\r\n\r\n                        {this.state.isPoolTotalsVisibile &&\r\n                            <div className=\"grid grid-cols-3 gap-x-2 text-[80%]\">\r\n                                <PriceBox\r\n                                    title=\"Placed Bets\"\r\n                                    main={this.format.formatToken(totalPlacedBets)}\r\n                                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalPlacedBets * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.game.totalPosition.placedBets.count, this.props.game.totalPosition.placedBets.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Claimed Bets\"\r\n                                    main={this.format.formatToken(totalClaimedBets)}\r\n                                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalClaimedBets * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.game.totalPosition.claimedBets.count, this.props.game.totalPosition.claimedBets.timestamp, now)}\r\n                                />\r\n                                <PriceBox\r\n                                    title=\"Claimed Prizes\"\r\n                                    main={this.format.formatToken(totalClaimedPrizes)}\r\n                                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                                    detail={$.convert.formatStableToken(totalClaimedPrizes * this.props.priceInStableToken)}\r\n                                    detailUnit={$.contracts.stableToken.symbol}\r\n                                    info={this.getActivity(this.props.game.totalPosition.claimedPrizes.count, this.props.game.totalPosition.claimedPrizes.timestamp, now)}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {this.state.showLastBetPool && this.getBetPool(\"Last Bet Pool\", this.props.game.lastBetPool, this.props.game.outcomeCount)}\r\n                {this.state.showSenderLastBetPool && this.getBetPool(\"Your Last Bet Pool\", this.props.game.senderLastBetPool, this.props.game.outcomeCount)}\r\n                {this.state.showYourBetHistory && this.getSenderBetPools()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSenderBetPools() {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.state.senderBetPools.length; ++i) {\r\n            items.push(<div key={i}>{this.getBetPool(`Your Bet Pool #${i + 1}`, this.state.senderBetPools[i])}</div>);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {items}\r\n                <div className=\"flex items-center justify-center text-[0.75em]\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"w-48 h-9 btn btn-dark\"\r\n                        disabled={(this.state.isLoading || this.state.senderBetPools.length === parseInt(this.props.game.senderBetPoolCount))}\r\n                        onClick={this.loadSenderBetPools}>Load more</button>\r\n                </div>\r\n                {this.state.isLoading && <Spinner type=\"cloud\" title={`Loading ${$.convert.formatInteger(this.props.game.senderBetPoolCount)} pools.`} />}\r\n            </>\r\n        );\r\n    }\r\n\r\n    getBetPool(title, betPool, outcomeCount) {\r\n        const blocksFromDraw = parseInt(this.props.game.currentBlock) - parseInt(betPool.poolId);\r\n        const lastBetPoolPot = this.format.fromWei(betPool.statement.allAggregatedBets.total);\r\n        const lastBetPoolWinningPrize = this.format.fromWei(betPool.statement.senderPrize);\r\n        const isUnderWin = this.isSenderUnderWin(betPool.statement);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(betPool.statement.senderAggregatedBets.total);\r\n        const senderLosingBets = this.format.fromWei(betPool.statement.senderLosingBets.total);\r\n        const senderPrize = this.format.fromWei(betPool.statement.senderPrize);\r\n        const hasOpponent = this.isWinner(betPool) > 0;\r\n        const senderPnL = hasOpponent ? (senderPrize - senderLosingBets) : senderAggregatedBets;\r\n\r\n        return (\r\n            <>\r\n                <div className={`card bg-white/5 bg-diagonal-lines`}>\r\n                    <div className=\"grid grid-cols-12 gap-x-2 gap-y-0.5\">\r\n                        <div className=\"col-span-5\">\r\n                            <span className=\"card-header-title-text opacity-75\">\r\n                                {title}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"col-span-7 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"uppercase opacity-50\">Time from Draw</span>\r\n                            <span className=\"numeric opacity-75 ml-1 glow\">{betPool.poolId > 0 ? $.convert.formatTimespan(blocksFromDraw * this.props.blockTime) : \"-\"}</span>\r\n                            <span className=\"2xs:hidden xs:block numeric opacity-75 ml-2\">{betPool.poolId > 0 ? $.convert.formatInteger(blocksFromDraw) : \"-\"}</span>\r\n                            <span className=\"2xs:hidden xs:block uppercase opacity-50 ml-1\">blocks</span>\r\n                        </div>\r\n                        <div className=\"col-span-7 flex items-center justify-start card-header-item-text\">\r\n                            <span className=\"uppercase opacity-50\">Pool Id</span>\r\n                            <span className=\"numeric opacity-25 ml-1\">{betPool.poolId > 0 ? $.convert.formatInteger(betPool.poolId) : \"-\"}</span>\r\n                        </div>\r\n                        <div className=\"col-span-5 flex items-center justify-end card-header-item-text\">\r\n                            <span className=\"opacity-25\">\r\n                                You {this.isWinnerText(betPool)}\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-12 mt-0.5 mb-3 border-bottom-t2 border-2\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Outcome\"\r\n                            main={getOutcomeText(parseInt(this.props.game.outcomeCount), parseInt(betPool.outcome))}\r\n                            titleClassName=\"light-box\"\r\n                            mainClassName=\"font-display neon\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Pot\"\r\n                            main={this.format.formatToken(lastBetPoolPot)}\r\n                            mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                            detail={$.convert.formatStableToken(lastBetPoolPot * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            // info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(betPool.statement.allAggregatedBets.count)}</span>)}\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n\r\n                        <PriceBox\r\n                            title=\"Your Prize\"\r\n                            main={this.format.formatToken(lastBetPoolWinningPrize)}\r\n                            mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                            detail={$.convert.formatStableToken(lastBetPoolWinningPrize * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            info={isUnderWin ? \"Under Win\" : null}\r\n                            titleClassName=\"light-box\"\r\n                            mainClassName=\"neon\"\r\n                            infoClassName={`glow ${isUnderWin ? \" blinker\" : null}}`}\r\n                        />\r\n                        <PriceBox\r\n                            title=\"PnL\"\r\n                            main={this.format.formatToken(senderPnL)}\r\n                            mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                            detail={$.convert.formatStableToken(senderPnL * this.props.priceInStableToken)}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            titleClassName=\"light-box\"\r\n                            mainClassName=\"glow\"\r\n                        />\r\n\r\n                        <div className=\"col-span-2 sm:col-span-4\">\r\n                            {this.getBetInfo(betPool, outcomeCount)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    isSenderUnderWin(winningStatement) {\r\n        const senderPrize = this.format.fromWei(winningStatement.senderPrize);\r\n        const senderLosingBets = this.format.fromWei(winningStatement.senderLosingBets.total);\r\n\r\n        return senderPrize > 0 && senderPrize < senderLosingBets;\r\n    }\r\n\r\n    getPopoverWinningStatementAllBetsDetail(winningStatement) {\r\n        const allAggregatedBets = this.format.fromWei(winningStatement.allAggregatedBets.total);\r\n        const allWinningBets = this.format.fromWei(winningStatement.allWinningBets.total);\r\n        const allLosingBets = this.format.fromWei(winningStatement.allLosingBets.total);\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(allAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(allWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allWinningBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(allLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Payout\"\r\n                    main={`×${$.convert.formatNumberScaled(allWinningBets === 0 ? 0 : allLosingBets / allWinningBets, 2)}`}\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getPopoverWinningStatementSenderBetsDetail(winningStatement) {\r\n        const allWinningBets = this.format.fromWei(winningStatement.allWinningBets.total);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(winningStatement.senderAggregatedBets.total);\r\n        const senderWinningBets = this.format.fromWei(winningStatement.senderWinningBets.total);\r\n        const senderLosingBets = this.format.fromWei(winningStatement.senderLosingBets.total);\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-2 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(senderAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(senderWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderWinningBets.count)}</span>)}\r\n                    mainClassName=\"neon\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(senderLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Share\"\r\n                    main={$.convert.formatPercentage(allWinningBets === 0 ? 0 : parseFloat(senderWinningBets) / parseFloat(allWinningBets))}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getPopoverBetPoolWinningStatementDetail(winningStatement) {\r\n        const allAggregatedBets = this.format.fromWei(winningStatement.allAggregatedBets.total);\r\n        const allWinningBets = this.format.fromWei(winningStatement.allWinningBets.total);\r\n        const allLosingBets = this.format.fromWei(winningStatement.allLosingBets.total);\r\n\r\n        const senderAggregatedBets = this.format.fromWei(winningStatement.senderAggregatedBets.total);\r\n        const senderWinningBets = this.format.fromWei(winningStatement.senderWinningBets.total);\r\n        const senderLosingBets = this.format.fromWei(winningStatement.senderLosingBets.total);\r\n\r\n        const senderPrize = this.format.fromWei(winningStatement.senderPrize);\r\n        const senderPnL = senderPrize - senderLosingBets;\r\n\r\n        return (\r\n            <div className=\"grid grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                <span className=\"group-title opacity-75 col-span-4 glass-box\">Total Position</span>\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(allAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(allWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allWinningBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(allLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(allLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.allLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Payout\"\r\n                    main={`×${$.convert.formatNumberScaled(allWinningBets === 0 ? 0 : allLosingBets / allWinningBets, 2)}`}\r\n                    mainClassName=\"neon\"\r\n                />\r\n\r\n                <span className=\"group-title opacity-75 col-span-4 glass-box\">Your Position</span>\r\n                <PriceBox\r\n                    title=\"All Bets\"\r\n                    main={this.format.formatToken(senderAggregatedBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderAggregatedBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderAggregatedBets.count)}</span>)}\r\n                />\r\n                <PriceBox\r\n                    title=\"Winning Bets\"\r\n                    main={this.format.formatToken(senderWinningBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderWinningBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderWinningBets.count)}</span>)}\r\n                    mainClassName=\"neon\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Losing Bets\"\r\n                    main={this.format.formatToken(senderLosingBets)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderLosingBets * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    info={(<span><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(winningStatement.senderLosingBets.count)}</span>)}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    title=\"PnL\"\r\n                    main={this.format.formatToken(senderPnL)}\r\n                    mainUnit={this.props.game.tokenInfo.details.symbol}\r\n                    detail={$.convert.formatStableToken(senderPnL * this.props.priceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    mainClassName=\"glow\"\r\n                />\r\n                <PriceBox\r\n                    containerClassName=\"col-span-4\"\r\n                    title=\"Winning Share\"\r\n                    main={$.convert.formatPercentage(allWinningBets === 0 ? 0 : parseFloat(senderWinningBets) / parseFloat(allWinningBets))}\r\n                    mainUnit=\"%\"\r\n                    mainClassName=\"neon\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"hidden xs:inline-block bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"hidden xs:inline-block bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Game functions.\r\n    getPayoutOf(betPool, outcome) {\r\n        const zero = Web3.utils.toBN(0);\r\n\r\n        let winningBets = zero;\r\n        let losingBets = zero;\r\n\r\n        const allBets = betPool.allBets;\r\n\r\n        for (let i = 0; i < allBets.length; ++i) {\r\n            var bet = allBets[i];\r\n\r\n            if (i === outcome)\r\n                winningBets = winningBets.add(Web3.utils.toBN(bet.total));\r\n            else\r\n                losingBets = losingBets.add(Web3.utils.toBN(bet.total));\r\n        }\r\n\r\n        if (winningBets.cmp(zero) === 0) {\r\n            return null;\r\n        }\r\n\r\n        return this.format.fromWei(losingBets) / this.format.fromWei(winningBets);\r\n    }\r\n\r\n    // Content generators\r\n    getOutcomeNames() {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            items.push((<th key={i} className=\"text-[1em] font-normal light-box px-2\">{getOutcomeText(parseInt(this.props.game.outcomeCount), i)}</th>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getBetCounts(bets) {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            items.push((<td key={i} className=\"text-[1em] lighter-box px-2\">{bets[i]?.count ? $.convert.formatInteger(bets[i].count) : 0}</td>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getBetAmounts(bets) {\r\n        const items = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            items.push((<td key={i}><span className=\"text-[1em] px-2 py-1\">{bets[i]?.total ? this.format.formatToken(this.format.fromWei(bets[i].total)) : 0}</span></td>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getBetsSum(bets) {\r\n        let sum = 0;\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            sum += bets[i]?.total ? this.format.fromWei(bets[i].total) : 0;\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    getPayouts(betPool) {\r\n        const payouts = [];\r\n\r\n        for (let i = 0; i < this.props.game.outcomeCount; ++i) {\r\n            payouts.push(this.getPayoutOf(betPool, i));\r\n        }\r\n\r\n        const max = Math.max(...payouts);\r\n        const items = [];\r\n\r\n        for (let i = 0; i < payouts.length; ++i) {\r\n            items.push((<td key={i}><span className={`text-[1em] px-2 py-1 ${payouts[i] === max ? \" glow\" : \"\"}`}>×{payouts[i] ? $.convert.formatNumberScaled(payouts[i], 2) : \"\"}</span></td>));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    getAllBets(betPool) {\r\n        return (\r\n            <table className=\"mx-auto table-fixed border-separate leading-none w-full\">\r\n                <thead className=\"group-title uppercase tracking-wider\">\r\n                    <tr>\r\n                        {this.getOutcomeNames()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"numeric\">\r\n                    <tr className=\"opacity-75\">\r\n                        {this.getBetCounts(betPool.allBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.getBetAmounts(betPool.allBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.getPayouts(betPool)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    getSenderBets(betPool) {\r\n        return (\r\n            <table className=\"mx-auto table-fixed border-separate leading-none w-full\">\r\n                <thead className=\"group-title uppercase tracking-wider\">\r\n                    <tr>\r\n                        {this.getOutcomeNames()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"numeric\">\r\n                    <tr className=\"opacity-75\">\r\n                        {this.getBetCounts(betPool.senderBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.getBetAmounts(betPool.senderBets)}\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={this.props.game.outcomeCount}>\r\n                            {/* &nbsp; */}\r\n                            {/* <span className=\"text-[14px] px-2 py-1 glow\">\r\n                                {this.format.formatToken(this.getBetsSum(betPool.senderBets))}\r\n                            </span> */}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    getBetInfo(betPool, outcomeCount) {\r\n        return (\r\n            <>\r\n                <div className={`grid ${outcomeCount > 2 ? \"grid-cols-1 sm:grid-cols-2\" : \"grid-cols-2\"} gap-x-2 gap-y-2 text-center`}>\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <span className=\"group-title light-box w-full uppercase tracking-wider\">\r\n                            <span className=\"mr-1\">Total Bets</span>\r\n                            <StyledPopover children={this.getPopoverWinningStatementAllBetsDetail(betPool.statement)} />\r\n                        </span>\r\n                        {/* <span className=\"group-title opacity-25 mt-1\">{this.props.game.tokenInfo.details.symbol}</span> */}\r\n                        <div className=\"overflow-x-auto overflow-y-hidden section\">\r\n                            {this.getAllBets(betPool)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <span className=\"group-title light-box w-full uppercase tracking-wider\">\r\n                            <span className=\"mr-1\">Your Bets</span>\r\n                            <StyledPopover children={this.getPopoverWinningStatementSenderBetsDetail(betPool.statement)} />\r\n                        </span>\r\n                        {/* <span className=\"group-title opacity-25 mt-1\">{this.props.game.tokenInfo.details.symbol}</span> */}\r\n                        <div className=\"overflow-x-auto overflow-y-hidden section\">\r\n                            {this.getSenderBets(betPool)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    isWinner(betPool) {\r\n        if (betPool.senderBets.length > 0) {\r\n            return betPool.senderBets[betPool.outcome].count > 0\r\n                ? Web3.utils.toBN(betPool.statement.allLosingBets.count).cmp(Web3.utils.toBN(0)) === 1 ? 1 : -1\r\n                : Web3.utils.toBN(betPool.statement.allWinningBets.count).cmp(Web3.utils.toBN(0)) === 1 ? 2 : -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    isWinnerText(betPool) {\r\n        switch (this.isWinner(betPool)) {\r\n            case -1:\r\n                return \"had no opponent\";\r\n            case 0:\r\n                return \"didn't bet\";\r\n            case 1:\r\n                return \"won\";\r\n            case 2:\r\n                return \"lost\";\r\n        }\r\n    }\r\n\r\n    // Actions\r\n    togglePoolTotalsVisibility() {\r\n        this.setState({ isPoolTotalsVisibile: !this.state.isPoolTotalsVisibile });\r\n    }\r\n\r\n    toggleLastBetPoolVisibility() {\r\n        this.setState({ showLastBetPool: !this.state.showLastBetPool });\r\n    }\r\n\r\n    toggleSenderLastBetPoolVisibility() {\r\n        this.setState({ showSenderLastBetPool: !this.state.showSenderLastBetPool });\r\n    }\r\n\r\n    async execute(func) {\r\n        this.setState({ isInteractionDisabled: true });\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        } finally {\r\n            this.setState({ isInteractionDisabled: false });\r\n        }\r\n    }\r\n\r\n    async toggleYourBetHistoryVisibility() {\r\n        const show = this.state.showYourBetHistory;\r\n        this.setState({ showYourBetHistory: !show });\r\n\r\n        if (!show) {\r\n            await this.loadSenderBetPools();\r\n        }\r\n    }\r\n\r\n    async loadSenderBetPools() {\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            await this.loadSenderBetPoolsInternal();\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    async loadSenderBetPoolsInternal() {\r\n        const pageLength = 3;\r\n\r\n        const senderBetPoolCount = parseInt(this.props.game.senderBetPoolCount);\r\n        const remaining = senderBetPoolCount - this.state.senderBetPools.length;\r\n\r\n        if (remaining > 0) {\r\n            let offset;\r\n            let count;\r\n\r\n            offset = this.state.senderBetPools.length;\r\n\r\n            if (remaining > pageLength) {\r\n                count = pageLength;\r\n            } else {\r\n                count = remaining;\r\n            }\r\n\r\n            let pools = [...await this.props.senderPoolSnapshots(offset, count)];\r\n\r\n            if (pools.length > 0 && parseInt(pools[pools.length - 1].poolId) === parseInt(this.props.game.currentPoolId)) {\r\n                pools = pools.slice(0, pools.length - 1);\r\n            }\r\n\r\n            this.setState({ senderBetPools: [...this.state.senderBetPools, ...pools] });\r\n        }\r\n    }\r\n}","import Configuration from \"../../Configuration\";\r\n\r\nexport function getSupportedSwapRouterName(chainId, pool) {\r\n    const supportedSwapRouters = Configuration.getSwapRouters(chainId);\r\n    const address = pool.depositToken.router;\r\n\r\n    return address == null || supportedSwapRouters == null ? null : supportedSwapRouters[address].name ?? null;\r\n}\r\n\r\nexport function getDepositTokenSymbol(pool) {\r\n    return pool.isLiquidityToken ? `${pool.token0Details.symbol}/${pool.token1Details.symbol}` : pool.depositToken.details.symbol;\r\n}\r\n\r\nexport function getDepositTokenDecimals(pool) {\r\n    return pool.isLiquidityToken ? Math.min(pool.token0Details.decimals, pool.token1Details.decimals) : pool.depositToken.details.decimals;\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { getSupportedSwapRouterName } from \"./FarmPoolExtensions\";\r\n\r\nimport { PriceBox } from \"../InfoBox\";\r\nimport { StyledPopover } from \"../StyledPopover\";\r\n\r\n/*\r\n{\r\n    creditToken,\r\n    pool,\r\n    nativeTokenPriceInStableToken,\r\n    deposit,\r\n    withdraw,\r\n    blockTime,\r\n    currentBlock\r\n}\r\n*/\r\nexport default class FarmPool extends Component {\r\n    static propTypes = {\r\n        deposit: PropTypes.func,\r\n        withdraw: PropTypes.func,\r\n    }\r\n\r\n    static defaultProps = {\r\n        deposit: async () => {\r\n        },\r\n        withdraw: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isInteractionDisabled: false,\r\n            isPoolTotalsVisibile: false,\r\n            // depositTokenPriceInStableToken: 0,\r\n            // creditTokenPriceInStableToken: 0\r\n        };\r\n\r\n        this.onTick = this.onTick.bind(this);\r\n\r\n        this.formatDepositToken = $.format(this.props.pool.depositToken.details.decimals);\r\n        this.formatCreditToken = $.format(this.props.creditToken.details.decimals);\r\n\r\n        this.togglePoolTotalsVisibility = this.togglePoolTotalsVisibility.bind(this);\r\n\r\n        this.execute = this.execute.bind(this);\r\n\r\n        this.popoverFarmPoolRef = React.createRef();\r\n        this.tooltipSeigniorageFeeRef = React.createRef();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (!this.timerId) {\r\n                this.startTimer(this.props.blockTime * 1000);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    startTimer(blockTime) {\r\n        this.timerId = setInterval(async () => await this.onTick(), blockTime);\r\n        console.log(`Started timer: ${this.timerId}; Interval: ${blockTime} ms`);\r\n    }\r\n\r\n    stopTimer() {\r\n        const timerId = this.timerId;\r\n\r\n        if (timerId) {\r\n            clearInterval(timerId);\r\n            this.timerId = undefined;\r\n\r\n            console.log(`Stopped timer: ${timerId}`);\r\n        }\r\n    }\r\n\r\n    async onTick() {\r\n        try {\r\n            const depositTokenPriceInStableToken = await $.iziSwap.getTokenPriceInStableToken(this.props.pool.depositToken.token, this.props.pool.depositToken.details.decimals, this.props.pool.isLiquidityToken);\r\n            const creditTokenPriceInStableToken = await $.iziSwap.getTokenPriceInStableToken(this.props.creditToken.token, this.props.creditToken.details.decimals, false);\r\n\r\n            this.setState({\r\n                depositTokenPriceInStableToken,\r\n                creditTokenPriceInStableToken\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const creditMultiplier = parseFloat(this.props.pool.creditMultiplier) / 10000;\r\n        const depositFeeRate = parseFloat(this.props.pool.depositFee.rate) / 10000;\r\n        const creditLiquidationRate = parseFloat(this.props.pool.creditLiquidationRate) / 10000;\r\n        const liquidatorFeeRate = parseFloat(this.props.pool.liquidatorFee.rate) / 10000;\r\n        const senderBalance = this.formatDepositToken.fromWei(this.props.pool.senderBalance);\r\n        const senderDeposited = this.formatDepositToken.fromWei(this.props.pool.senderPosition.deposited);\r\n        const senderCredited = this.formatCreditToken.fromWei(this.props.pool.senderPosition.credited);\r\n        const senderLiquidated = this.formatDepositToken.fromWei(this.props.pool.senderPosition.liquidated.total);\r\n        const senderCreditLiquidationLevel = this.formatCreditToken.fromWei(this.props.pool.senderPosition.creditLiquidationLevel);\r\n        const senderCurrentCredit = this.formatCreditToken.fromWei(this.props.pool.senderCurrentCredit);\r\n        const requiresRebalancing = senderCurrentCredit > senderCredited || senderCurrentCredit < senderCreditLiquidationLevel;\r\n        const totalDeposited = this.formatDepositToken.fromWei(this.props.pool.totalPosition.deposited);\r\n        const totalCredited = this.formatCreditToken.fromWei(this.props.pool.totalPosition.credited);\r\n        const totalLiquidated = this.formatDepositToken.fromWei(this.props.pool.totalPosition.liquidated.total);\r\n        const seigniorageFee = parseFloat(this.props.pool.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = $.convert.fromWeiNativeToken(this.props.pool.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.pool.seigniory}`;\r\n\r\n        let updatedBlockId = parseInt(this.props.pool.senderPosition.updatedBlockId);\r\n        const senderTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        updatedBlockId = parseInt(this.props.pool.totalPosition.updatedBlockId);\r\n        const totalTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        const tooltipSeigniorageFeeText = (<span className=\"tooltip text-[80%]\">Fee paid to the seignory (token owner) from burns.</span>);\r\n\r\n        const popoverFarmPoolContent = (\r\n            <div className=\"grid grid-cols-3 gap-x-2 gap-y-4 text-[80%]\">\r\n                <PriceBox\r\n                    title=\"Investor Count\"\r\n                    main={$.convert.formatInteger(this.props.pool.investorCount)}\r\n                />\r\n                <PriceBox\r\n                    title={(<><span className=\"mr-1\">Seigniorage Fee</span><StyledPopover isTooltip={true} children={tooltipSeigniorageFeeText} /></>)}\r\n                    main={$.convert.formatPercentage(seigniorageFee)}\r\n                    mainUnit=\"%\"\r\n                    detail={(<a href={seignioryExplorerUri} rel=\"noreferrer\" target=\"_blank\" className=\"numeric\">{$.convert.formatAccount(this.props.pool.seigniory)}</a>)}\r\n                    info={this.props.pool.isSenderSeignory ? (<span className=\"font-display\">You're Seignory</span>) : null}\r\n                    infoClassName=\"opacity-75 light-box font-semibold uppercase text-red-500\"\r\n                />\r\n                <PriceBox\r\n                    title=\"Seigniorage Collected\"\r\n                    main={$.convert.formatNativeToken(seigniorageFeeCollected)}\r\n                    mainUnit={$.contracts.nativeToken.symbol}\r\n                    detail={$.convert.formatStableToken(seigniorageFeeCollected * this.props.nativeTokenPriceInStableToken)}\r\n                    detailUnit={$.contracts.stableToken.symbol}\r\n                    infoText={this.getActivity(this.props.pool.seigniorageFee.collected.count, this.props.pool.seigniorageFee.collected.timestamp, now)}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={`card bg-[#1e0f3c80] bg-diagonal-lines`}>\r\n                <div className=\"grid grid-cols-12 gap-x-2 gap-y-0.5\">\r\n                    <div className=\"col-span-5\">\r\n                        <span className=\"block opacity-75 text-uppercase fs-6 m-0\">\r\n                            <span className=\"mr-1\">{$.farm.getDepositTokenSymbol(this.props.pool)}</span><StyledPopover children={popoverFarmPoolContent} />\r\n                        </span>\r\n                        <span className=\"opacity-25 text-[0.75em]\">\r\n                            {getSupportedSwapRouterName($.chainId, this.props.pool)}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"col-span-7 flex items-center justify-end text-[0.75em]\">\r\n                        {this.props.pool.isLiquidityToken\r\n                            ? <>\r\n                                <div className=\"avatar\">\r\n                                    <span className=\"card-title opacity-25 text-uppercase m-0\" style={{ fontSize: \"x-small\" }}>{this.props.pool.token0Details.symbol}</span>\r\n                                </div>\r\n                                <div className=\"avatar\">\r\n                                    <span className=\"card-title opacity-25 text-uppercase m-0\" style={{ fontSize: \"x-small\" }}>{this.props.pool.token1Details.symbol}</span>\r\n                                </div>\r\n                            </>\r\n                            : <div className=\"avatar\">\r\n                                <span className=\"card-title opacity-25 text-uppercase m-0\" style={{ fontSize: \"x-small\" }}>{this.props.pool.depositToken.details.symbol}</span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-span-12 mt-0.5 mb-3 border-bottom-t4 border-2\"></div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 gap-x-2 gap-y-4\">\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Credit Multiplier\"\r\n                            main={`×${$.convert.formatNumberScaled(1 + creditMultiplier, 2)}`}\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Deposit Fee\"\r\n                            main={$.convert.formatPercentage(depositFeeRate)}\r\n                            mainUnit=\"%\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Credit Liq. Rate\"\r\n                            main={$.convert.formatPercentage(creditLiquidationRate)}\r\n                            mainUnit=\"%\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Liquidator Fee\"\r\n                            main={$.convert.formatPercentage(liquidatorFeeRate)}\r\n                            mainUnit=\"%\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"text-[80%] -mb-2\">\r\n                        <div className=\"flex items-center justify-between group-title opacity-75 light-box px-2\">\r\n                            <span>Your Position</span>\r\n                            <span className=\"numeric opacity-25\">\r\n                                <i className=\"bi bi-clock mr-1\" />\r\n                                {$.convert.formatTimespan(senderTimeFromUpdate)}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-3 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Balance\"\r\n                            main={this.formatDepositToken.formatCurrency(senderBalance)}\r\n                            mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                            detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * senderBalance) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Deposited\"\r\n                            main={this.formatDepositToken.formatCurrency(senderDeposited)}\r\n                            mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                            detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * senderDeposited) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Credited\"\r\n                            main={this.formatCreditToken.formatCurrency(senderCredited)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            detail={this.state.creditTokenPriceInStableToken ? $.convert.formatStableToken(this.state.creditTokenPriceInStableToken * senderCredited) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n\r\n                        <PriceBox\r\n                            title=\"Current Level\"\r\n                            main={this.formatCreditToken.formatCurrency(senderCurrentCredit)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainClassName={`${senderCurrentCredit > senderCredited ? \"animate-pulse neon\" : senderCurrentCredit < senderCreditLiquidationLevel ? \"animate-pulse glow\" : \"\"}`}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Liquidation Level\"\r\n                            main={this.formatCreditToken.formatCurrency(senderCreditLiquidationLevel)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Liquidated\"\r\n                            main={this.formatDepositToken.formatCurrency(senderLiquidated)}\r\n                            mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                            detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * senderLiquidated) : \"-\"}\r\n                            detailUnit={$.contracts.stableToken.symbol}\r\n                            info={this.getActivity(this.props.pool.senderPosition.liquidated.count, this.props.pool.senderPosition.liquidated.timestamp, now)}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-4 gap-x-2 gap-y-4 leading-none auto-rows-auto text-[0.75em]\">\r\n                        <button type=\"button\" className=\"h-9 btn btn-blue\" disabled={this.state.isInteractionDisabled || senderBalance === 0}\r\n                            onClick={async () => {\r\n                                await this.execute(() => this.props.deposit(this.state.depositTokenPriceInStableToken));\r\n                            }}\r\n                        >\r\n                            Deposit\r\n                        </button>\r\n                        <button type=\"button\" className=\"h-9 btn btn-slate\" disabled={this.state.isInteractionDisabled || senderDeposited === 0}\r\n                            onClick={async () => {\r\n                                await this.execute(() => this.props.withdraw(this.state.creditTokenPriceInStableToken));\r\n                            }}\r\n                        >\r\n                            Withdraw\r\n                        </button>\r\n                        <button type=\"button\" className=\"h-9 btn btn-green\" disabled={this.state.isInteractionDisabled || senderDeposited === 0 || !requiresRebalancing}\r\n                            onClick={async () => {\r\n                                await this.execute(() => $.farm.rebalance(this.props.pool.poolId));\r\n                            }}\r\n                        >\r\n                            <span className={`${requiresRebalancing ? \"animate-pulse\" : \"\"}`}>Rebalance</span>\r\n                        </button>\r\n                        <button type=\"button\" className=\"h-9 btn btn-red\" disabled={this.state.isInteractionDisabled || senderDeposited === 0}\r\n                            onClick={async () => {\r\n                                await this.execute(() => $.farm.liquidate(this.props.pool.poolId));\r\n                            }}\r\n                        >\r\n                            Liquidate\r\n                        </button>\r\n\r\n                        <div className=\"col-span-4 border-bottom-t4\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center justify-between -mt-2\">\r\n                        <span className=\"text-[0.75em] uppercase opacity-75 cursor-pointer\" onClick={this.togglePoolTotalsVisibility}><i className={`bi ${(this.state.isPoolTotalsVisibile ? \"bi-caret-down-fill\" : \"bi-caret-right-fill\")} mr-1`} />\r\n                            Pool Totals\r\n                        </span>\r\n                        <span className=\"numeric text-[0.75em] opacity-25\">\r\n                            <i className=\"bi bi-clock mr-1\" />\r\n                            {$.convert.formatTimespan(totalTimeFromUpdate)}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {this.state.isPoolTotalsVisibile &&\r\n                        <div className=\"grid grid-cols-3 gap-x-2 text-[80%]\">\r\n                            <PriceBox\r\n                                title=\"Deposited\"\r\n                                main={this.formatDepositToken.formatCurrency(totalDeposited)}\r\n                                mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                                detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * totalDeposited) : \"-\"}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Credited\"\r\n                                main={this.formatCreditToken.formatCurrency(totalCredited)}\r\n                                mainUnit={this.props.creditToken.details.symbol}\r\n                                detail={this.state.creditTokenPriceInStableToken ? $.convert.formatStableToken(this.state.creditTokenPriceInStableToken * totalCredited) : \"-\"}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Liquidated\"\r\n                                main={this.formatDepositToken.formatCurrency(totalLiquidated)}\r\n                                mainUnit={$.farm.getDepositTokenSymbol(this.props.pool)}\r\n                                detail={this.state.depositTokenPriceInStableToken ? $.convert.formatStableToken(this.state.depositTokenPriceInStableToken * totalLiquidated) : \"-\"}\r\n                                detailUnit={$.contracts.stableToken.symbol}\r\n                                info={this.getActivity(this.props.pool.totalPosition.liquidated.count, this.props.pool.totalPosition.liquidated.timestamp, now)}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                                titleClassName=\"light-box\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getTokenAvatars() {\r\n        return this.props.pool.isLiquidityToken\r\n            ? (<>\r\n                <div className=\"avatar\">\r\n                    <span className=\"card-title opacity-25 text-uppercase m-0\">{this.props.pool.token0Details.symbol}</span>\r\n                </div>\r\n                <div className=\"avatar\">\r\n                    <span className=\"card-title opacity-25 text-uppercase m-0\">{this.props.pool.token1Details.symbol}</span>\r\n                </div>\r\n            </>)\r\n            : (<div className=\"avatar\">\r\n                <span className=\"card-title opacity-25 text-uppercase m-0\">{this.props.pool.depositToken.details.symbol}</span>\r\n            </div>);\r\n    }\r\n\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Actions\r\n    togglePoolTotalsVisibility() {\r\n        this.setState({ isPoolTotalsVisibile: !this.state.isPoolTotalsVisibile });\r\n    }\r\n\r\n    async execute(func) {\r\n        this.setState({ isInteractionDisabled: true });\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        } finally {\r\n            this.setState({ isInteractionDisabled: false });\r\n        }\r\n    }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { contains } from \"../../utils/Utils\";\r\n\r\nimport { getSupportedSwapRouterName } from \"./FarmPoolExtensions\";\r\nimport FarmPool from \"./FarmPool\";\r\n\r\nimport DelayedInput from \"./dialogs/core/DelayedInput\";\r\nimport { PriceBox, TitleText, MainText } from \"../InfoBox\";\r\n\r\nexport default function FarmPools({\r\n    farm,\r\n    nativeTokenPriceInStableToken,\r\n    deposit,\r\n    withdraw,\r\n    blockTime\r\n}) {\r\n    const SortBy = Object.freeze({\r\n        CreditMultiplier: 0,\r\n        DepositFee: 1,\r\n        CreditLiquidationRate: 2,\r\n        LiquidatorFee: 3,\r\n        Credited: 4\r\n    });\r\n\r\n    const SortDirection = Object.freeze({\r\n        Ascending: 0,\r\n        Descending: 1\r\n    });\r\n\r\n    const TokenType = Object.freeze({\r\n        All: 0,\r\n        Single: 1,\r\n        Liquidity: 2\r\n    });\r\n\r\n    const [activePools, setActivePools] = useState(farm.pools);\r\n    const [filter, setFilter] = useState();\r\n    const [sortBy, setSortBy] = useState(SortBy.CreditMultiplier);\r\n    const [sortDirection, setSortDirection] = useState(SortDirection.Descending);\r\n    const [tokenType, setTokenType] = useState(TokenType.All);\r\n\r\n    const format = $.format(farm.creditToken.details.decimals);\r\n\r\n    const totalLiquidityProvided = format.fromWei(farm.totalLiquidityProvided.total);\r\n    const totalCreditSupplied = farm.pools.reduce((sum, pool) => sum + format.fromWei(pool.totalPosition.credited, farm.creditToken.details.decimals), 0);\r\n\r\n    useEffect(() => {\r\n        const pools = farm.pools.filter(p => {\r\n            let found = true;\r\n\r\n            if (filter && filter.length > 0) {\r\n                const supportedSwapRouterName = getSupportedSwapRouterName($.chainId, p.pool);\r\n                const depositTokenSymbol = $.farm.getDepositTokenSymbol(p.pool);\r\n\r\n                found = contains(supportedSwapRouterName, filter) || contains(depositTokenSymbol, filter);\r\n            }\r\n\r\n            if (tokenType !== TokenType.All) {\r\n                if (tokenType === TokenType.Single) {\r\n                    found &= !p.pool.isLiquidityToken;\r\n                } else if (tokenType === TokenType.Liquidity) {\r\n                    found &= p.pool.isLiquidityToken;\r\n                }\r\n            }\r\n\r\n            return found;\r\n        });\r\n\r\n        pools.sort(function (a, b) {\r\n            let x;\r\n            let y;\r\n\r\n            if (sortDirection === SortDirection.Ascending) {\r\n                x = a;\r\n                y = b;\r\n            } else {\r\n                x = b;\r\n                y = a;\r\n            }\r\n\r\n            if (sortBy === SortBy.CreditMultiplier) {\r\n                return Web3.utils.toBN(x.creditMultiplier).cmp(Web3.utils.toBN(y.creditMultiplier));\r\n            }\r\n\r\n            if (sortBy === SortBy.DepositFee) {\r\n                return Web3.utils.toBN(x.depositFee.rate).cmp(Web3.utils.toBN(y.depositFee.rate));\r\n            }\r\n\r\n            if (sortBy === SortBy.CreditLiquidationRate) {\r\n                return Web3.utils.toBN(x.creditLiquidationRate).cmp(Web3.utils.toBN(y.creditLiquidationRate));\r\n            }\r\n\r\n            if (sortBy === SortBy.LiquidatorFee) {\r\n                return Web3.utils.toBN(x.liquidatorFee.rate).cmp(Web3.utils.toBN(y.liquidatorFee.rate));\r\n            }\r\n\r\n            if (sortBy === SortBy.Credited) {\r\n                return Web3.utils.toBN(x.senderPosition.credited).cmp(Web3.utils.toBN(y.senderPosition.credited));\r\n            }\r\n        });\r\n\r\n        // Pools where sender has deposits come first.\r\n        // TODO: Select the owners pools and append the rest so that they will appear at the top.\r\n        // pools.sort(function (a, b) {\r\n        //     return Web3.utils.toBN(b.pool.senderPosition.deposited).cmp(Web3.utils.toBN(a.pool.senderPosition.deposited));\r\n        // });\r\n\r\n        setActivePools(pools);\r\n    }, [filter, tokenType, sortBy, sortDirection, farm]);\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-x-2 gap-y-10\">\r\n            <div className=\"card bg-[#1e0f3c99] bg-diagonal-lines text-center\">\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                    <PriceBox\r\n                        title=\"Credit Token\"\r\n                        main={farm.creditToken.details.symbol}\r\n                        mainUnit=\"&nbsp;\"\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainClassName=\"font-display\"\r\n                        mainUnitClassName=\"mb-3\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Farm Pools\"\r\n                        main={$.convert.formatInteger(farm.pools.length)}\r\n                        mainUnit=\"&nbsp;\"\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainUnitClassName=\"mb-3\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Total Liquidity Added\"\r\n                        main={$.convert.formatCurrency(totalLiquidityProvided, Math.min(farm.creditToken.details.decimals, $.contracts.nativeToken.decimals))}\r\n                        mainUnit={`${farm.creditToken.details.symbol}/${$.contracts.nativeToken.symbol}`}\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainUnitClassName=\"!opacity-25 mb-3\"\r\n                    />\r\n                    <PriceBox\r\n                        title=\"Total Credit Supplied\"\r\n                        main={$.convert.formatCurrency(totalCreditSupplied, farm.creditToken.details.decimals)}\r\n                        mainUnit={farm.creditToken.details.symbol}\r\n                        isMainUnitOnTop={true}\r\n                        titleClassName=\"light-box\"\r\n                        mainUnitClassName=\"!opacity-25 mb-3\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card bg-[#1e0f3c99] bg-diagonal-lines\">\r\n                <div className=\"grid grid-cols-12 gap-x-2 gap-y-4 justify-between\">\r\n                    <div className=\"col-span-12\">\r\n                        <label htmlFor=\"price\">\r\n                            <TitleText title=\"Filter pools\" titleClassName=\"opacity-100 leading-6\" />\r\n                        </label>\r\n                        <DelayedInput\r\n                            delay={400}\r\n                            type=\"search\"\r\n                            id=\"filter\"\r\n                            className=\"!text-[1em] px-2\"\r\n                            placeholder=\"WEEB, Uniswap\"\r\n                            onInput={value => {\r\n                                console.log(`filter: ${value}`);\r\n                                setFilter(value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-span-12 xl:col-span-8 accent-violet-600\">\r\n                        <label>\r\n                            <TitleText title=\"Sort by\" titleClassName=\"opacity-100 leading-6\" />\r\n                        </label>\r\n                        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-x-2 gap-y-0.5 justify-between\">\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy1\" value={SortBy.CreditMultiplier} checked={sortBy === SortBy.CreditMultiplier} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy1\">\r\n                                    <TitleText title=\"Credit Multiplier\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy2\" value={SortBy.DepositFee} checked={sortBy === SortBy.DepositFee} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy2\">\r\n                                    <TitleText title=\"Deposit Fee\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy3\" value={SortBy.CreditLiquidationRate} checked={sortBy === SortBy.CreditLiquidationRate} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy3\">\r\n                                    <TitleText title=\"Credit Liq. Rate\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy4\" value={SortBy.LiquidatorFee} checked={sortBy === SortBy.LiquidatorFee} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy4\">\r\n                                    <TitleText title=\"Liquidator Fee\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-1\">\r\n                                <input className=\"w-4 h-4\" type=\"radio\" name=\"sortBy\" id=\"sortBy5\" value={SortBy.Credited} checked={sortBy === SortBy.Credited} onChange={onSortByChanged} />\r\n                                <label htmlFor=\"sortBy5\">\r\n                                    <TitleText title=\"Credited Amount\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-12 xl:col-span-4 accent-violet-600\">\r\n                        <div className=\"grid grid-cols-2 gap-x-2 gap-y-0.5 justify-between\">\r\n                            <div>\r\n                                <label>\r\n                                    <TitleText title=\"Sort direction\" titleClassName=\"opacity-100\" />\r\n                                </label>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"sortDirection\" id=\"sortDirection1\" value={SortDirection.Ascending} checked={sortDirection === SortDirection.Ascending} onChange={onSortDirectionChanged} />\r\n                                        <label htmlFor=\"sortDirection1\">\r\n                                            <TitleText title={(<i className=\"bi bi-sort-numeric-down text-[20px]\" />)} titleClassName=\"opacity-100 normal-case\" />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"sortDirection\" id=\"sortDirection2\" value={SortDirection.Descending} checked={sortDirection === SortDirection.Descending} onChange={onSortDirectionChanged} />\r\n                                        <label htmlFor=\"sortDirection2\">\r\n                                            <TitleText title={(<i className=\"bi bi-sort-numeric-down-alt text-[20px]\"></i>)} titleClassName=\"opacity-100 normal-case\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    <TitleText title=\"Token type\" titleClassName=\"opacity-100\" />\r\n                                </label>\r\n                                <div className=\"flex flex-wrap items-center gap-2\">\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"tokenType\" id=\"tokenType1\" value={TokenType.All} checked={tokenType === TokenType.All} onChange={onTokenTypeChanged} />\r\n                                        <label htmlFor=\"tokenType1\">\r\n                                            <TitleText title=\"All\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"tokenType\" id=\"tokenType2\" value={TokenType.Single} checked={tokenType === TokenType.Single} onChange={onTokenTypeChanged} />\r\n                                        <label htmlFor=\"tokenType2\">\r\n                                            <TitleText title=\"Single\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <input className=\"w-4 h-4\" type=\"radio\" name=\"tokenType\" id=\"tokenType3\" value={TokenType.Liquidity} checked={tokenType === TokenType.Liquidity} onChange={onTokenTypeChanged} />\r\n                                        <label htmlFor=\"tokenType3\">\r\n                                            <TitleText title=\"Liquidity\" titleClassName=\"opacity-100 normal-case text-[0.75em]\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-x-5 gap-y-10\">\r\n                {getFarmPools(activePools)}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function onTokenTypeChanged(e) {\r\n        const { name, value } = e.target;\r\n        setTokenType(parseInt(value));\r\n    }\r\n\r\n    function onSortByChanged(e) {\r\n        const { name, value } = e.target;\r\n        setSortBy(parseInt(value));\r\n    }\r\n\r\n    function onSortDirectionChanged(e) {\r\n        const { name, value } = e.target;\r\n        setSortDirection(parseInt(value));\r\n    }\r\n\r\n    function indexPools(pools) {\r\n        return pools.map((pool, poolId) => {\r\n            return { poolId, pool };\r\n        });\r\n    }\r\n\r\n    function getFarmPools(pools) {\r\n        const items = [];\r\n\r\n        pools.forEach((pool, i) => {\r\n            items.push((\r\n                <div key={i} className=\"max-h-full\">\r\n                    <FarmPool\r\n                        creditToken={farm.creditToken}\r\n                        pool={pool}\r\n                        nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                        deposit={depositTokenPriceInStableToken => deposit(pool.poolId, depositTokenPriceInStableToken)}\r\n                        withdraw={creditTokenPriceInStableToken => withdraw(pool.poolId, creditTokenPriceInStableToken)}\r\n                        blockTime={blockTime}\r\n                        currentBlock={farm.currentBlock}\r\n                    />\r\n                </div>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\n\r\nFarmPools.propTypes = {\r\n    borderBottom: PropTypes.string,\r\n    deposit: PropTypes.func,\r\n    withdraw: PropTypes.func,\r\n    rebalance: PropTypes.func,\r\n    liquidate: PropTypes.func\r\n};\r\n\r\nFarmPools.defaultProps = {\r\n    deposit: async (poolId, amount) => {\r\n    },\r\n    withdraw: async (poolId, amount) => {\r\n    },\r\n    rebalance: async (poolId) => {\r\n    },\r\n    liquidate: async (poolId) => {\r\n    }\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nimport { getSupportedSwapRouterName } from \"./FarmPoolExtensions\";\r\n\r\nimport { PriceBox, TitleText, MainText, DetailText, InfoText } from \"../InfoBox\";\r\n\r\n/*\r\n{\r\n    creditToken,\r\n    poolLiquidatable,\r\n    blockTime,\r\n    currentBlock\r\n}\r\n*/\r\nexport default class FarmLiquidatable extends Component {\r\n    static propTypes = {\r\n        liquidate: PropTypes.func,\r\n        blockTime: PropTypes.number\r\n    }\r\n\r\n    static defaultProps = {\r\n        liquidate: async () => {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isInteractionDisabled: {}\r\n        };\r\n\r\n        this.formatDepositToken = $.format(this.props.poolLiquidatable.pool.depositToken.details.decimals);\r\n        this.formatCreditToken = $.format(this.props.creditToken.details.decimals);\r\n\r\n        this.execute = this.execute.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const now = Date.now() / 1000;\r\n        const creditMultiplier = parseFloat(this.props.poolLiquidatable.pool.creditMultiplier) / 10000;\r\n        const depositFeeRate = parseFloat(this.props.poolLiquidatable.pool.depositFee.rate) / 10000;\r\n        const creditLiquidationRate = parseFloat(this.props.poolLiquidatable.pool.creditLiquidationRate) / 10000;\r\n        const liquidatorFeeRate = parseFloat(this.props.poolLiquidatable.pool.liquidatorFee.rate) / 10000;\r\n        const senderBalance = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.senderBalance);\r\n        const senderDeposited = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.deposited);\r\n        const senderCredited = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.credited);\r\n        const senderLiquidated = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.liquidated.total);\r\n        const senderCreditLiquidationLevel = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.senderPosition.creditLiquidationLevel);\r\n        const senderCurrentCredit = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.senderCurrentCredit);\r\n        const totalDeposited = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.totalPosition.deposited);\r\n        const totalCredited = this.formatCreditToken.fromWei(this.props.poolLiquidatable.pool.totalPosition.credited);\r\n        const totalLiquidated = this.formatDepositToken.fromWei(this.props.poolLiquidatable.pool.totalPosition.liquidated.total);\r\n        const seigniorageFee = parseFloat(this.props.poolLiquidatable.pool.seigniorageFee.rate) / 10000;\r\n        const seigniorageFeeCollected = $.convert.fromWeiNativeToken(this.props.poolLiquidatable.pool.seigniorageFee.collected.total);\r\n        const seignioryExplorerUri = `${Configuration.getBlockExplorerLink($.chainId)}/address/${this.props.poolLiquidatable.pool.seigniory}`;\r\n\r\n        let updatedBlockId = parseInt(this.props.poolLiquidatable.pool.senderPosition.updatedBlockId);\r\n        const senderTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        updatedBlockId = parseInt(this.props.poolLiquidatable.pool.totalPosition.updatedBlockId);\r\n        const totalTimeFromUpdate = updatedBlockId > 0 ? (parseInt(this.props.currentBlock) - updatedBlockId) * this.props.blockTime : 0;\r\n\r\n        const totalLiquidity = this.formatCreditToken.fromWei(this.props.poolLiquidatable.totalLiquidity.total);\r\n        const totalLiquidatorFee = this.formatCreditToken.fromWei(this.props.poolLiquidatable.totalLiquidatorFee.total);\r\n\r\n        const { fee, count } = this.getPoolSelfTotals(this.props.creditToken, this.props.poolLiquidatable);\r\n        const netLiquidatorFee = parseFloat(totalLiquidatorFee) - fee;\r\n\r\n        return (\r\n            <div className=\"card bg-[#1e0f3c80] bg-diagonal-lines\">\r\n                <div className=\"grid grid-cols-1 gap-y-4\">\r\n                    <div className=\"grid grid-cols-3 gap-x-2 gap-y-4 text-[80%]\">\r\n                        <PriceBox\r\n                            title=\"Deposit Token\"\r\n                            main={$.farm.getDepositTokenSymbol(this.props.poolLiquidatable.pool)}\r\n                            mainUnit={getSupportedSwapRouterName($.chainId, this.props.poolLiquidatable.pool)}\r\n                            isMainUnitOnTop={true}\r\n                            mainClassName=\"font-display\"\r\n                            mainUnitClassName=\"!opacity-25 mb-3 font-display\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Total Liquidity\"\r\n                            main={this.formatCreditToken.formatCurrency(totalLiquidity)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            info={(<><div className=\"flex justify-evenly space-x-1\"><span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(this.props.poolLiquidatable.totalLiquidity.count)}</span></div></>)}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                        <PriceBox\r\n                            title=\"Total Liquidator Fee\"\r\n                            main={this.formatCreditToken.formatCurrency(netLiquidatorFee)}\r\n                            mainUnit={this.props.creditToken.details.symbol}\r\n                            info={(<><div className=\"flex justify-evenly space-x-1\"><span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(parseInt(this.props.poolLiquidatable.totalLiquidatorFee.count) - count)}</span></div></>)}\r\n                            isMainUnitOnTop={true}\r\n                            mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            titleClassName=\"light-box\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-4 gap-x-2 gap-y-2 text-center text-[80%]\">\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Investor\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit={getSupportedSwapRouterName($.chainId, this.props.poolLiquidatable.pool)}\r\n                                isMainUnitOnTop={true}\r\n                                mainClassName=\"font-display\"\r\n                                mainUnitClassName=\"!opacity-25 mt-3 font-display\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Liquidity\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit={this.props.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mt-3\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Liquidator Fee\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit={this.props.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mt-3\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <TitleText title=\"Action\" titleClassName=\"light-box\" />\r\n                            <MainText\r\n                                mainUnit=\"&nbsp;\"\r\n                                isMainUnitOnTop={true}\r\n                                mainUnitClassName=\"!opacity-25 mt-3\"\r\n                            />\r\n                        </div>\r\n                        {this.getFarmLiquidatables(this.props.poolLiquidatable.pool.poolId, this.props.poolLiquidatable.investorLiquidatables)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Content generators\r\n    getActivity(count, timestamp, now) {\r\n        return (\r\n            <div className=\"flex justify-evenly space-x-1\">\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-app-indicator mr-1\" />{$.convert.formatInteger(count)}</span>\r\n                <span className=\"light-box w-full\"><i className=\"bi bi-clock mr-1\" />{timestamp > 0 ? $.convert.formatTimespan(now - timestamp) : \"-\"}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getFarmLiquidatables(poolId, investorLiquidatables) {\r\n        const items = [];\r\n\r\n        investorLiquidatables.forEach((investorLiquidatable, i) => {\r\n            items.push((\r\n                <Fragment key={i}>\r\n                    <div>\r\n                        <MainText\r\n                            main={$.convert.formatAccount(investorLiquidatable.investor)}\r\n                            mainClassName=\"text-[0.875em]\"\r\n                        />\r\n                        {investorLiquidatable.isSelf &&\r\n                            <div>\r\n                                <DetailText\r\n                                    detail=\"You\"\r\n                                    detailClassName=\"font-display rounded-lg bg-red-600 px-1\"\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <MainText main={this.formatCreditToken.formatCurrency(this.formatCreditToken.fromWei(investorLiquidatable.liquidity))}\r\n                    />\r\n                    <MainText main={investorLiquidatable.isSelf\r\n                        ? (<del>{this.formatCreditToken.formatCurrency(this.formatCreditToken.fromWei(investorLiquidatable.liquidatorFee))}</del>)\r\n                        : (this.formatCreditToken.formatCurrency(this.formatCreditToken.fromWei(investorLiquidatable.liquidatorFee)))\r\n                    }\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"h-7 btn btn-red px-2\"\r\n                        disabled={this.state.isInteractionDisabled[i]}\r\n                        onClick={async () => {\r\n                            await this.execute(i, () => $.farm.liquidateAccount(poolId, investorLiquidatable.investor));\r\n                        }}\r\n                    >\r\n                        Liquidate\r\n                    </button>\r\n                </Fragment>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    getPoolSelfTotals(creditToken, pool) {\r\n        const liquidatables = pool.investorLiquidatables.filter(i => i.isSelf);\r\n        const fee = liquidatables.reduce((sum, liquidatable) => sum + $.convert.fromWei(liquidatable.liquidatorFee, creditToken.details.decimals), 0);\r\n\r\n        return { fee, count: liquidatables.length };\r\n    }\r\n\r\n    async execute(i, func) {\r\n        this.setState((prevState, props) => ({\r\n            isInteractionDisabled: { ...prevState.isInteractionDisabled, [i]: true }\r\n        }));\r\n\r\n        try {\r\n            await func();\r\n        } catch (error) {\r\n            console.log(`${error.code}: ${error.message}`);\r\n        } finally {\r\n            this.setState((prevState, props) => ({\r\n                isInteractionDisabled: { ...prevState.isInteractionDisabled, [i]: false }\r\n            }));\r\n        }\r\n    }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Web3 from \"web3\";\r\n\r\nimport { fromWei } from \"../../utils/Web3Converter\";\r\nimport { formatInteger, formatCurrency } from \"../../utils/Format\";\r\n\r\nimport { PriceBox, TitleText, MainText, DetailText, InfoText } from \"../InfoBox\";\r\nimport FarmLiquidatable from \"./FarmLiquidatable\";\r\n\r\nexport default function FarmLiquidatables({\r\n    farm,\r\n    balance,\r\n    priceInStableToken,\r\n    nativeTokenPriceInStableToken,\r\n    blockTime,\r\n}) {\r\n    const [activePools, setActivePools] = useState(farm.poolLiquidatables);\r\n\r\n    const totalLiquidity = parseFloat(fromWei(farm.totalLiquidity.total, farm.creditToken.details.decimals));\r\n    const totalLiquidatorFee = parseFloat(fromWei(farm.totalLiquidatorFee.total, farm.creditToken.details.decimals));\r\n\r\n    useEffect(() => {\r\n        const pools = [...farm.poolLiquidatables];\r\n\r\n        pools.sort(function (a, b) {\r\n            return Web3.utils.toBN(b.totalLiquidity.total).cmp(Web3.utils.toBN(a.totalLiquidity.total));\r\n        });\r\n\r\n        // Pools where sender has deposits come first.\r\n        pools.sort(function (a, b) {\r\n            return Web3.utils.toBN(b.pool.senderPosition.deposited).cmp(Web3.utils.toBN(a.pool.senderPosition.deposited));\r\n        });\r\n\r\n        setActivePools(pools);\r\n    }, [farm]);\r\n\r\n    return (\r\n        <>\r\n            {activePools.length > 0\r\n                ? <>\r\n                    <div className=\"card bg-[#1e0f3c80] bg-diagonal-lines text-center\">\r\n                        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-x-2 gap-y-4 text-[80%]\">\r\n                            <PriceBox\r\n                                title=\"Credit Token\"\r\n                                main={farm.creditToken.details.symbol}\r\n                                mainUnit=\"&nbsp;\"\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainClassName=\"font-display\"\r\n                                mainUnitClassName=\"mb-3\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Liquidatable Pools\"\r\n                                main={formatInteger(farm.poolLiquidatables.length)}\r\n                                mainUnit=\"&nbsp;\"\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainUnitClassName=\"mb-3\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Total Liquidity\"\r\n                                main={formatCurrency(totalLiquidity, farm.creditToken.details.decimals)}\r\n                                mainUnit={farm.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            />\r\n                            <PriceBox\r\n                                title=\"Total Liquidator Fee\"\r\n                                main={formatCurrency(totalLiquidatorFee, farm.creditToken.details.decimals)}\r\n                                mainUnit={farm.creditToken.details.symbol}\r\n                                isMainUnitOnTop={true}\r\n                                titleClassName=\"light-box\"\r\n                                mainUnitClassName=\"!opacity-25 mb-3\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-x-5 gap-y-10\">\r\n                        {getFarmLiquidatables(activePools)}\r\n                    </div>\r\n                </>\r\n                : <div className=\"card bg-[#1e0f3c80] bg-diagonal-lines text-center\">\r\n                    <p className=\"light-box text-red-500 \">No liquidatable pools found.</p>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n\r\n    function getFarmLiquidatables(poolLiquidatables) {\r\n        const items = [];\r\n\r\n        poolLiquidatables.forEach((poolLiquidatable, i) => {\r\n            items.push((\r\n                <div key={i} className=\"max-h-full\">\r\n                    <div className=\"rounded-lg border-2 border-white/10\">\r\n                        <FarmLiquidatable\r\n                            creditToken={farm.creditToken}\r\n                            poolLiquidatable={poolLiquidatable}\r\n                            nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                            blockTime={blockTime}\r\n                            currentBlock={farm.currentBlock}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\nFarmLiquidatables.propTypes = {\r\n    liquidate: PropTypes.func\r\n};\r\n\r\nFarmLiquidatables.defaultProps = {\r\n    liquidate: async (poolId, investor) => {\r\n    }\r\n};\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function BuyCryptoDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={true}\r\n            body={(\r\n                <>\r\n                    <iframe\r\n                        src=\"https://widget.onramper.com?color=266677&apiKey=pk_test_x5M_5fdXzn1fxK04seu0JgFjGsu7CH8lOvS9xZWzuSM0\"\r\n                        height=\"595px\"\r\n                        width=\"100%\"\r\n                        title=\"Onramper widget\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\r\n                        className=\"rounded-lg\"\r\n                    >\r\n                        <a href=\"https://widget.onramper.com\" target=\"_blank\">Buy crypto</a>\r\n                    </iframe>\r\n                </>\r\n            )}\r\n            title=\"Buy crypto with credit card\"\r\n            hideSubmitButton={true}\r\n            hideCancelButton={true}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nimport Swap from \"../Swap\";\r\n\r\nexport default function SwapDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    nativeCoinBalance,\r\n    token,\r\n    nativeTokenPriceInStableToken,\r\n    swap,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={true}\r\n            body={(\r\n                <>\r\n                    <Swap\r\n                        isDarkTheme={true}\r\n                        nativeCoinBalance={nativeCoinBalance}\r\n                        token={token}\r\n                        nativeTokenPriceInStableToken={nativeTokenPriceInStableToken}\r\n                        swap={swap}\r\n                    />\r\n                </>\r\n            )}\r\n            title={`Buy-Sell ${token.details.symbol}`}\r\n            hideSubmitButton={true}\r\n            cancelButtonText=\"Close\"\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function ApproveRouterDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    submitted,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <p>The router contract needs to be approved <u>once</u>.</p>\r\n                    <p>Action will resume after approval.</p>\r\n                </>\r\n            )}\r\n            title=\"Approve the Router\"\r\n            submitButtonText=\"Approve\"\r\n            submitted={submitted}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function ApproveHarvesterDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    submitted,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <p>Harvesting of rewards is performed thru the game contract. A percentage of your pendig reward goes to a game of your choice and the rest is added to your balance.</p>\r\n                    <p>The game contract needs to be approved <u>once</u>.</p>\r\n                    <p>Action will resume after approval.</p>\r\n                </>\r\n            )}\r\n            title=\"Approve the Harvester\"\r\n            submitButtonText=\"Approve\"\r\n            submitted={submitted}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import { getOutcomeImage, getOutcomeText, getRandomizeText, getRandomInteger } from \"../GameExtensions\";\r\n\r\nexport default function OutcomeList({\r\n    outcomeCount,\r\n    defaultOutcome,\r\n    setOutcome\r\n}) {\r\n    function getOutcomeList() {\r\n        const items = [];\r\n\r\n        for (let outcome = 0; outcome < outcomeCount; ++outcome) {\r\n            const isActive = outcome === parseInt(defaultOutcome);\r\n\r\n            items.push((\r\n                <button\r\n                    key={outcome}\r\n                    type=\"button\"\r\n                    className={`group btn btn-outcome font-bold uppercase tracking-wide ${isActive ? \"active\" : \"\"} p-1`}\r\n                    onClick={() => setOutcome(outcome)}>\r\n                    {getOutcomeImage(parseInt(outcomeCount), outcome)}\r\n                    <div className={`text-[0.875em] mt-1 light-box group-active:text-violet-800 ${isActive ? \"text-violet-800\" : \"\"}`}>\r\n                        {getOutcomeText(parseInt(outcomeCount), outcome)}\r\n                    </div>\r\n                </button>\r\n            ));\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-y-3\">\r\n            <div className=\"flex items-start justify-center space-x-2 h-[180px]\">\r\n                {getOutcomeList()}\r\n            </div>\r\n\r\n            <div className=\"mx-auto text-[80%]\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-randomize w-16 h-9 text-violet-50 mt-3\"\r\n                    onClick={() => setOutcome(getRandomInteger(0, parseInt(outcomeCount)))}\r\n                >\r\n                    {getRandomizeText(parseInt(outcomeCount))}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import $ from \"../core/Services\";\r\n\r\nexport default function GameList({\r\n    games,\r\n    defaultGameId,\r\n    setGameId\r\n}) {\r\n    function getGameList() {\r\n        const items = [];\r\n        let i = 0;\r\n\r\n        games.forEach((game, gameId) => {\r\n            var isActive = false;\r\n\r\n            if (i++ === 0) {\r\n                if (defaultGameId === -1 || defaultGameId > games.length) {\r\n                    isActive = true;\r\n                }\r\n            }\r\n\r\n            let minimumBet;\r\n            let unit;\r\n\r\n            if (game.isPercentage) {\r\n                minimumBet = $.convert.formatPercentage(parseFloat(game.minimumBet) / 10000);\r\n                unit = \"%\";\r\n            } else {\r\n                minimumBet = $.convert.formatCurrency($.convert.fromWei(game.minimumBet, game.tokenInfo.details.decimals), game.tokenInfo.details.decimals);\r\n                unit = game.tokenInfo.details.symbol;\r\n            }\r\n\r\n            items.push((\r\n                <button\r\n                    key={gameId}\r\n                    className={`card btn btn-violet ${isActive || gameId === defaultGameId ? \"active\" : \"\"}`}\r\n                    onClick={e => {\r\n                        e.preventDefault();\r\n                        setGameId(gameId);\r\n                    }}>\r\n                    <div className=\"grid grid-cols-1 gap-y-1 text-center\">\r\n                        <h6 className=\"card-header-title-text font-semibold\">\r\n                            {game.name}\r\n                        </h6>\r\n                        <div className=\"text-[0.5625em] opacity-80\">\r\n                            <div>\r\n                                Draws every\r\n                                <span className=\"numeric mx-1 font-bold\">{game.blockLength}</span>\r\n                                blocks\r\n                            </div>\r\n                            <div>\r\n                                Min. bet is\r\n                                <span className=\"mx-1 font-bold\">\r\n                                    <span className=\"numeric\">{minimumBet}</span> {unit}\r\n                                </span>\r\n                                {game.isPercentage ? \"of the reward\" : \"\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-2 gap-x-2 gap-y-2 max-h-40 overflow-y-auto overflow-x-hidden section p-1\">\r\n            {getGameList()}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function PredefinedValueSelector({\r\n    predefinedValueListTitle,\r\n    userSuppliedValueTitle,\r\n    predefinedValues,\r\n    defaultValue,\r\n    isValidValue,\r\n    delay,\r\n    onInput\r\n}) {\r\n    const [input, setInput] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!input) {\r\n            setInput(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => onInput(input), delay);\r\n        return () => clearTimeout(timerId);\r\n    }, [input]);\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"flex flex-row items-center justify-start space-x-2 space-y-0\"> */}\r\n            <div className=\"flex flex-col sm:flex-row items-center justify-start sm:space-x-2 space-y-2 sm:space-y-0\">\r\n                <div className=\"flex flex-col justify-center w-full\">\r\n                    <label className=\"flex leading-6 mb-0.5\" htmlFor=\"predefinedValueList\">\r\n                        <span className=\"input-label\">\r\n                            {predefinedValueListTitle}\r\n                        </span>\r\n                    </label>\r\n                    <select\r\n                        id=\"predefinedValueList\"\r\n                        className=\"text-indigo-900 bg-indigo-900/10 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                        value={input}\r\n                        onChange={e => setInput(e.target.value)}\r\n                    >\r\n                        {predefinedValues}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"w-full\">\r\n                    <label className=\"flex leading-6 mb-0.5\" htmlFor=\"userSuppliedValue\">\r\n                        <span className=\"input-label\">\r\n                            {userSuppliedValueTitle}\r\n                        </span>\r\n                    </label>\r\n                    <input\r\n                        type=\"search\"\r\n                        id=\"userSuppliedValue\"\r\n                        className={`numeric text-indigo-900 bg-indigo-900/10 border-indigo-300/50 focus:ring-indigo-300/50 ${isValidValue ? \"\" : \"bg-red-300\"}`}\r\n                        value={input ?? \"\"}\r\n                        onChange={e => setInput(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nPredefinedValueSelector.propTypes = {\r\n    predefinedValueListTitle: PropTypes.string,\r\n    userSuppliedValueTitle: PropTypes.string,\r\n    predefinedValues: PropTypes.any,\r\n    defaultValue: PropTypes.string,\r\n    delay: PropTypes.number,\r\n    onInput: PropTypes.func\r\n}\r\n\r\nPredefinedValueSelector.defaultProps = {\r\n    delay: 400,\r\n    onInput: () => {\r\n    }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"../core/Services\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\nimport RangeInput from \"./core/RangeInput\";\r\nimport OutcomeList from \"./OutcomeList\";\r\nimport GameList from \"./GameList\";\r\nimport PredefinedValueSelector from \"./core/PredefinedValueSelector\";\r\n\r\nimport { MainText } from \"../../InfoBox\";\r\nimport { StyledPopover } from \"../../StyledPopover\";\r\n\r\n//import tokens from \"../../../tokens.json\";\r\n\r\nexport default function GameBetDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    title,\r\n    submitButtonText,\r\n    submitted,\r\n    canceled,\r\n    games,\r\n    defaultGameId,\r\n    defaultOutcome,\r\n    enableGameSelection,\r\n    enableAmountEntry,\r\n    token\r\n}) {\r\n    const [tokens, setTokens] = useState();\r\n    const [gameId, setGameId] = useState(defaultGameId);\r\n    const [outcome, setOutcome] = useState(defaultOutcome);\r\n    const [selectedToken, setSelectedToken] = useState();\r\n    const [tokenPriceInMainToken, setTokenPriceInMainToken] = useState(0);\r\n    const [tokenPriceInStableToken, setTokenPriceInStableToken] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [isValidAddress, setIsValidAddress] = useState();\r\n\r\n    console.log(`gameId: ${gameId} (${typeof gameId})`);\r\n    const game = games.get(gameId);\r\n\r\n    const tooltipHarvestDescriptionText = (\r\n        <div className=\"tooltip text-[80%]\">\r\n            <p>\r\n                Harvesting rewards though UI requires a minimum bet amount from the pending reward to be placed in a game.\r\n            </p>\r\n            <p>\r\n                The rest of the pending reward is added to your balance.\r\n            </p>\r\n            <p>\r\n                If you don't want to place a bet you need to trigger a transfer event either by claiming game prizes, placing bets, farming, liquidity hunting, etc. or by performing a manual wallet to wallet transfer.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    const tooltipPlaceBetDescriptionText = (\r\n        <div className=\"tooltip text-[80%]\">\r\n            <p>\r\n                Placing a bet will automatically harvest the pending reward.\r\n            </p>\r\n            <p>\r\n                You can bet with any token available in your wallet, including liquidity provider (LP) tokens. The conversion will be held automatically.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    if (outcome > game.outcomeCount) {\r\n        setOutcome(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ($.account) {\r\n            fetch($.settings.getTokenListUri(), {\r\n                headers: {\r\n                    \"X-API-Key\": Configuration.getMoralisApiKey()\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(values => {\r\n                    setTokens(values);\r\n                })\r\n                .catch((error) => {\r\n                    setTokens([]);\r\n                    console.log(error)\r\n                });\r\n        } else {\r\n            setTokens([]);\r\n        }\r\n    }, [$.account, $.chainId]);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <div className=\"grid grid-cols-1 gap-y-3\">\r\n                    {enableGameSelection &&\r\n                        <div>\r\n                            <span className=\"input-label\">\r\n                                Select a game:\r\n                            </span>\r\n                            <GameList\r\n                                games={games}\r\n                                defaultGameId={gameId}\r\n                                setGameId={setGameId}\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                    <div>\r\n                        <div>\r\n                            <span className=\"input-label\">\r\n                                Bet on an outcome:\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <OutcomeList\r\n                                outcomeCount={game.outcomeCount}\r\n                                defaultOutcome={outcome}\r\n                                setOutcome={setOutcome}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {!enableGameSelection && enableAmountEntry &&\r\n                        <div className=\"flex flex-col justify-between\">\r\n                            {tokens &&\r\n                                <PredefinedValueSelector\r\n                                    predefinedValueListTitle=\"Select the token to bet:\"\r\n                                    userSuppliedValueTitle=\"Or enter the token address:\"\r\n                                    predefinedValues={getTokenList()}\r\n                                    defaultValue={token.contractAddress}\r\n                                    isValidValue={isValidAddress}\r\n                                    delay={400}\r\n                                    onInput={async address => {\r\n                                        if (!Web3.utils.isAddress(address.toLowerCase())) {\r\n                                            setIsValidAddress(false);\r\n                                            console.log(`${address} is not a valid address.`);\r\n                                            return;\r\n                                        }\r\n\r\n                                        address = Web3.utils.toChecksumAddress(address);\r\n\r\n                                        setIsValidAddress(true);\r\n                                        setIsLoading(true);\r\n\r\n                                        try {\r\n                                            const results = await $.tokenFinder.findAll(address);\r\n\r\n                                            if (results.length == 0) {\r\n                                                return;\r\n                                            }\r\n\r\n                                            const i = getMaxReservesIndex(results);\r\n                                            const t = results[i];\r\n\r\n                                            setSelectedToken(t);\r\n\r\n                                            const tokenPriceInMainToken = await $.router.getTokenPriceInMainToken(address, t.info.details.decimals, t.isLiquidityToken);\r\n                                            setTokenPriceInMainToken(tokenPriceInMainToken);\r\n\r\n                                            const tokenPriceInStableToken = await $.router.getTokenPriceInStableToken(address, t.info.details.decimals, t.isLiquidityToken);\r\n                                            setTokenPriceInStableToken(tokenPriceInStableToken);\r\n                                        } catch (error) {\r\n                                            setSelectedToken(undefined);\r\n                                            console.error(\"Token selection error.\", error);\r\n                                        } finally {\r\n                                            setIsLoading(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                            <span className=\"text-[0.75em] font-medium text-right\">\r\n                                {isLoading\r\n                                    ? (<span className=\"animate-pulse\">Fetching...</span>)\r\n                                    : selectedToken ? `${selectedToken.info.details.name} @ ${Configuration.getSwapRouterName($.chainId, selectedToken.info.router)}` : \"-\"\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    }\r\n\r\n                    {enableAmountEntry &&\r\n                        <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                            <div className=\"flex items-center justify-between leading-6\">\r\n                                <span className=\"input-label\">\r\n                                    Amount:\r\n                                    <span className=\"ml-1\">\r\n                                        (\r\n                                        <MainText\r\n                                            main={$.convert.formatPercentage(percentage)}\r\n                                            mainUnit=\"%\"\r\n                                            mainClassName=\"text-[0.875em]\"\r\n                                            mainUnitClassName=\"ml-0.5\"\r\n                                        />\r\n                                        )\r\n                                    </span>\r\n                                </span>\r\n                                <span className=\"input-label\">\r\n                                    Balance:\r\n                                    <MainText\r\n                                        main={selectedToken ? $.convert.formatCurrency($.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals), selectedToken.info.details.decimals) : \"-\"}\r\n                                        mainUnit={selectedToken?.info.details.symbol}\r\n                                        mainClassName=\"text-[0.875em] ml-1\"\r\n                                        mainUnitClassName=\"ml-0.5\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                            <div className={`${isLoading ? \"animate-pulse\" : \"\"}`}>\r\n                                <RangeInput\r\n                                    isDisabled={isLoading}\r\n                                    min={0}\r\n                                    max={selectedToken ? $.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals) : 0}\r\n                                    decimals={selectedToken ? Math.min(4, selectedToken.info.details.decimals) : 0}\r\n                                    setValue={setAmount}\r\n                                    setPercentage={setPercentage}\r\n                                    valueClassName=\"text-indigo-900 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                                    rangeClassName=\"accent-indigo-900\"\r\n                                />\r\n                                <div className=\"grid grid-cols-2 gap-x-2 mt-3\">\r\n                                    <div className=\"justify-self-end\">\r\n                                        <MainText\r\n                                            main={$.convert.formatMainToken(amount * tokenPriceInMainToken)}\r\n                                            mainUnit={token.details.symbol}\r\n                                            mainClassName=\"text-[0.875em]\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"justify-self-start\">\r\n                                        <MainText\r\n                                            main={$.convert.formatStableToken(amount * tokenPriceInStableToken)}\r\n                                            mainUnit={$.contracts.stableToken.symbol}\r\n                                            mainClassName=\"text-[0.875em]\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )}\r\n            title={title}\r\n            info={(<StyledPopover isTooltip={true} children={enableAmountEntry ? tooltipPlaceBetDescriptionText : tooltipHarvestDescriptionText} icon=\"bi-info\" />)}\r\n            submitButtonText={submitButtonText}\r\n            isSubmitButtonDisabled={enableAmountEntry && (isLoading || amount <= 0)}\r\n            submitted={async () => {\r\n                await submitted(gameId, selectedToken, amount, outcome, game.tokenInfo);\r\n            }}\r\n            canceled={canceled}\r\n        />\r\n    );\r\n\r\n    function getMaxReservesIndex(results) {\r\n        if (results.length == 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let maxIndex;\r\n        let maxValue;\r\n\r\n        for (let i = 0; i < results.length; ++i) {\r\n            const reserve0 = $.convert.fromWei(results[i].reserveInfo.reserve0, results[i].info.details.decimals);\r\n            const reserve1 = $.convert.fromWei(results[i].reserveInfo.reserve1, results[i].info.details.decimals);\r\n\r\n            // Selected token's reserve is always returned as reserve0.\r\n            const price = reserve1 / reserve0;\r\n            const k = reserve0 * reserve1;\r\n\r\n            if (!maxValue || k > maxValue) {\r\n                maxIndex = i;\r\n                maxValue = k;\r\n            }\r\n        }\r\n\r\n        return maxIndex;\r\n    }\r\n\r\n    function getTokenList() {\r\n        const items = [\r\n            (<option key={\"\"} value=\"\">- Not in list -</option>),\r\n            (<option key={token.contractAddress} value={token.contractAddress}>{token.details.symbol}</option>)\r\n        ];\r\n\r\n        tokens.forEach(token => {\r\n            items.push((\r\n                <option key={token.address} value={token.address}>{token.symbol}</option>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    function getTokenList() {\r\n        const items = [\r\n            (<option key={\"\"} value=\"\">- Not in list -</option>),\r\n        ];\r\n\r\n        if (!tokens.map(t => t.token_address).includes(token.contractAddress)) {\r\n            items.push((<option key={token.contractAddress} value={token.contractAddress}>{token.details.symbol}</option>));\r\n        }\r\n\r\n        tokens.forEach(token => {\r\n            items.push((<option key={token.token_address} value={token.token_address}>{token.symbol}</option>));\r\n        });\r\n\r\n        return items;\r\n    }\r\n}\r\n","import ModalDialog from \"./core/ModalDialog\";\r\n\r\nexport default function ApproveFarmDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    submitted,\r\n    canceled\r\n}) {\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <p>The farm contract needs to be approved <u>once</u>.</p>\r\n                    <p>Action will resume after approval.</p>\r\n                </>\r\n            )}\r\n            title=\"Approve the Farm\"\r\n            submitButtonText=\"Approve\"\r\n            submitted={submitted}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport $ from \"../core/Services\";\r\n\r\nimport Configuration from \"../../../Configuration\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\nimport RangeInput from \"./core/RangeInput\";\r\nimport PredefinedValueSelector from \"./core/PredefinedValueSelector\";\r\n\r\nimport { MainText } from \"../../InfoBox\";\r\nimport { StyledPopover } from \"../../StyledPopover\";\r\n\r\n//import tokens from \"../../../tokens.json\";\r\n\r\nexport default function FarmDepositDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    title,\r\n    submitButtonText,\r\n    submitted,\r\n    canceled,\r\n    pool\r\n}) {\r\n\r\n    const [tokens, setTokens] = useState();\r\n    const [selectedToken, setSelectedToken] = useState();\r\n    const [tokenPriceInDepositToken, setTokenPriceInDepositToken] = useState(0);\r\n    const [tokenPriceInStableToken, setTokenPriceInStableToken] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [isValidAddress, setIsValidAddress] = useState();\r\n\r\n    const tooltipDescriptionText = (\r\n        <div className=\"tooltip text-[80%]\">\r\n            <p>\r\n                Harvesting rewards though UI requires a minimum bet amount from the pending reward to be placed in a game.\r\n            </p>\r\n            <p>\r\n                The rest of the pending reward is added to your balance.\r\n            </p>\r\n            <p>\r\n                If you don't want to place a bet you need to trigger a transfer event either by claiming game prizes, placing bets, farming, liquidity hunting, etc. or by performing a manual wallet to wallet transfer.\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n        if ($.account) {\r\n            fetch($.settings.getTokenListUri(), {\r\n                headers: {\r\n                    \"X-API-Key\": Configuration.getMoralisApiKey()\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(values => {\r\n                    setTokens(values);\r\n                })\r\n                .catch((error) => {\r\n                    setTokens([]);\r\n                    console.log(error)\r\n                });\r\n        } else {\r\n            setTokens([]);\r\n        }\r\n    }, [$.account, $.chainId]);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <div className=\"grid grid-cols-1 gap-y-3\">\r\n                    <div className=\"flex flex-col justify-between\">\r\n                        {tokens &&\r\n                            <PredefinedValueSelector\r\n                                predefinedValueListTitle=\"Select the token to bet:\"\r\n                                userSuppliedValueTitle=\"Or enter the token address:\"\r\n                                predefinedValues={getTokenList()}\r\n                                defaultValue={pool.depositToken.token}\r\n                                isValidValue={isValidAddress}\r\n                                delay={400}\r\n                                onInput={async address => {\r\n                                    if (!Web3.utils.isAddress(address.toLowerCase())) {\r\n                                        setIsValidAddress(false);\r\n                                        console.log(`${address} is not a valid address.`);\r\n                                        return;\r\n                                    }\r\n\r\n                                    address = Web3.utils.toChecksumAddress(address);\r\n\r\n                                    setIsValidAddress(true);\r\n                                    setIsLoading(true);\r\n\r\n                                    try {\r\n                                        const results = await $.tokenFinder.findAll(address);\r\n\r\n                                        if (results.length == 0) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        const i = getMaxReservesIndex(results);\r\n                                        const t = results[i];\r\n\r\n                                        setSelectedToken(t);\r\n\r\n                                        const tokenPriceInDepositToken = await $.farm.getTokenPriceInDepositToken(t, pool);\r\n                                        setTokenPriceInDepositToken(tokenPriceInDepositToken);\r\n\r\n                                        const tokenPriceInStableToken = await $.iziSwap.getTokenPriceInStableToken(address, t.info.details.decimals, t.isLiquidityToken);\r\n                                        setTokenPriceInStableToken(tokenPriceInStableToken);\r\n                                    } catch (error) {\r\n                                        setSelectedToken(undefined);\r\n                                        console.error(\"Token selection error.\", error);\r\n                                    } finally {\r\n                                        setIsLoading(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                        }\r\n                        <span className=\"text-[0.75em] font-medium text-right\">\r\n                            {isLoading\r\n                                ? (<span className=\"animate-pulse\">Fetching...</span>)\r\n                                : selectedToken ? `${getDepositTokenSymbol(selectedToken)} @ ${Configuration.getSwapRouterName($.chainId, selectedToken.info.router)}` : \"-\"\r\n                            }\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 gap-y-0.5\">\r\n                        <div className=\"flex items-center justify-between leading-6\">\r\n                            <span className=\"input-label\">\r\n                                Amount:\r\n                                <span className=\"ml-1\">\r\n                                    (\r\n                                    <MainText\r\n                                        main={$.convert.formatPercentage(percentage)}\r\n                                        mainUnit=\"%\"\r\n                                        mainClassName=\"text-[0.875em]\"\r\n                                        mainUnitClassName=\"ml-0.5\"\r\n                                    />\r\n                                    )\r\n                                </span>\r\n                            </span>\r\n                            <span className=\"input-label\">\r\n                                Balance:\r\n                                <MainText\r\n                                    main={selectedToken ? $.convert.formatCurrency($.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals), selectedToken.info.details.decimals) : \"-\"}\r\n                                    mainUnit={selectedToken ? getDepositTokenSymbol(selectedToken) : \"-\"}\r\n                                    mainClassName=\"text-[0.875em] ml-1\"\r\n                                    mainUnitClassName=\"ml-0.5\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className={`${isLoading ? \"animate-pulse\" : \"\"}`}>\r\n                            <RangeInput\r\n                                isDisabled={isLoading}\r\n                                min={0}\r\n                                max={selectedToken ? $.convert.fromWei(selectedToken.senderBalance, selectedToken.info.details.decimals) : 0}\r\n                                decimals={selectedToken ? Math.min(4, selectedToken.info.details.decimals) : 0}\r\n                                setValue={setAmount}\r\n                                setPercentage={setPercentage}\r\n                                valueClassName=\"text-indigo-900 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                                rangeClassName=\"accent-indigo-900\"\r\n                            />\r\n                            <div className=\"grid grid-cols-2 gap-x-2 mt-3\">\r\n                                <div className=\"justify-self-end\">\r\n                                    <MainText\r\n                                        main={$.convert.formatDepositToken(amount * tokenPriceInDepositToken, pool)}\r\n                                        mainUnit={$.farm.getDepositTokenSymbol(pool)}\r\n                                        mainClassName=\"text-[0.875em]\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"justify-self-start\">\r\n                                    <MainText\r\n                                        main={$.convert.formatStableToken(amount * tokenPriceInStableToken)}\r\n                                        mainUnit={$.contracts.stableToken.symbol}\r\n                                        mainClassName=\"text-[0.875em]\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            title={title}\r\n            info={(<StyledPopover isTooltip={true} children={tooltipDescriptionText} icon=\"bi-info\" />)}\r\n            submitButtonText={submitButtonText}\r\n            isSubmitButtonDisabled={isLoading || amount <= 0}\r\n            submitted={async () => {\r\n                const depositTokenAmountInWei = $.convert.toWei(amount * tokenPriceInDepositToken, pool.depositToken.details.decimals);\r\n                await submitted(selectedToken, amount, depositTokenAmountInWei);\r\n            }}\r\n            canceled={canceled}\r\n        />\r\n    );\r\n\r\n    function getMaxReservesIndex(results) {\r\n        if (results.length == 0) {\r\n            return undefined;\r\n        }\r\n\r\n        let maxIndex;\r\n        let maxValue;\r\n\r\n        for (let i = 0; i < results.length; ++i) {\r\n            const reserve0 = $.convert.fromWei(results[i].reserveInfo.reserve0, results[i].info.details.decimals);\r\n            const reserve1 = $.convert.fromWei(results[i].reserveInfo.reserve1, results[i].info.details.decimals);\r\n\r\n            // Selected token's reserve is always returned as reserve0.\r\n            const price = reserve1 / reserve0;\r\n            const k = reserve0 * reserve1;\r\n\r\n            if (!maxValue || k > maxValue) {\r\n                maxIndex = i;\r\n                maxValue = k;\r\n            }\r\n        }\r\n\r\n        return maxIndex;\r\n    }\r\n\r\n    function getTokenList() {\r\n        const items = [\r\n            (<option key={\"\"} value=\"\">- Not in list -</option>),\r\n        ];\r\n\r\n        if (!tokens.map(t => t.token_address).includes(pool.depositToken.token)) {\r\n            items.push((<option key={pool.depositToken.token} value={pool.depositToken.token}>{$.farm.getDepositTokenSymbol(pool)}</option>));\r\n        }\r\n\r\n        tokens.forEach(token => {\r\n            items.push((<option key={token.token_address} value={token.token_address}>{token.symbol}</option>));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    function getDepositTokenSymbol(token) {\r\n        return token.isLiquidityToken ? `${token.token0Details.symbol}/${token.token1Details.symbol}` : token.info.details.symbol;\r\n    }\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport $ from \"../core/Services\";\r\n\r\nimport { MainText } from \"../../InfoBox\";\r\n\r\nimport ModalDialog from \"./core/ModalDialog\";\r\nimport RangeInput from \"./core/RangeInput\";\r\n\r\nexport default function AmountSelectionDialog({\r\n    isOpen,\r\n    setIsOpen,\r\n    title,\r\n    submitButtonText,\r\n    submitted,\r\n    canceled,\r\n    balance,\r\n    priceInStableToken,\r\n    decimals\r\n}) {\r\n    const [amount, setAmount] = useState(0);\r\n    const [percentage, setPercentage] = useState(0);\r\n\r\n    return (\r\n        <ModalDialog\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            disableBackgroundCancel={false}\r\n            body={(\r\n                <>\r\n                    <div className=\"flex items-center justify-between input-label\">\r\n                        <span>\r\n                            Amount: (<span className=\"numeric\">{$.convert.formatPercentage(percentage)}%</span>)\r\n                        </span>\r\n                        <span>\r\n                            Balance: <span className=\"numeric\">{$.convert.formatCurrency(balance, decimals)}</span>\r\n                        </span>\r\n                    </div>\r\n                    <RangeInput\r\n                        min={0}\r\n                        max={balance}\r\n                        decimals={decimals}\r\n                        setValue={setAmount}\r\n                        setPercentage={setPercentage}\r\n                        valueClassName=\"text-indigo-900 border-indigo-300/50 focus:ring-indigo-300/50\"\r\n                        rangeClassName=\"accent-indigo-900\"\r\n                    />\r\n                    <div className=\"mt-3 text-center\">\r\n                        <MainText\r\n                            main={priceInStableToken ? $.convert.formatMainToken(amount * priceInStableToken) : \"-\"}\r\n                            mainUnit={$.contracts.stableToken.symbol}\r\n                            mainClassName=\"text-[0.875em]\" />\r\n                    </div>\r\n                </>\r\n            )}\r\n            title={title}\r\n            submitButtonText={submitButtonText}\r\n            submitted={() => submitted(amount)}\r\n            canceled={canceled}\r\n        />\r\n    )\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\n\r\nimport { WalletContext } from \"../../contexts/WalletContext\";\r\n\r\nimport { createSignerContract } from \"./core/Contracts\";\r\nimport $ from \"./core/Services\";\r\n\r\nimport IERC20 from \"./abi/IERC20.json\";\r\nimport IUniswapV2Pair from \"./abi/IUniswapV2Pair.json\";\r\n\r\nimport Token from \"./Token\";\r\nimport Swap from \"./Swap\";\r\nimport Transfer from \"./Transfer\";\r\nimport TokenCalculators from \"./TokenCalculators\";\r\nimport Game from \"./Game\";\r\nimport FarmPools from \"./FarmPools\";\r\nimport FarmLiquidatables from \"./FarmLiquidatables\";\r\n\r\nimport BuyCryptoDialog from \"./dialogs/BuyCryptoDialog\";\r\nimport SwapDialog from \"./dialogs/SwapDialog\";\r\nimport ApproveRouterDialog from \"./dialogs/ApproveRouterDialog\";\r\nimport ApproveHarvesterDialog from \"./dialogs/ApproveHarvesterDialog\";\r\nimport GameBetDialog from \"./dialogs/GameBetDialog\";\r\nimport ApproveFarmDialog from \"./dialogs/ApproveFarmDialog\";\r\nimport FarmDepositDialog from \"./dialogs/FarmDepositDialog\";\r\nimport AmountSelectionDialog from \"./dialogs/AmountSelectionDialog\";\r\n\r\nimport { ShowComponentType } from \"./Enums\";\r\n\r\nexport default class Main extends Component {\r\n    static propTypes = {\r\n        interval: PropTypes.number\r\n    }\r\n\r\n    static defaultProps = {\r\n        interval: undefined /* will force avg. block time calculation */,\r\n        showComponent: ShowComponentType.Token\r\n    };\r\n\r\n    static contextType = WalletContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            blockTime: undefined,\r\n            tokenPriceInStableToken: undefined,\r\n            tokenPriceInNativeToken: undefined,\r\n            nativeTokenPriceInStableToken: undefined,\r\n            token: undefined,\r\n            games: undefined,\r\n            farm: undefined,\r\n\r\n            showBuyCryptoDialog: false,\r\n            showSwapDialog: false,\r\n            showRouterApproveDialog: {\r\n                show: false,\r\n                callback: null\r\n            },\r\n            showGameApproveDialog: {\r\n                show: false,\r\n                callback: null\r\n            },\r\n            showGameHarvestDialog: {\r\n                show: false,\r\n                balance: 0,\r\n                callback: null\r\n            },\r\n            showGameCompoundDialog: {\r\n                show: false,\r\n                gameId: -1,\r\n                balance: 0,\r\n                callback: null\r\n            },\r\n            showGameBetDialog: {\r\n                show: false,\r\n                gameId: -1,\r\n                balance: 0,\r\n                callback: null\r\n            },\r\n            showFarmApproveDialog: {\r\n                show: false,\r\n                callback: null\r\n            },\r\n            showFarmDepositDialog: {\r\n                show: false,\r\n                symbol: null,\r\n                balance: 0,\r\n                depositTokenPriceInStableToken: 0,\r\n                callback: null\r\n            },\r\n            showFarmWithdrawDialog: {\r\n                show: false,\r\n                symbol: null,\r\n                balance: 0,\r\n                creditTokenPriceInStableToken: 0,\r\n                callback: null\r\n            },\r\n\r\n            showToken: (props.showComponent & ShowComponentType.Token) === ShowComponentType.Token,\r\n            showGames: (props.showComponent & ShowComponentType.Games) === ShowComponentType.Games,\r\n            showFarms: (props.showComponent & ShowComponentType.Farms) === ShowComponentType.Farms,\r\n            showLiquidatables: (props.showComponent & ShowComponentType.Liquidatables) === ShowComponentType.Liquidatables,\r\n        }\r\n\r\n        this.blockLength = 10;\r\n\r\n        this.onTick = this.onTick.bind(this);\r\n\r\n        this.showComponent = this.showComponent.bind(this);\r\n\r\n        this.swap = this.swap.bind(this);\r\n        this.harvestPendingReward = this.harvestPendingReward.bind(this);\r\n        this.gameBet = this.gameBet.bind(this);\r\n        this.gameCompound = this.gameCompound.bind(this);\r\n        this.farmDeposit = this.farmDeposit.bind(this);\r\n        this.farmWithdraw = this.farmWithdraw.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopTimer();\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n\r\n        if (this.props.showComponent != prevProps.showComponent) {\r\n            this.showComponent(this.props.showComponent);\r\n        }\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (this.context.chainId /*&& this.context.account #to make the reader work with disconnected account, at least to get the price*/) {\r\n                if (this.context.reader) {\r\n                    $.init(this.context);\r\n\r\n                    if (!this.timerId) {\r\n                        const blockTime = this.props.interval ?? (await $.block.getAverageBlockTime(this.blockLength) * 1000);\r\n                        this.startTimer(blockTime);\r\n\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                if (this.context.signer) {\r\n                    $.init(this.context);\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    startTimer(blockTime) {\r\n        this.timerId = setInterval(async () => await this.onTick(), blockTime);\r\n        console.log(`Started timer: ${this.timerId}; Interval: ${blockTime} ms`);\r\n    }\r\n\r\n    stopTimer() {\r\n        const timerId = this.timerId;\r\n\r\n        if (timerId) {\r\n            clearInterval(timerId);\r\n            this.timerId = undefined;\r\n\r\n            console.log(`Stopped timer: ${timerId}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHomePage = !this.state.showGames && !this.state.showFarms && !this.state.showLiquidatables;\r\n\r\n        return (\r\n            <main className=\"mt-3 grid grid-cols-1 gap-y-10 mx-auto\">\r\n                {(this.state.showToken && this.state.token)\r\n                    ? <Fragment key={\"token\"}>\r\n                        <Token\r\n                            showCompact={true}\r\n                            showHeader={isHomePage}\r\n                            showHarvestButton={isHomePage || this.state.showGames}\r\n                            token={this.state.token}\r\n                            priceInNativeToken={this.state.tokenPriceInNativeToken}\r\n                            priceInStableToken={this.state.tokenPriceInStableToken}\r\n                            harvestPendingReward={this.harvestPendingReward}\r\n                            blockTime={this.state.blockTime}\r\n                        />\r\n                    </Fragment>\r\n                    : this.state.showToken && <Spinner title=\"Loading token snapshot\" />\r\n                }\r\n\r\n                {!isHomePage &&\r\n                    <div className=\"flex items-center justify-between gap-x-5\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className={`w-40 h-9 px-3 ${this.state.showToken ? \"-my-5\" : \"\"} font-semibold btn btn-indigo-right text-[80%]`}\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    showBuyCryptoDialog: true\r\n                                });\r\n                            }}\r\n                        >\r\n                            Buy Crypto <i className=\"bi bi-credit-card\" />\r\n                        </button>\r\n\r\n                        {this.state.token &&\r\n                            <button\r\n                                type=\"button\"\r\n                                className={`w-40 h-9 px-3 ${this.state.showToken ? \"-my-5\" : \"\"} font-semibold btn btn-rose text-[80%]`}\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        showSwapDialog: true\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Buy {$.contracts.token.symbol}\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n                {(this.state.showToken && isHomePage) && this.state.token && this.state.tokenPriceInNativeToken && this.state.tokenPriceInStableToken &&\r\n                    <>\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-5 gap-y-10\">\r\n                            <div className={`card bg-weeb-card1/20 bg-diagonal-lines`}>\r\n                                <Swap\r\n                                    nativeCoinBalance={this.context.balance}\r\n                                    token={this.state.token}\r\n                                    nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                                    swap={async (amount, minReceived, recipient, isBuy) => {\r\n                                        try {\r\n                                            await this.swap(amount, minReceived, recipient, isBuy);\r\n                                        } catch (error) {\r\n                                            alert(JSON.stringify(error));\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className={`card bg-weeb-card1/20 bg-diagonal-lines`}>\r\n                                <Transfer\r\n                                    balance={$.convert.fromWeiMainToken(this.state.token.senderFreeBalance)}\r\n                                    transfer={async (recipient, amount) => {\r\n                                        try {\r\n                                            await $.token.transfer(recipient, amount);\r\n                                        } catch (error) {\r\n                                            alert(JSON.stringify(error));\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-1 gap-y-5\">\r\n                            <div className=\"flex items-center justify-center group-title opacity-75 light-box h-9 px-2\">\r\n                                <span>Calculators</span>\r\n                            </div>\r\n                            <TokenCalculators\r\n                                token={this.state.token}\r\n                                priceInNativeToken={this.state.tokenPriceInNativeToken}\r\n                                priceInStableToken={this.state.tokenPriceInStableToken}\r\n                                blockTime={this.state.blockTime}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                }\r\n                {((this.state.showGames && this.state.showToken) && this.state.token && this.state.games)\r\n                    ? <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-x-5 gap-y-10\">\r\n                        {this.getGameCards()}\r\n                    </div>\r\n                    : (this.state.showGames && this.state.showToken) && <Spinner type=\"cloud\" />\r\n                }\r\n                {(this.state.showFarms && this.state.token && this.state.farm)\r\n                    ? <FarmPools\r\n                        farm={this.state.farm}\r\n                        nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                        deposit={this.farmDeposit}\r\n                        withdraw={this.farmWithdraw}\r\n                        blockTime={this.state.blockTime}\r\n                    />\r\n                    : this.state.showFarms && <Spinner type=\"cloud\" />\r\n                }\r\n                {(this.state.showLiquidatables && this.state.token && this.state.farmLiquidatables)\r\n                    ? <Fragment key={\"farmLiquidatables\"}>\r\n                        <FarmLiquidatables\r\n                            farm={this.state.farmLiquidatables}\r\n                            nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                            blockTime={this.state.blockTime}\r\n                            buyWeeb={this.farmBuyWeebInternal}\r\n                        />\r\n                    </Fragment>\r\n                    : this.state.showLiquidatables && <Spinner type=\"cloud\" />\r\n                }\r\n                {this.state.showBuyCryptoDialog &&\r\n                    <BuyCryptoDialog\r\n                        isOpen={this.state.showBuyCryptoDialog}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showBuyCryptoDialog: false\r\n                            });\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showBuyCryptoDialog: false\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showSwapDialog &&\r\n                    <SwapDialog\r\n                        isOpen={this.state.showSwapDialog}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showSwapDialog: false\r\n                            });\r\n                        }}\r\n                        nativeCoinBalance={this.context.balance}\r\n                        token={this.state.token}\r\n                        nativeTokenPriceInStableToken={this.state.nativeTokenPriceInStableToken}\r\n                        swap={async (amount, minReceived, recipient, isBuy) => {\r\n                            try {\r\n                                await this.swap(amount, minReceived, recipient, isBuy);\r\n                            } catch (error) {\r\n                                alert(JSON.stringify(error));\r\n                            }\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showSwapDialog: false\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showRouterApproveDialog.show &&\r\n                    <ApproveRouterDialog\r\n                        isOpen={this.state.showRouterApproveDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showRouterApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        submitted={async () => {\r\n                            const callback = this.state.showRouterApproveDialog.callback;\r\n                            this.setState({\r\n                                showRouterApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback();\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showRouterApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showGameApproveDialog.show &&\r\n                    <ApproveHarvesterDialog\r\n                        isOpen={this.state.showGameApproveDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        submitted={async () => {\r\n                            const callback = this.state.showGameApproveDialog.callback;\r\n                            this.setState({\r\n                                showGameApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback();\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showGameHarvestDialog.show &&\r\n                    <GameBetDialog\r\n                        isOpen={this.state.showGameHarvestDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameHarvestDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title=\"Harvest Pending Reward\"\r\n                        submitButtonText=\"Harvest\"\r\n                        submitted={async (gameId, selectedToken, amount, outcome, tokenInfo) => {\r\n                            const callback = this.state.showGameHarvestDialog.callback;\r\n                            this.setState({\r\n                                showGameHarvestDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(gameId, outcome);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameHarvestDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        games={this.state.games}\r\n                        defaultGameId={\"0\"}\r\n                        defaultOutcome={\"0\"}\r\n                        balance={this.state.showGameHarvestDialog.balance}\r\n                        enableGameSelection={true}\r\n                        enableAmountEntry={false}\r\n                        token={this.state.token}\r\n                    />\r\n                }\r\n                {this.state.showGameCompoundDialog.show &&\r\n                    <GameBetDialog\r\n                        isOpen={this.state.showGameCompoundDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameCompoundDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title=\"Compound / Bet the Prize\"\r\n                        submitButtonText=\"Bet\"\r\n                        submitted={async (gameId, selectedToken, amount, outcome, tokenInfo) => {\r\n                            const callback = this.state.showGameCompoundDialog.callback;\r\n                            this.setState({\r\n                                showGameCompoundDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(gameId, outcome);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameCompoundDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        games={this.state.games}\r\n                        defaultGameId={this.state.showGameCompoundDialog.gameId}\r\n                        defaultOutcome={0}\r\n                        balance={this.state.showGameCompoundDialog.balance}\r\n                        enableGameSelection={false}\r\n                        enableAmountEntry={false}\r\n                        token={this.state.token}\r\n                    />\r\n                }\r\n                {this.state.showGameBetDialog.show &&\r\n                    <GameBetDialog\r\n                        isOpen={this.state.showGameBetDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showGameBetDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title=\"Place a Bet\"\r\n                        submitButtonText=\"Bet\"\r\n                        submitted={async (gameId, selectedToken, amount, outcome, tokenInfo) => {\r\n                            const callback = this.state.showGameBetDialog.callback;\r\n                            this.setState({\r\n                                showGameBetDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(gameId, selectedToken, amount, outcome, tokenInfo);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showGameBetDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        games={this.state.games}\r\n                        defaultGameId={this.state.showGameBetDialog.gameId}\r\n                        defaultOutcome={0}\r\n                        balance={this.state.showGameBetDialog.balance}\r\n                        enableGameSelection={false}\r\n                        enableAmountEntry={true}\r\n                        token={this.state.token}\r\n                    />\r\n                }\r\n                {this.state.showFarmApproveDialog.show &&\r\n                    <ApproveFarmDialog\r\n                        isOpen={this.state.showFarmApproveDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showFarmApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        submitted={async () => {\r\n                            const callback = this.state.showFarmApproveDialog.callback;\r\n                            this.setState({\r\n                                showFarmApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback();\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showFarmApproveDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                    />\r\n                }\r\n                {this.state.showFarmDepositDialog.show &&\r\n                    <FarmDepositDialog\r\n                        isOpen={this.state.showFarmDepositDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showFarmDepositDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title={`Deposit (${this.state.showFarmDepositDialog.symbol})`}\r\n                        submitButtonText=\"Deposit\"\r\n                        submitted={async (selectedToken, selectedTokenAmount, depositTokenAmountInWei) => {\r\n                            const callback = this.state.showFarmDepositDialog.callback;\r\n                            this.setState({\r\n                                showFarmDepositDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(selectedToken, selectedTokenAmount, depositTokenAmountInWei);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showFarmDepositDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        pool={this.state.showFarmDepositDialog.pool}\r\n\r\n                    />\r\n                }\r\n                {this.state.showFarmWithdrawDialog.show &&\r\n                    <AmountSelectionDialog\r\n                        isOpen={this.state.showFarmWithdrawDialog.show}\r\n                        setIsOpen={() => {\r\n                            this.setState({\r\n                                showFarmWithdrawDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        title={`Withdraw (${this.state.showFarmWithdrawDialog.symbol})`}\r\n                        submitButtonText=\"Withdraw\"\r\n                        submitted={async (amount) => {\r\n                            const callback = this.state.showFarmWithdrawDialog.callback;\r\n                            this.setState({\r\n                                showFarmWithdrawDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                            await callback(amount);\r\n                        }}\r\n                        canceled={() => {\r\n                            this.setState({\r\n                                showFarmWithdrawDialog: {\r\n                                    show: false\r\n                                }\r\n                            });\r\n                        }}\r\n                        balance={this.state.showFarmWithdrawDialog.balance}\r\n                        priceInStableToken={this.state.showFarmWithdrawDialog.creditTokenPriceInStableToken}\r\n                        decimals={4}\r\n                    />\r\n                }\r\n            </main>\r\n        );\r\n    }\r\n\r\n    async onTick() {\r\n        try {\r\n            const [\r\n                blockTime,\r\n                tokenPriceInStableToken,\r\n                nativeTokenPriceInStableToken,\r\n                reserves,\r\n                token,\r\n                games,\r\n                farm,\r\n                farmLiquidatables\r\n            ] = await Promise.all([\r\n                $.block.getAverageBlockTime(this.blockLength),\r\n                $.router.getMainTokenPriceInStableToken(),\r\n                $.router.getNativeTokenPriceInStableToken(),\r\n                $.pair.getMainTokenReserves(),\r\n                $.token.getTokenSnapshot(),\r\n                this.state.showToken ? $.game.getSnapshots(1) : Promise.resolve(undefined),\r\n                this.state.showFarms ? $.farm.getSnapshot(1) : Promise.resolve(undefined),\r\n                this.state.showLiquidatables ? $.farm.getLiquidatablesSnapshot(255/*All*/) : Promise.resolve(undefined)\r\n            ]);\r\n\r\n            let map;\r\n\r\n            if (this.state.showToken) {\r\n                map = new Map();\r\n\r\n                for (let i = 0; i < games.length; ++i) {\r\n                    map.set(games[i].gameId, games[i]);\r\n                    // if (games[i].isEnabled === true && equals(games[i].tokenInfo.token, $.contracts.token.address)) {\r\n                    //     map.set(i, games[i]);\r\n                    // }\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                blockTime,\r\n                tokenPriceInStableToken,\r\n                tokenPriceInNativeToken: reserves.nativeTokenReserve / reserves.tokenReserve,\r\n                nativeTokenPriceInStableToken,\r\n                token: {\r\n                    ...token,\r\n                    contractAddress: $.contracts.token.address,\r\n                    tokenReserve: reserves.tokenReserve,\r\n                    nativeTokenReserve: reserves.nativeTokenReserve,\r\n                    ...$.pair.getMainTokenInitialReserves()\r\n                },\r\n                games: map,\r\n                farm: this.state.showFarms ? farm : undefined,\r\n                farmLiquidatables: this.state.showLiquidatables ? farmLiquidatables : undefined\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    showComponent(componentType) {\r\n        this.setState({\r\n            showToken: (componentType & ShowComponentType.Token) === ShowComponentType.Token,\r\n            showGames: (componentType & ShowComponentType.Games) === ShowComponentType.Games,\r\n            showFarms: (componentType & ShowComponentType.Farms) === ShowComponentType.Farms,\r\n            showLiquidatables: (componentType & ShowComponentType.Liquidatables) === ShowComponentType.Liquidatables\r\n        });\r\n    }\r\n\r\n    // Content generators\r\n    getGameCards() {\r\n        const balance = $.convert.fromWeiNativeToken(this.state.token.senderFreeBalance);\r\n        const items = [];\r\n\r\n        this.state.games.forEach(game => {\r\n            items.push((\r\n                <div key={game.gameId} className=\"max-h-full\">\r\n                    <Game\r\n                        game={game}\r\n                        balance={balance}\r\n                        priceInStableToken={this.state.tokenPriceInStableToken}\r\n                        bet={() => this.gameBet(game.gameId)}\r\n                        compound={() => this.gameCompound(game.gameId)}\r\n                        claim={() => $.game.claim(game.gameId)}\r\n                        senderPoolSnapshots={(offset, count) => $.game.getSenderPoolSnapshots(game.gameId, offset, count)}\r\n                        blockTime={this.state.blockTime}\r\n                    />\r\n                </div>\r\n            ));\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    // Actions\r\n    async swap(amount, minReceived, recipient, isBuy) {\r\n        if (isBuy) {\r\n            await $.router.swapNativeTokenForMainToken(amount, minReceived, recipient);\r\n        } else {\r\n            if (await $.token.isAllowanceSatisfied($.readers.router.options.address, $.convert.toWeiMainToken(amount))) {\r\n                await $.router.swapMainTokenForNativeToken(amount, minReceived, recipient);\r\n\r\n                return;\r\n            }\r\n\r\n            const callback = async () => {\r\n                if (!(await $.token.isAllowanceSatisfied($.readers.router.options.address, $.convert.toWeiMainToken(amount)))) {\r\n                    await $.token.approveRouter();\r\n                }\r\n\r\n                await $.router.swapMainTokenForNativeToken(amount, minReceived, recipient);\r\n            };\r\n\r\n            this.setState({\r\n                showRouterApproveDialog: {\r\n                    show: true,\r\n                    callback\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async harvestPendingReward() {\r\n        if (this.state.token.isDirectlyHarvestable) {\r\n            await $.token.harvestPendingReward();\r\n        } else {\r\n            if (!this.state.games || this.state.games.size === 0) {\r\n                console.log(\"No game found.\");\r\n                return;\r\n            }\r\n\r\n            const callback = async (gameId, outcome) => {\r\n                if (!(await $.game.isAllowanceSatisfied(this.state.token.senderPendingReward))) {\r\n                    this.setState({\r\n                        showGameApproveDialog: {\r\n                            show: true,\r\n                            callback: async () => {\r\n                                await $.token.approveGame();\r\n                                await $.game.harvestPendingReward(gameId, outcome);\r\n\r\n                                this.showComponent(ShowComponentType.Token | ShowComponentType.Games);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    await $.game.harvestPendingReward(gameId, outcome);\r\n\r\n                    this.showComponent(ShowComponentType.Token | ShowComponentType.Games);\r\n                }\r\n            };\r\n\r\n            this.setState({\r\n                showGameHarvestDialog: {\r\n                    show: true,\r\n                    balance: $.convert.fromWeiMainToken(this.state.token.senderFreeBalance),\r\n                    callback\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async gameBet(selectedGameId) {\r\n        const callback = async (gameId, sourceToken, sourceAmount, outcome, gameTokenInfo) => {\r\n            if (!(await $.game.isAllowanceSatisfied(this.state.token.senderPendingReward))) {\r\n                this.setState({\r\n                    showGameApproveDialog: {\r\n                        show: true,\r\n                        callback: async () => {\r\n                            await $.token.approveGame();\r\n                            await $.game.bet(gameId, sourceToken, sourceAmount, outcome, gameTokenInfo);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                await $.game.bet(gameId, sourceToken, sourceAmount, outcome, gameTokenInfo);\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            showGameBetDialog: {\r\n                show: true,\r\n                gameId: selectedGameId,\r\n                balance: $.convert.fromWeiMainToken(this.state.token.senderFreeBalance),\r\n                callback\r\n            }\r\n        });\r\n    }\r\n\r\n    async gameCompound(selectedGameId) {\r\n        const callback = async (gameId, outcome) => {\r\n            if (!(await $.game.isAllowanceSatisfied(this.state.token.senderPendingReward))) {\r\n                this.setState({\r\n                    showGameApproveDialog: {\r\n                        show: true,\r\n                        callback: async () => {\r\n                            await $.token.approveGame();\r\n                            await $.game.compound(gameId, outcome);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                await $.game.compound(gameId, outcome);\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            showGameCompoundDialog: {\r\n                show: true,\r\n                gameId: selectedGameId,\r\n                balance: $.convert.fromWeiMainToken(this.state.token.senderFreeBalance),\r\n                callback\r\n            }\r\n        });\r\n    }\r\n\r\n    async farmDeposit(selectedPoolId, depositTokenPriceInStableToken) {\r\n        const pool = this.state.farm.pools[selectedPoolId];\r\n\r\n        const callback = async (selectedToken, selectedTokenAmount, depositTokenAmountInWei) => {\r\n            if (!(await $.farm.isAllowanceSatisfied(pool, depositTokenAmountInWei))) {\r\n                this.setState({\r\n                    showFarmApproveDialog: {\r\n                        show: true,\r\n                        callback: async () => {\r\n                            const signer = createSignerContract($.signer, pool.isLiquidityToken ? IUniswapV2Pair : IERC20, pool.depositToken.token, { from: $.account });\r\n\r\n                            await $.farm.approveFarm(signer);\r\n                            await $.farm.deposit(selectedPoolId, selectedToken, selectedTokenAmount, pool);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                await $.farm.deposit(selectedPoolId, selectedToken, selectedTokenAmount, pool);\r\n            }\r\n        };\r\n\r\n        this.setState({\r\n            showFarmDepositDialog: {\r\n                show: true,\r\n                symbol: $.farm.getDepositTokenSymbol(pool),\r\n                balance: $.convert.fromWei(pool.senderBalance, pool.depositToken.details.decimals),\r\n                depositTokenPriceInStableToken,\r\n                pool,\r\n                callback\r\n            }\r\n        });\r\n    }\r\n\r\n    async farmWithdraw(selectedPoolId, creditTokenPriceInStableToken) {\r\n        const pool = this.state.farm.pools[selectedPoolId];\r\n\r\n        const callback = async (amount) => {\r\n            const amountInWei = $.convert.toWei(amount, this.state.farm.creditToken.details.decimals);\r\n            await $.farm.withdraw(selectedPoolId, amountInWei);\r\n        };\r\n\r\n        this.setState({\r\n            showFarmWithdrawDialog: {\r\n                show: true,\r\n                symbol: $.farm.getDepositTokenSymbol(pool),\r\n                balance: $.convert.fromWei(pool.senderPosition.credited, this.state.farm.creditToken.details.decimals),\r\n                creditTokenPriceInStableToken,\r\n                callback\r\n            }\r\n        });\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { WalletContext } from \"../../contexts/WalletContext\";\r\n\r\nimport Configuration from \"../../Configuration\";\r\n\r\nimport $ from \"./core/Services\";\r\n\r\nexport default class Test extends Component {\r\n    static contextType = WalletContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            executing: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component mount.\");\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        if (await this.initialize()) {\r\n            console.log(\"Initialized on component update.\");\r\n        }\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.isInitializing) {\r\n            return false;\r\n        }\r\n\r\n        this.isInitializing = true;\r\n\r\n        try {\r\n            if (this.context.chainId) {\r\n                if (this.context.reader || this.context.signer) {\r\n                    $.init(this.context);\r\n\r\n                    return true;\r\n\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } finally {\r\n            this.isInitializing = false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const chainId = Configuration.getDefaultChainId();\r\n        const chain = Configuration.getChain(chainId);\r\n        const chainName = chain.name;\r\n        const nativeCurrencyName = undefined;\r\n        const nativeCurrencySymbol = chain.nativeCoin.symbol;\r\n        const nativeCurrencyDecimals = chain.nativeCoin.decimals;\r\n        const rpcUrl = Configuration.getRpcUri(chainId);\r\n        const blockExplorerUrl = undefined;\r\n        const iconUrls = undefined;\r\n\r\n        return (\r\n            <div className=\"flex flex-col justify-center items-center gap-10\">\r\n                <h3 className=\"font-bold mt-5 -mb-5\">Test Node Settings</h3>\r\n\r\n                <div className=\"flex flex-col gap-1 w-full p-3 rounded-xl bg-indigo-900\">\r\n                    <span className=\"font-bold text-indigo-300\">Network Name:</span>\r\n                    <span>{chainName}</span>\r\n\r\n                    <span className=\"font-bold text-indigo-300 mt-3\">New RPC URL:</span>\r\n                    <span>{rpcUrl}</span>\r\n\r\n                    <span className=\"font-bold text-indigo-300 mt-3\">Chain ID:</span>\r\n                    <span>{chainId}</span>\r\n\r\n                    <span className=\"font-bold text-indigo-300 mt-3\">Currency Symbol:</span>\r\n                    <span>{nativeCurrencySymbol}</span>\r\n\r\n                    <span className=\"font-bold text-indigo-300 mt-3\">Block Explorer URL:</span>\r\n                    <span>{blockExplorerUrl ?? \"Leave empty\"}</span>\r\n                </div>\r\n\r\n                {this.context.self.isInjectedProviderInstalled &&\r\n                    <div className=\"text-center\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-indigo p-2 w-72 font-semibold\"\r\n                            onClick={async () => {\r\n                                await this.switchOrAddEthereumChain();\r\n                            }}\r\n                        >\r\n                            Add Test Chain to Wallet\r\n                        </button>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"mt-10 text-center\">\r\n                    <button\r\n                        disabled={$.account && !this.state.executing ? false : true}\r\n                        type=\"button\"\r\n                        className=\"btn btn-rose p-2 w-72 font-semibold\"\r\n                        onClick={async () => {\r\n                            this.setState({\r\n                                executing: true\r\n                            });\r\n\r\n                            const response = await fetch(/*\"https://node.weebfi.com:2083/send\"*/\"http://127.0.0.1:5000/send\", {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    ta: $.contracts.token.address,\r\n                                    ts: $.contracts.token.symbol,\r\n                                    td: $.contracts.token.decimals,\r\n                                    ra: $.account\r\n                                }) // body data type must match \"Content-Type\" header\r\n                            });\r\n\r\n                            this.setState({\r\n                                executing: false\r\n                            });\r\n\r\n                            const rx = await response.json();\r\n                            console.log(rx);\r\n\r\n                            alert(JSON.stringify(rx, null, ' '));\r\n                        }}\r\n                    >\r\n                        Send Test Tokens\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async switchOrAddEthereumChain() {\r\n        const chainId = Configuration.getDefaultChainId();\r\n        const chain = Configuration.getChain(chainId);\r\n        const chainName = chain.name;\r\n        const nativeCurrencyName = undefined;\r\n        const nativeCurrencySymbol = chain.nativeCoin.symbol;\r\n        const nativeCurrencyDecimals = chain.nativeCoin.decimals;\r\n        const rpcUrls = [Configuration.getRpcUri(chainId)];\r\n        const blockExplorerUrls = undefined;\r\n        const iconUrls = undefined;\r\n\r\n        await this.context.self.switchOrAddEthereumChain(\r\n            chainId,\r\n            chainName,\r\n            nativeCurrencyName,\r\n            nativeCurrencySymbol,\r\n            nativeCurrencyDecimals,\r\n            rpcUrls,\r\n            blockExplorerUrls,\r\n            iconUrls\r\n        );\r\n    }\r\n}\r\n","import { Routes as BrowserRoutes, Route } from \"react-router-dom\";\r\n\r\nimport Main from \"./dapp/Main\";\r\nimport { ShowComponentType } from \"./dapp/Enums\";\r\n\r\nimport Test from \"./dapp/Test\";\r\n\r\n// export function Token() {\r\n//     return (<Main showComponent={ShowComponentType.Token} />);\r\n// }\r\n\r\n// export function Games() {\r\n//     return (<Main showComponent={ShowComponentType.Token | ShowComponentType.Games} />);\r\n// }\r\n\r\n// export function Farms() {\r\n//     return (<Main showComponent={ShowComponentType.Token | ShowComponentType.Farms} />);\r\n// }\r\n\r\n// export function Liquidatables() {\r\n//     return (<Main showComponent={ShowComponentType.Liquidatables} />);\r\n// }\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRoutes>\r\n            <Route path=\"/\" element={<Main showComponent={ShowComponentType.Token} />} />\r\n            <Route path=\"Games\" element={<Main showComponent={ShowComponentType.Token | ShowComponentType.Games} />} />\r\n            <Route path=\"Farms\" element={<Main showComponent={ShowComponentType.Token | ShowComponentType.Farms} />} />\r\n            <Route path=\"Observer\" element={<Main showComponent={ShowComponentType.Liquidatables} />} />\r\n            \r\n            <Route path=\"/Test\" element={<Test />} />\r\n        </BrowserRoutes>\r\n    )\r\n}\r\n","export default function Footer() {\r\n    return (\r\n        <div className=\"pt-16 pb-6\">\r\n            <div className=\"flex flex-row items-center justify-center space-x-10 text-[28px]\">\r\n                <a href=\"https://twitter.com/WeebFi\" target=\"_blank\">\r\n                    <i className=\"bi bi-twitter\"></i>\r\n                </a>\r\n                <a href=\"https://t.me/WeebFi\" target=\"_blank\">\r\n                    <i className=\"bi bi-telegram\"></i>\r\n                </a>\r\n                {/* <i class=\"bi bi-github\"></i>\r\n                <i class=\"bi bi-discord\"></i> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport WalletProvider from \"./contexts/WalletContext\";\nimport Navbar from \"./components/Navbar\";\nimport Routes from \"./components/Routes\";\nimport Footer from \"./components/Footer\";\n\nimport { createClamps } from \"./utils/Utils\";\n\nfunction App() {\n  return (\n    // <pre>\n    //   {createClamps()}\n    // </pre>\n    <BrowserRouter>\n      <div className=\"lg:container mx-auto p-2 h-screen\">\n        <div className=\"bubble-set\">\n          <div className=\"bubble-lg\"></div>\n          <div className=\"bubble-md\"></div>\n          <div className=\"bubble-sm\"></div>\n        </div>\n        <WalletProvider>\n          <div className=\"flex flex-col justify-between h-full\">\n            <div className=\"lg:text-[18px]\">\n              <Navbar />\n              <Routes />\n            </div>\n            <Footer />\n          </div>\n        </WalletProvider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap-icons/font/bootstrap-icons.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}